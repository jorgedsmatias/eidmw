/* ACServiceH.h
   Generated by gSOAP 2.8.28 from SCAP-ACService.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef ACServiceH_H
#define ACServiceH_H
#include "ACServiceStub.h"

namespace ACService {
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);
SOAP_FMAC3 void * SOAP_FMAC4 ACService_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 ACService_fdelete(struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 ACService_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 ACService_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_ACService_byte
#define SOAP_TYPE_ACService_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ACService::soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( ((data) ? (ACService::soap_default_byte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_int
#define SOAP_TYPE_ACService_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ACService::soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( ((data) ? (ACService::soap_default_int(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_unsignedByte
#define SOAP_TYPE_ACService_unsignedByte (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ACService::soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( ((data) ? (ACService::soap_default_unsignedByte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_unsignedByte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_unsignedInt
#define SOAP_TYPE_ACService_unsignedInt (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ACService::soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( ((data) ? (ACService::soap_default_unsignedInt(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_unsignedInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* _ns6__SigningTime is a typedef synonym for ns6__SigningTimeType */

#ifndef SOAP_TYPE_ACService__ns6__SigningTime
#define SOAP_TYPE_ACService__ns6__SigningTime (243)
#endif

#define soap_default__ns6__SigningTime(soap, a) soap_default_ns6__SigningTimeType(soap, a)


#define soap__ns6__SigningTime2s soap_ns6__SigningTimeType2s


#define soap_out__ns6__SigningTime soap_out_ns6__SigningTimeType


#define soap_s2_ns6__SigningTime soap_s2ns6__SigningTimeType


#define soap_in__ns6__SigningTime soap_in_ns6__SigningTimeType


#define soap_put__ns6__SigningTime soap_put_ns6__SigningTimeType


#define soap_write__ns6__SigningTime soap_write_ns6__SigningTimeType


#define soap_get__ns6__SigningTime soap_get_ns6__SigningTimeType


#define soap_read__ns6__SigningTime soap_read_ns6__SigningTimeType


#ifndef SOAP_TYPE_ACService_ns6__ProducedAtType
#define SOAP_TYPE_ACService_ns6__ProducedAtType (120)
#endif

#define soap_default_ns6__ProducedAtType(soap, a) soap_default_dateTime(soap, a)


#define soap_ns6__ProducedAtType2s soap_dateTime2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__ProducedAtType(struct soap*, const char*, int, const time_t *, const char*);

#define soap_s2ns6__ProducedAtType soap_s2dateTime

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_ns6__ProducedAtType(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns6__ProducedAtType(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_ns6__ProducedAtType
#define soap_write_ns6__ProducedAtType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ACService::soap_put_ns6__ProducedAtType(soap, data, "ns6:ProducedAtType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_ns6__ProducedAtType(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_ns6__ProducedAtType
#define soap_read_ns6__ProducedAtType(soap, data) ( ((data) ? (ACService::soap_default_ns6__ProducedAtType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__ProducedAtType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__IssueTimeType
#define SOAP_TYPE_ACService_ns6__IssueTimeType (117)
#endif

#define soap_default_ns6__IssueTimeType(soap, a) soap_default_dateTime(soap, a)


#define soap_ns6__IssueTimeType2s soap_dateTime2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__IssueTimeType(struct soap*, const char*, int, const time_t *, const char*);

#define soap_s2ns6__IssueTimeType soap_s2dateTime

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_ns6__IssueTimeType(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns6__IssueTimeType(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_ns6__IssueTimeType
#define soap_write_ns6__IssueTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ACService::soap_put_ns6__IssueTimeType(soap, data, "ns6:IssueTimeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_ns6__IssueTimeType(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_ns6__IssueTimeType
#define soap_read_ns6__IssueTimeType(soap, data) ( ((data) ? (ACService::soap_default_ns6__IssueTimeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__IssueTimeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__SigningTimeType
#define SOAP_TYPE_ACService_ns6__SigningTimeType (114)
#endif

#define soap_default_ns6__SigningTimeType(soap, a) soap_default_dateTime(soap, a)


#define soap_ns6__SigningTimeType2s soap_dateTime2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__SigningTimeType(struct soap*, const char*, int, const time_t *, const char*);

#define soap_s2ns6__SigningTimeType soap_s2dateTime

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_ns6__SigningTimeType(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns6__SigningTimeType(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_ns6__SigningTimeType
#define soap_write_ns6__SigningTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ACService::soap_put_ns6__SigningTimeType(soap, data, "ns6:SigningTimeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_ns6__SigningTimeType(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_ns6__SigningTimeType
#define soap_read_ns6__SigningTimeType(soap, data) ( ((data) ? (ACService::soap_default_ns6__SigningTimeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__SigningTimeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_dateTime
#define SOAP_TYPE_ACService_dateTime (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_dateTime(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_dateTime
#define soap_write_dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ACService::soap_put_dateTime(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_dateTime
#define soap_read_dateTime(soap, data) ( ((data) ? (ACService::soap_default_dateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* _ns7__SVG is a typedef synonym for ns7__SVGType */

#ifndef SOAP_TYPE_ACService__ns7__SVG
#define SOAP_TYPE_ACService__ns7__SVG (273)
#endif

#define soap_default__ns7__SVG(soap, a) (a)->ns7__SVGType::soap_default(soap)


#define soap_serialize__ns7__SVG(soap, a) (a)->soap_serialize(soap)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns7__SVG(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in__ns7__SVG(struct soap*, const char*, xsd__base64Binary *, const char*);

#define soap_instantiate__ns7__SVG soap_instantiate_ns7__SVGType


#define soap_new__ns7__SVG soap_new_ns7__SVGType


#define soap_new_req__ns7__SVG soap_new_req_ns7__SVGType


#define soap_new_set__ns7__SVG soap_new_set_ns7__SVGType


#define soap_put__ns7__SVG soap_put_ns7__SVGType


#define soap_write__ns7__SVG soap_write_ns7__SVGType


#define soap_get__ns7__SVG soap_get_ns7__SVGType


#define soap_read__ns7__SVG soap_read_ns7__SVGType

/* _ns7__SVGList is a typedef synonym for ns7__SVGListType */

#ifndef SOAP_TYPE_ACService__ns7__SVGList
#define SOAP_TYPE_ACService__ns7__SVGList (272)
#endif

#define soap_default__ns7__SVGList(soap, a) (a)->ns7__SVGListType::soap_default(soap)


#define soap_serialize__ns7__SVGList(soap, a) (a)->soap_serialize(soap)


#define soap__ns7__SVGList2s soap_ns7__SVGListType2s


#define soap_out__ns7__SVGList soap_out_ns7__SVGListType


#define soap_s2_ns7__SVGList soap_s2ns7__SVGListType


#define soap_in__ns7__SVGList soap_in_ns7__SVGListType


#define soap_instantiate__ns7__SVGList soap_instantiate_ns7__SVGListType


#define soap_new__ns7__SVGList soap_new_ns7__SVGListType


#define soap_new_req__ns7__SVGList soap_new_req_ns7__SVGListType


#define soap_new_set__ns7__SVGList soap_new_set_ns7__SVGListType


#define soap_put__ns7__SVGList soap_put_ns7__SVGListType


#define soap_write__ns7__SVGList soap_write_ns7__SVGListType


#define soap_get__ns7__SVGList soap_get_ns7__SVGListType


#define soap_read__ns7__SVGList soap_read_ns7__SVGListType

/* _ns6__ArchiveTimeStamp is a typedef synonym for ns6__ArchiveTimeStampType */

#ifndef SOAP_TYPE_ACService__ns6__ArchiveTimeStamp
#define SOAP_TYPE_ACService__ns6__ArchiveTimeStamp (271)
#endif

#define soap_default__ns6__ArchiveTimeStamp(soap, a) (a)->ns6__ArchiveTimeStampType::soap_default(soap)


#define soap_serialize__ns6__ArchiveTimeStamp(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__ArchiveTimeStamp2s soap_ns6__ArchiveTimeStampType2s


#define soap_out__ns6__ArchiveTimeStamp soap_out_ns6__ArchiveTimeStampType


#define soap_s2_ns6__ArchiveTimeStamp soap_s2ns6__ArchiveTimeStampType


#define soap_in__ns6__ArchiveTimeStamp soap_in_ns6__ArchiveTimeStampType


#define soap_instantiate__ns6__ArchiveTimeStamp soap_instantiate_ns6__ArchiveTimeStampType


#define soap_new__ns6__ArchiveTimeStamp soap_new_ns6__ArchiveTimeStampType


#define soap_new_req__ns6__ArchiveTimeStamp soap_new_req_ns6__ArchiveTimeStampType


#define soap_new_set__ns6__ArchiveTimeStamp soap_new_set_ns6__ArchiveTimeStampType


#define soap_put__ns6__ArchiveTimeStamp soap_put_ns6__ArchiveTimeStampType


#define soap_write__ns6__ArchiveTimeStamp soap_write_ns6__ArchiveTimeStampType


#define soap_get__ns6__ArchiveTimeStamp soap_get_ns6__ArchiveTimeStampType


#define soap_read__ns6__ArchiveTimeStamp soap_read_ns6__ArchiveTimeStampType

/* _ns6__EncapsulatedOCSPValue is a typedef synonym for ns6__EncapsulatedOCSPValueType */

#ifndef SOAP_TYPE_ACService__ns6__EncapsulatedOCSPValue
#define SOAP_TYPE_ACService__ns6__EncapsulatedOCSPValue (270)
#endif

#define soap_default__ns6__EncapsulatedOCSPValue(soap, a) (a)->ns6__EncapsulatedOCSPValueType::soap_default(soap)


#define soap_serialize__ns6__EncapsulatedOCSPValue(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__EncapsulatedOCSPValue2s soap_ns6__EncapsulatedOCSPValueType2s


#define soap_out__ns6__EncapsulatedOCSPValue soap_out_ns6__EncapsulatedOCSPValueType


#define soap_s2_ns6__EncapsulatedOCSPValue soap_s2ns6__EncapsulatedOCSPValueType


#define soap_in__ns6__EncapsulatedOCSPValue soap_in_ns6__EncapsulatedOCSPValueType


#define soap_instantiate__ns6__EncapsulatedOCSPValue soap_instantiate_ns6__EncapsulatedOCSPValueType


#define soap_new__ns6__EncapsulatedOCSPValue soap_new_ns6__EncapsulatedOCSPValueType


#define soap_new_req__ns6__EncapsulatedOCSPValue soap_new_req_ns6__EncapsulatedOCSPValueType


#define soap_new_set__ns6__EncapsulatedOCSPValue soap_new_set_ns6__EncapsulatedOCSPValueType


#define soap_put__ns6__EncapsulatedOCSPValue soap_put_ns6__EncapsulatedOCSPValueType


#define soap_write__ns6__EncapsulatedOCSPValue soap_write_ns6__EncapsulatedOCSPValueType


#define soap_get__ns6__EncapsulatedOCSPValue soap_get_ns6__EncapsulatedOCSPValueType


#define soap_read__ns6__EncapsulatedOCSPValue soap_read_ns6__EncapsulatedOCSPValueType

/* _ns6__OCSPValues is a typedef synonym for ns6__OCSPValuesType */

#ifndef SOAP_TYPE_ACService__ns6__OCSPValues
#define SOAP_TYPE_ACService__ns6__OCSPValues (269)
#endif

#define soap_default__ns6__OCSPValues(soap, a) (a)->ns6__OCSPValuesType::soap_default(soap)


#define soap_serialize__ns6__OCSPValues(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__OCSPValues2s soap_ns6__OCSPValuesType2s


#define soap_out__ns6__OCSPValues soap_out_ns6__OCSPValuesType


#define soap_s2_ns6__OCSPValues soap_s2ns6__OCSPValuesType


#define soap_in__ns6__OCSPValues soap_in_ns6__OCSPValuesType


#define soap_instantiate__ns6__OCSPValues soap_instantiate_ns6__OCSPValuesType


#define soap_new__ns6__OCSPValues soap_new_ns6__OCSPValuesType


#define soap_new_req__ns6__OCSPValues soap_new_req_ns6__OCSPValuesType


#define soap_new_set__ns6__OCSPValues soap_new_set_ns6__OCSPValuesType


#define soap_put__ns6__OCSPValues soap_put_ns6__OCSPValuesType


#define soap_write__ns6__OCSPValues soap_write_ns6__OCSPValuesType


#define soap_get__ns6__OCSPValues soap_get_ns6__OCSPValuesType


#define soap_read__ns6__OCSPValues soap_read_ns6__OCSPValuesType

/* _ns6__EncapsulatedCRLValue is a typedef synonym for ns6__EncapsulatedCRLValueType */

#ifndef SOAP_TYPE_ACService__ns6__EncapsulatedCRLValue
#define SOAP_TYPE_ACService__ns6__EncapsulatedCRLValue (268)
#endif

#define soap_default__ns6__EncapsulatedCRLValue(soap, a) (a)->ns6__EncapsulatedCRLValueType::soap_default(soap)


#define soap_serialize__ns6__EncapsulatedCRLValue(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__EncapsulatedCRLValue2s soap_ns6__EncapsulatedCRLValueType2s


#define soap_out__ns6__EncapsulatedCRLValue soap_out_ns6__EncapsulatedCRLValueType


#define soap_s2_ns6__EncapsulatedCRLValue soap_s2ns6__EncapsulatedCRLValueType


#define soap_in__ns6__EncapsulatedCRLValue soap_in_ns6__EncapsulatedCRLValueType


#define soap_instantiate__ns6__EncapsulatedCRLValue soap_instantiate_ns6__EncapsulatedCRLValueType


#define soap_new__ns6__EncapsulatedCRLValue soap_new_ns6__EncapsulatedCRLValueType


#define soap_new_req__ns6__EncapsulatedCRLValue soap_new_req_ns6__EncapsulatedCRLValueType


#define soap_new_set__ns6__EncapsulatedCRLValue soap_new_set_ns6__EncapsulatedCRLValueType


#define soap_put__ns6__EncapsulatedCRLValue soap_put_ns6__EncapsulatedCRLValueType


#define soap_write__ns6__EncapsulatedCRLValue soap_write_ns6__EncapsulatedCRLValueType


#define soap_get__ns6__EncapsulatedCRLValue soap_get_ns6__EncapsulatedCRLValueType


#define soap_read__ns6__EncapsulatedCRLValue soap_read_ns6__EncapsulatedCRLValueType

/* _ns6__CRLValues is a typedef synonym for ns6__CRLValuesType */

#ifndef SOAP_TYPE_ACService__ns6__CRLValues
#define SOAP_TYPE_ACService__ns6__CRLValues (267)
#endif

#define soap_default__ns6__CRLValues(soap, a) (a)->ns6__CRLValuesType::soap_default(soap)


#define soap_serialize__ns6__CRLValues(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CRLValues2s soap_ns6__CRLValuesType2s


#define soap_out__ns6__CRLValues soap_out_ns6__CRLValuesType


#define soap_s2_ns6__CRLValues soap_s2ns6__CRLValuesType


#define soap_in__ns6__CRLValues soap_in_ns6__CRLValuesType


#define soap_instantiate__ns6__CRLValues soap_instantiate_ns6__CRLValuesType


#define soap_new__ns6__CRLValues soap_new_ns6__CRLValuesType


#define soap_new_req__ns6__CRLValues soap_new_req_ns6__CRLValuesType


#define soap_new_set__ns6__CRLValues soap_new_set_ns6__CRLValuesType


#define soap_put__ns6__CRLValues soap_put_ns6__CRLValuesType


#define soap_write__ns6__CRLValues soap_write_ns6__CRLValuesType


#define soap_get__ns6__CRLValues soap_get_ns6__CRLValuesType


#define soap_read__ns6__CRLValues soap_read_ns6__CRLValuesType

/* _ns6__RevocationValues is a typedef synonym for ns6__RevocationValuesType */

#ifndef SOAP_TYPE_ACService__ns6__RevocationValues
#define SOAP_TYPE_ACService__ns6__RevocationValues (266)
#endif

#define soap_default__ns6__RevocationValues(soap, a) (a)->ns6__RevocationValuesType::soap_default(soap)


#define soap_serialize__ns6__RevocationValues(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__RevocationValues2s soap_ns6__RevocationValuesType2s


#define soap_out__ns6__RevocationValues soap_out_ns6__RevocationValuesType


#define soap_s2_ns6__RevocationValues soap_s2ns6__RevocationValuesType


#define soap_in__ns6__RevocationValues soap_in_ns6__RevocationValuesType


#define soap_instantiate__ns6__RevocationValues soap_instantiate_ns6__RevocationValuesType


#define soap_new__ns6__RevocationValues soap_new_ns6__RevocationValuesType


#define soap_new_req__ns6__RevocationValues soap_new_req_ns6__RevocationValuesType


#define soap_new_set__ns6__RevocationValues soap_new_set_ns6__RevocationValuesType


#define soap_put__ns6__RevocationValues soap_put_ns6__RevocationValuesType


#define soap_write__ns6__RevocationValues soap_write_ns6__RevocationValuesType


#define soap_get__ns6__RevocationValues soap_get_ns6__RevocationValuesType


#define soap_read__ns6__RevocationValues soap_read_ns6__RevocationValuesType

/* _ns6__EncapsulatedX509Certificate is a typedef synonym for ns6__EncapsulatedX509CertificateType */

#ifndef SOAP_TYPE_ACService__ns6__EncapsulatedX509Certificate
#define SOAP_TYPE_ACService__ns6__EncapsulatedX509Certificate (265)
#endif

#define soap_default__ns6__EncapsulatedX509Certificate(soap, a) (a)->ns6__EncapsulatedX509CertificateType::soap_default(soap)


#define soap_serialize__ns6__EncapsulatedX509Certificate(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__EncapsulatedX509Certificate2s soap_ns6__EncapsulatedX509CertificateType2s


#define soap_out__ns6__EncapsulatedX509Certificate soap_out_ns6__EncapsulatedX509CertificateType


#define soap_s2_ns6__EncapsulatedX509Certificate soap_s2ns6__EncapsulatedX509CertificateType


#define soap_in__ns6__EncapsulatedX509Certificate soap_in_ns6__EncapsulatedX509CertificateType


#define soap_instantiate__ns6__EncapsulatedX509Certificate soap_instantiate_ns6__EncapsulatedX509CertificateType


#define soap_new__ns6__EncapsulatedX509Certificate soap_new_ns6__EncapsulatedX509CertificateType


#define soap_new_req__ns6__EncapsulatedX509Certificate soap_new_req_ns6__EncapsulatedX509CertificateType


#define soap_new_set__ns6__EncapsulatedX509Certificate soap_new_set_ns6__EncapsulatedX509CertificateType


#define soap_put__ns6__EncapsulatedX509Certificate soap_put_ns6__EncapsulatedX509CertificateType


#define soap_write__ns6__EncapsulatedX509Certificate soap_write_ns6__EncapsulatedX509CertificateType


#define soap_get__ns6__EncapsulatedX509Certificate soap_get_ns6__EncapsulatedX509CertificateType


#define soap_read__ns6__EncapsulatedX509Certificate soap_read_ns6__EncapsulatedX509CertificateType

/* _ns6__CertificateValues is a typedef synonym for ns6__CertificateValuesType */

#ifndef SOAP_TYPE_ACService__ns6__CertificateValues
#define SOAP_TYPE_ACService__ns6__CertificateValues (264)
#endif

#define soap_default__ns6__CertificateValues(soap, a) (a)->ns6__CertificateValuesType::soap_default(soap)


#define soap_serialize__ns6__CertificateValues(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CertificateValues2s soap_ns6__CertificateValuesType2s


#define soap_out__ns6__CertificateValues soap_out_ns6__CertificateValuesType


#define soap_s2_ns6__CertificateValues soap_s2ns6__CertificateValuesType


#define soap_in__ns6__CertificateValues soap_in_ns6__CertificateValuesType


#define soap_instantiate__ns6__CertificateValues soap_instantiate_ns6__CertificateValuesType


#define soap_new__ns6__CertificateValues soap_new_ns6__CertificateValuesType


#define soap_new_req__ns6__CertificateValues soap_new_req_ns6__CertificateValuesType


#define soap_new_set__ns6__CertificateValues soap_new_set_ns6__CertificateValuesType


#define soap_put__ns6__CertificateValues soap_put_ns6__CertificateValuesType


#define soap_write__ns6__CertificateValues soap_write_ns6__CertificateValuesType


#define soap_get__ns6__CertificateValues soap_get_ns6__CertificateValuesType


#define soap_read__ns6__CertificateValues soap_read_ns6__CertificateValuesType

/* _ns6__SigAndRefsTimeStamp is a typedef synonym for ns6__SigAndRefsTimeStampType */

#ifndef SOAP_TYPE_ACService__ns6__SigAndRefsTimeStamp
#define SOAP_TYPE_ACService__ns6__SigAndRefsTimeStamp (263)
#endif

#define soap_default__ns6__SigAndRefsTimeStamp(soap, a) (a)->ns6__SigAndRefsTimeStampType::soap_default(soap)


#define soap_serialize__ns6__SigAndRefsTimeStamp(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__SigAndRefsTimeStamp2s soap_ns6__SigAndRefsTimeStampType2s


#define soap_out__ns6__SigAndRefsTimeStamp soap_out_ns6__SigAndRefsTimeStampType


#define soap_s2_ns6__SigAndRefsTimeStamp soap_s2ns6__SigAndRefsTimeStampType


#define soap_in__ns6__SigAndRefsTimeStamp soap_in_ns6__SigAndRefsTimeStampType


#define soap_instantiate__ns6__SigAndRefsTimeStamp soap_instantiate_ns6__SigAndRefsTimeStampType


#define soap_new__ns6__SigAndRefsTimeStamp soap_new_ns6__SigAndRefsTimeStampType


#define soap_new_req__ns6__SigAndRefsTimeStamp soap_new_req_ns6__SigAndRefsTimeStampType


#define soap_new_set__ns6__SigAndRefsTimeStamp soap_new_set_ns6__SigAndRefsTimeStampType


#define soap_put__ns6__SigAndRefsTimeStamp soap_put_ns6__SigAndRefsTimeStampType


#define soap_write__ns6__SigAndRefsTimeStamp soap_write_ns6__SigAndRefsTimeStampType


#define soap_get__ns6__SigAndRefsTimeStamp soap_get_ns6__SigAndRefsTimeStampType


#define soap_read__ns6__SigAndRefsTimeStamp soap_read_ns6__SigAndRefsTimeStampType

/* _ns6__ResponderID is a typedef synonym for ns6__ResponderIDType */

#ifndef SOAP_TYPE_ACService__ns6__ResponderID
#define SOAP_TYPE_ACService__ns6__ResponderID (262)
#endif

#define soap_default__ns6__ResponderID(soap, a) (a)->ns6__ResponderIDType::soap_default(soap)


#define soap_serialize__ns6__ResponderID(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__ResponderID2s soap_ns6__ResponderIDType2s


#define soap_out__ns6__ResponderID soap_out_ns6__ResponderIDType


#define soap_s2_ns6__ResponderID soap_s2ns6__ResponderIDType


#define soap_in__ns6__ResponderID soap_in_ns6__ResponderIDType


#define soap_instantiate__ns6__ResponderID soap_instantiate_ns6__ResponderIDType


#define soap_new__ns6__ResponderID soap_new_ns6__ResponderIDType


#define soap_new_req__ns6__ResponderID soap_new_req_ns6__ResponderIDType


#define soap_new_set__ns6__ResponderID soap_new_set_ns6__ResponderIDType


#define soap_put__ns6__ResponderID soap_put_ns6__ResponderIDType


#define soap_write__ns6__ResponderID soap_write_ns6__ResponderIDType


#define soap_get__ns6__ResponderID soap_get_ns6__ResponderIDType


#define soap_read__ns6__ResponderID soap_read_ns6__ResponderIDType

/* _ns6__OCSPIdentifier is a typedef synonym for ns6__OCSPIdentifierType */

#ifndef SOAP_TYPE_ACService__ns6__OCSPIdentifier
#define SOAP_TYPE_ACService__ns6__OCSPIdentifier (261)
#endif

#define soap_default__ns6__OCSPIdentifier(soap, a) (a)->ns6__OCSPIdentifierType::soap_default(soap)


#define soap_serialize__ns6__OCSPIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__OCSPIdentifier2s soap_ns6__OCSPIdentifierType2s


#define soap_out__ns6__OCSPIdentifier soap_out_ns6__OCSPIdentifierType


#define soap_s2_ns6__OCSPIdentifier soap_s2ns6__OCSPIdentifierType


#define soap_in__ns6__OCSPIdentifier soap_in_ns6__OCSPIdentifierType


#define soap_instantiate__ns6__OCSPIdentifier soap_instantiate_ns6__OCSPIdentifierType


#define soap_new__ns6__OCSPIdentifier soap_new_ns6__OCSPIdentifierType


#define soap_new_req__ns6__OCSPIdentifier soap_new_req_ns6__OCSPIdentifierType


#define soap_new_set__ns6__OCSPIdentifier soap_new_set_ns6__OCSPIdentifierType


#define soap_put__ns6__OCSPIdentifier soap_put_ns6__OCSPIdentifierType


#define soap_write__ns6__OCSPIdentifier soap_write_ns6__OCSPIdentifierType


#define soap_get__ns6__OCSPIdentifier soap_get_ns6__OCSPIdentifierType


#define soap_read__ns6__OCSPIdentifier soap_read_ns6__OCSPIdentifierType

/* _ns6__OCSPRef is a typedef synonym for ns6__OCSPRefType */

#ifndef SOAP_TYPE_ACService__ns6__OCSPRef
#define SOAP_TYPE_ACService__ns6__OCSPRef (260)
#endif

#define soap_default__ns6__OCSPRef(soap, a) (a)->ns6__OCSPRefType::soap_default(soap)


#define soap_serialize__ns6__OCSPRef(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__OCSPRef2s soap_ns6__OCSPRefType2s


#define soap_out__ns6__OCSPRef soap_out_ns6__OCSPRefType


#define soap_s2_ns6__OCSPRef soap_s2ns6__OCSPRefType


#define soap_in__ns6__OCSPRef soap_in_ns6__OCSPRefType


#define soap_instantiate__ns6__OCSPRef soap_instantiate_ns6__OCSPRefType


#define soap_new__ns6__OCSPRef soap_new_ns6__OCSPRefType


#define soap_new_req__ns6__OCSPRef soap_new_req_ns6__OCSPRefType


#define soap_new_set__ns6__OCSPRef soap_new_set_ns6__OCSPRefType


#define soap_put__ns6__OCSPRef soap_put_ns6__OCSPRefType


#define soap_write__ns6__OCSPRef soap_write_ns6__OCSPRefType


#define soap_get__ns6__OCSPRef soap_get_ns6__OCSPRefType


#define soap_read__ns6__OCSPRef soap_read_ns6__OCSPRefType

/* _ns6__OCSPRefs is a typedef synonym for ns6__OCSPRefsType */

#ifndef SOAP_TYPE_ACService__ns6__OCSPRefs
#define SOAP_TYPE_ACService__ns6__OCSPRefs (259)
#endif

#define soap_default__ns6__OCSPRefs(soap, a) (a)->ns6__OCSPRefsType::soap_default(soap)


#define soap_serialize__ns6__OCSPRefs(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__OCSPRefs2s soap_ns6__OCSPRefsType2s


#define soap_out__ns6__OCSPRefs soap_out_ns6__OCSPRefsType


#define soap_s2_ns6__OCSPRefs soap_s2ns6__OCSPRefsType


#define soap_in__ns6__OCSPRefs soap_in_ns6__OCSPRefsType


#define soap_instantiate__ns6__OCSPRefs soap_instantiate_ns6__OCSPRefsType


#define soap_new__ns6__OCSPRefs soap_new_ns6__OCSPRefsType


#define soap_new_req__ns6__OCSPRefs soap_new_req_ns6__OCSPRefsType


#define soap_new_set__ns6__OCSPRefs soap_new_set_ns6__OCSPRefsType


#define soap_put__ns6__OCSPRefs soap_put_ns6__OCSPRefsType


#define soap_write__ns6__OCSPRefs soap_write_ns6__OCSPRefsType


#define soap_get__ns6__OCSPRefs soap_get_ns6__OCSPRefsType


#define soap_read__ns6__OCSPRefs soap_read_ns6__OCSPRefsType

/* _ns6__CRLIdentifier is a typedef synonym for ns6__CRLIdentifierType */

#ifndef SOAP_TYPE_ACService__ns6__CRLIdentifier
#define SOAP_TYPE_ACService__ns6__CRLIdentifier (258)
#endif

#define soap_default__ns6__CRLIdentifier(soap, a) (a)->ns6__CRLIdentifierType::soap_default(soap)


#define soap_serialize__ns6__CRLIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CRLIdentifier2s soap_ns6__CRLIdentifierType2s


#define soap_out__ns6__CRLIdentifier soap_out_ns6__CRLIdentifierType


#define soap_s2_ns6__CRLIdentifier soap_s2ns6__CRLIdentifierType


#define soap_in__ns6__CRLIdentifier soap_in_ns6__CRLIdentifierType


#define soap_instantiate__ns6__CRLIdentifier soap_instantiate_ns6__CRLIdentifierType


#define soap_new__ns6__CRLIdentifier soap_new_ns6__CRLIdentifierType


#define soap_new_req__ns6__CRLIdentifier soap_new_req_ns6__CRLIdentifierType


#define soap_new_set__ns6__CRLIdentifier soap_new_set_ns6__CRLIdentifierType


#define soap_put__ns6__CRLIdentifier soap_put_ns6__CRLIdentifierType


#define soap_write__ns6__CRLIdentifier soap_write_ns6__CRLIdentifierType


#define soap_get__ns6__CRLIdentifier soap_get_ns6__CRLIdentifierType


#define soap_read__ns6__CRLIdentifier soap_read_ns6__CRLIdentifierType

/* _ns6__DigestAlgAndValue is a typedef synonym for ns6__DigestAlgAndValueType */

#ifndef SOAP_TYPE_ACService__ns6__DigestAlgAndValue
#define SOAP_TYPE_ACService__ns6__DigestAlgAndValue (257)
#endif

#define soap_default__ns6__DigestAlgAndValue(soap, a) (a)->ns6__DigestAlgAndValueType::soap_default(soap)


#define soap_serialize__ns6__DigestAlgAndValue(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__DigestAlgAndValue2s soap_ns6__DigestAlgAndValueType2s


#define soap_out__ns6__DigestAlgAndValue soap_out_ns6__DigestAlgAndValueType


#define soap_s2_ns6__DigestAlgAndValue soap_s2ns6__DigestAlgAndValueType


#define soap_in__ns6__DigestAlgAndValue soap_in_ns6__DigestAlgAndValueType


#define soap_instantiate__ns6__DigestAlgAndValue soap_instantiate_ns6__DigestAlgAndValueType


#define soap_new__ns6__DigestAlgAndValue soap_new_ns6__DigestAlgAndValueType


#define soap_new_req__ns6__DigestAlgAndValue soap_new_req_ns6__DigestAlgAndValueType


#define soap_new_set__ns6__DigestAlgAndValue soap_new_set_ns6__DigestAlgAndValueType


#define soap_put__ns6__DigestAlgAndValue soap_put_ns6__DigestAlgAndValueType


#define soap_write__ns6__DigestAlgAndValue soap_write_ns6__DigestAlgAndValueType


#define soap_get__ns6__DigestAlgAndValue soap_get_ns6__DigestAlgAndValueType


#define soap_read__ns6__DigestAlgAndValue soap_read_ns6__DigestAlgAndValueType

/* _ns6__CRLRef is a typedef synonym for ns6__CRLRefType */

#ifndef SOAP_TYPE_ACService__ns6__CRLRef
#define SOAP_TYPE_ACService__ns6__CRLRef (256)
#endif

#define soap_default__ns6__CRLRef(soap, a) (a)->ns6__CRLRefType::soap_default(soap)


#define soap_serialize__ns6__CRLRef(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CRLRef2s soap_ns6__CRLRefType2s


#define soap_out__ns6__CRLRef soap_out_ns6__CRLRefType


#define soap_s2_ns6__CRLRef soap_s2ns6__CRLRefType


#define soap_in__ns6__CRLRef soap_in_ns6__CRLRefType


#define soap_instantiate__ns6__CRLRef soap_instantiate_ns6__CRLRefType


#define soap_new__ns6__CRLRef soap_new_ns6__CRLRefType


#define soap_new_req__ns6__CRLRef soap_new_req_ns6__CRLRefType


#define soap_new_set__ns6__CRLRef soap_new_set_ns6__CRLRefType


#define soap_put__ns6__CRLRef soap_put_ns6__CRLRefType


#define soap_write__ns6__CRLRef soap_write_ns6__CRLRefType


#define soap_get__ns6__CRLRef soap_get_ns6__CRLRefType


#define soap_read__ns6__CRLRef soap_read_ns6__CRLRefType

/* _ns6__CRLRefs is a typedef synonym for ns6__CRLRefsType */

#ifndef SOAP_TYPE_ACService__ns6__CRLRefs
#define SOAP_TYPE_ACService__ns6__CRLRefs (255)
#endif

#define soap_default__ns6__CRLRefs(soap, a) (a)->ns6__CRLRefsType::soap_default(soap)


#define soap_serialize__ns6__CRLRefs(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CRLRefs2s soap_ns6__CRLRefsType2s


#define soap_out__ns6__CRLRefs soap_out_ns6__CRLRefsType


#define soap_s2_ns6__CRLRefs soap_s2ns6__CRLRefsType


#define soap_in__ns6__CRLRefs soap_in_ns6__CRLRefsType


#define soap_instantiate__ns6__CRLRefs soap_instantiate_ns6__CRLRefsType


#define soap_new__ns6__CRLRefs soap_new_ns6__CRLRefsType


#define soap_new_req__ns6__CRLRefs soap_new_req_ns6__CRLRefsType


#define soap_new_set__ns6__CRLRefs soap_new_set_ns6__CRLRefsType


#define soap_put__ns6__CRLRefs soap_put_ns6__CRLRefsType


#define soap_write__ns6__CRLRefs soap_write_ns6__CRLRefsType


#define soap_get__ns6__CRLRefs soap_get_ns6__CRLRefsType


#define soap_read__ns6__CRLRefs soap_read_ns6__CRLRefsType

/* _ns6__CompleteRevocationRefs is a typedef synonym for ns6__CompleteRevocationRefsType */

#ifndef SOAP_TYPE_ACService__ns6__CompleteRevocationRefs
#define SOAP_TYPE_ACService__ns6__CompleteRevocationRefs (254)
#endif

#define soap_default__ns6__CompleteRevocationRefs(soap, a) (a)->ns6__CompleteRevocationRefsType::soap_default(soap)


#define soap_serialize__ns6__CompleteRevocationRefs(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CompleteRevocationRefs2s soap_ns6__CompleteRevocationRefsType2s


#define soap_out__ns6__CompleteRevocationRefs soap_out_ns6__CompleteRevocationRefsType


#define soap_s2_ns6__CompleteRevocationRefs soap_s2ns6__CompleteRevocationRefsType


#define soap_in__ns6__CompleteRevocationRefs soap_in_ns6__CompleteRevocationRefsType


#define soap_instantiate__ns6__CompleteRevocationRefs soap_instantiate_ns6__CompleteRevocationRefsType


#define soap_new__ns6__CompleteRevocationRefs soap_new_ns6__CompleteRevocationRefsType


#define soap_new_req__ns6__CompleteRevocationRefs soap_new_req_ns6__CompleteRevocationRefsType


#define soap_new_set__ns6__CompleteRevocationRefs soap_new_set_ns6__CompleteRevocationRefsType


#define soap_put__ns6__CompleteRevocationRefs soap_put_ns6__CompleteRevocationRefsType


#define soap_write__ns6__CompleteRevocationRefs soap_write_ns6__CompleteRevocationRefsType


#define soap_get__ns6__CompleteRevocationRefs soap_get_ns6__CompleteRevocationRefsType


#define soap_read__ns6__CompleteRevocationRefs soap_read_ns6__CompleteRevocationRefsType

/* _ns6__CertRefs is a typedef synonym for ns6__CertRefsType */

#ifndef SOAP_TYPE_ACService__ns6__CertRefs
#define SOAP_TYPE_ACService__ns6__CertRefs (253)
#endif

#define soap_default__ns6__CertRefs(soap, a) (a)->ns6__CertRefsType::soap_default(soap)


#define soap_serialize__ns6__CertRefs(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CertRefs2s soap_ns6__CertRefsType2s


#define soap_out__ns6__CertRefs soap_out_ns6__CertRefsType


#define soap_s2_ns6__CertRefs soap_s2ns6__CertRefsType


#define soap_in__ns6__CertRefs soap_in_ns6__CertRefsType


#define soap_instantiate__ns6__CertRefs soap_instantiate_ns6__CertRefsType


#define soap_new__ns6__CertRefs soap_new_ns6__CertRefsType


#define soap_new_req__ns6__CertRefs soap_new_req_ns6__CertRefsType


#define soap_new_set__ns6__CertRefs soap_new_set_ns6__CertRefsType


#define soap_put__ns6__CertRefs soap_put_ns6__CertRefsType


#define soap_write__ns6__CertRefs soap_write_ns6__CertRefsType


#define soap_get__ns6__CertRefs soap_get_ns6__CertRefsType


#define soap_read__ns6__CertRefs soap_read_ns6__CertRefsType

/* _ns6__CompleteCertificateRefs is a typedef synonym for ns6__CompleteCertificateRefsType */

#ifndef SOAP_TYPE_ACService__ns6__CompleteCertificateRefs
#define SOAP_TYPE_ACService__ns6__CompleteCertificateRefs (252)
#endif

#define soap_default__ns6__CompleteCertificateRefs(soap, a) (a)->ns6__CompleteCertificateRefsType::soap_default(soap)


#define soap_serialize__ns6__CompleteCertificateRefs(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CompleteCertificateRefs2s soap_ns6__CompleteCertificateRefsType2s


#define soap_out__ns6__CompleteCertificateRefs soap_out_ns6__CompleteCertificateRefsType


#define soap_s2_ns6__CompleteCertificateRefs soap_s2ns6__CompleteCertificateRefsType


#define soap_in__ns6__CompleteCertificateRefs soap_in_ns6__CompleteCertificateRefsType


#define soap_instantiate__ns6__CompleteCertificateRefs soap_instantiate_ns6__CompleteCertificateRefsType


#define soap_new__ns6__CompleteCertificateRefs soap_new_ns6__CompleteCertificateRefsType


#define soap_new_req__ns6__CompleteCertificateRefs soap_new_req_ns6__CompleteCertificateRefsType


#define soap_new_set__ns6__CompleteCertificateRefs soap_new_set_ns6__CompleteCertificateRefsType


#define soap_put__ns6__CompleteCertificateRefs soap_put_ns6__CompleteCertificateRefsType


#define soap_write__ns6__CompleteCertificateRefs soap_write_ns6__CompleteCertificateRefsType


#define soap_get__ns6__CompleteCertificateRefs soap_get_ns6__CompleteCertificateRefsType


#define soap_read__ns6__CompleteCertificateRefs soap_read_ns6__CompleteCertificateRefsType

/* _ns6__EncapsulatedTimeStamp is a typedef synonym for ns6__EncapsulatedTimeStampType */

#ifndef SOAP_TYPE_ACService__ns6__EncapsulatedTimeStamp
#define SOAP_TYPE_ACService__ns6__EncapsulatedTimeStamp (251)
#endif

#define soap_default__ns6__EncapsulatedTimeStamp(soap, a) (a)->ns6__EncapsulatedTimeStampType::soap_default(soap)


#define soap_serialize__ns6__EncapsulatedTimeStamp(soap, a) (a)->soap_serialize(soap)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns6__EncapsulatedTimeStamp(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in__ns6__EncapsulatedTimeStamp(struct soap*, const char*, xsd__base64Binary *, const char*);

#define soap_instantiate__ns6__EncapsulatedTimeStamp soap_instantiate_ns6__EncapsulatedTimeStampType


#define soap_new__ns6__EncapsulatedTimeStamp soap_new_ns6__EncapsulatedTimeStampType


#define soap_new_req__ns6__EncapsulatedTimeStamp soap_new_req_ns6__EncapsulatedTimeStampType


#define soap_new_set__ns6__EncapsulatedTimeStamp soap_new_set_ns6__EncapsulatedTimeStampType


#define soap_put__ns6__EncapsulatedTimeStamp soap_put_ns6__EncapsulatedTimeStampType


#define soap_write__ns6__EncapsulatedTimeStamp soap_write_ns6__EncapsulatedTimeStampType


#define soap_get__ns6__EncapsulatedTimeStamp soap_get_ns6__EncapsulatedTimeStampType


#define soap_read__ns6__EncapsulatedTimeStamp soap_read_ns6__EncapsulatedTimeStampType

/* _ns6__SignatureTimeStamp is a typedef synonym for ns6__SignatureTimeStampType */

#ifndef SOAP_TYPE_ACService__ns6__SignatureTimeStamp
#define SOAP_TYPE_ACService__ns6__SignatureTimeStamp (250)
#endif

#define soap_default__ns6__SignatureTimeStamp(soap, a) (a)->ns6__SignatureTimeStampType::soap_default(soap)


#define soap_serialize__ns6__SignatureTimeStamp(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__SignatureTimeStamp2s soap_ns6__SignatureTimeStampType2s


#define soap_out__ns6__SignatureTimeStamp soap_out_ns6__SignatureTimeStampType


#define soap_s2_ns6__SignatureTimeStamp soap_s2ns6__SignatureTimeStampType


#define soap_in__ns6__SignatureTimeStamp soap_in_ns6__SignatureTimeStampType


#define soap_instantiate__ns6__SignatureTimeStamp soap_instantiate_ns6__SignatureTimeStampType


#define soap_new__ns6__SignatureTimeStamp soap_new_ns6__SignatureTimeStampType


#define soap_new_req__ns6__SignatureTimeStamp soap_new_req_ns6__SignatureTimeStampType


#define soap_new_set__ns6__SignatureTimeStamp soap_new_set_ns6__SignatureTimeStampType


#define soap_put__ns6__SignatureTimeStamp soap_put_ns6__SignatureTimeStampType


#define soap_write__ns6__SignatureTimeStamp soap_write_ns6__SignatureTimeStampType


#define soap_get__ns6__SignatureTimeStamp soap_get_ns6__SignatureTimeStampType


#define soap_read__ns6__SignatureTimeStamp soap_read_ns6__SignatureTimeStampType

/* _ns6__CounterSignature is a typedef synonym for ns6__CounterSignatureType */

#ifndef SOAP_TYPE_ACService__ns6__CounterSignature
#define SOAP_TYPE_ACService__ns6__CounterSignature (249)
#endif

#define soap_default__ns6__CounterSignature(soap, a) (a)->ns6__CounterSignatureType::soap_default(soap)


#define soap_serialize__ns6__CounterSignature(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CounterSignature2s soap_ns6__CounterSignatureType2s


#define soap_out__ns6__CounterSignature soap_out_ns6__CounterSignatureType


#define soap_s2_ns6__CounterSignature soap_s2ns6__CounterSignatureType


#define soap_in__ns6__CounterSignature soap_in_ns6__CounterSignatureType


#define soap_instantiate__ns6__CounterSignature soap_instantiate_ns6__CounterSignatureType


#define soap_new__ns6__CounterSignature soap_new_ns6__CounterSignatureType


#define soap_new_req__ns6__CounterSignature soap_new_req_ns6__CounterSignatureType


#define soap_new_set__ns6__CounterSignature soap_new_set_ns6__CounterSignatureType


#define soap_put__ns6__CounterSignature soap_put_ns6__CounterSignatureType


#define soap_write__ns6__CounterSignature soap_write_ns6__CounterSignatureType


#define soap_get__ns6__CounterSignature soap_get_ns6__CounterSignatureType


#define soap_read__ns6__CounterSignature soap_read_ns6__CounterSignatureType

/* _ns6__UnsignedSignatureProperties is a typedef synonym for ns6__UnsignedSignaturePropertiesType */

#ifndef SOAP_TYPE_ACService__ns6__UnsignedSignatureProperties
#define SOAP_TYPE_ACService__ns6__UnsignedSignatureProperties (248)
#endif

#define soap_default__ns6__UnsignedSignatureProperties(soap, a) (a)->ns6__UnsignedSignaturePropertiesType::soap_default(soap)


#define soap_serialize__ns6__UnsignedSignatureProperties(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__UnsignedSignatureProperties2s soap_ns6__UnsignedSignaturePropertiesType2s


#define soap_out__ns6__UnsignedSignatureProperties soap_out_ns6__UnsignedSignaturePropertiesType


#define soap_s2_ns6__UnsignedSignatureProperties soap_s2ns6__UnsignedSignaturePropertiesType


#define soap_in__ns6__UnsignedSignatureProperties soap_in_ns6__UnsignedSignaturePropertiesType


#define soap_instantiate__ns6__UnsignedSignatureProperties soap_instantiate_ns6__UnsignedSignaturePropertiesType


#define soap_new__ns6__UnsignedSignatureProperties soap_new_ns6__UnsignedSignaturePropertiesType


#define soap_new_req__ns6__UnsignedSignatureProperties soap_new_req_ns6__UnsignedSignaturePropertiesType


#define soap_new_set__ns6__UnsignedSignatureProperties soap_new_set_ns6__UnsignedSignaturePropertiesType


#define soap_put__ns6__UnsignedSignatureProperties soap_put_ns6__UnsignedSignaturePropertiesType


#define soap_write__ns6__UnsignedSignatureProperties soap_write_ns6__UnsignedSignaturePropertiesType


#define soap_get__ns6__UnsignedSignatureProperties soap_get_ns6__UnsignedSignaturePropertiesType


#define soap_read__ns6__UnsignedSignatureProperties soap_read_ns6__UnsignedSignaturePropertiesType

/* _ns6__UnsignedProperties is a typedef synonym for ns6__UnsignedPropertiesType */

#ifndef SOAP_TYPE_ACService__ns6__UnsignedProperties
#define SOAP_TYPE_ACService__ns6__UnsignedProperties (247)
#endif

#define soap_default__ns6__UnsignedProperties(soap, a) (a)->ns6__UnsignedPropertiesType::soap_default(soap)


#define soap_serialize__ns6__UnsignedProperties(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__UnsignedProperties2s soap_ns6__UnsignedPropertiesType2s


#define soap_out__ns6__UnsignedProperties soap_out_ns6__UnsignedPropertiesType


#define soap_s2_ns6__UnsignedProperties soap_s2ns6__UnsignedPropertiesType


#define soap_in__ns6__UnsignedProperties soap_in_ns6__UnsignedPropertiesType


#define soap_instantiate__ns6__UnsignedProperties soap_instantiate_ns6__UnsignedPropertiesType


#define soap_new__ns6__UnsignedProperties soap_new_ns6__UnsignedPropertiesType


#define soap_new_req__ns6__UnsignedProperties soap_new_req_ns6__UnsignedPropertiesType


#define soap_new_set__ns6__UnsignedProperties soap_new_set_ns6__UnsignedPropertiesType


#define soap_put__ns6__UnsignedProperties soap_put_ns6__UnsignedPropertiesType


#define soap_write__ns6__UnsignedProperties soap_write_ns6__UnsignedPropertiesType


#define soap_get__ns6__UnsignedProperties soap_get_ns6__UnsignedPropertiesType


#define soap_read__ns6__UnsignedProperties soap_read_ns6__UnsignedPropertiesType

/* _ns6__ClaimedRole is a typedef synonym for ns6__ClaimedRoleType */

#ifndef SOAP_TYPE_ACService__ns6__ClaimedRole
#define SOAP_TYPE_ACService__ns6__ClaimedRole (246)
#endif

#define soap_default__ns6__ClaimedRole(soap, a) (a)->ns6__ClaimedRoleType::soap_default(soap)


#define soap_serialize__ns6__ClaimedRole(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__ClaimedRole2s soap_ns6__ClaimedRoleType2s


#define soap_out__ns6__ClaimedRole soap_out_ns6__ClaimedRoleType


#define soap_s2_ns6__ClaimedRole soap_s2ns6__ClaimedRoleType


#define soap_in__ns6__ClaimedRole soap_in_ns6__ClaimedRoleType


#define soap_instantiate__ns6__ClaimedRole soap_instantiate_ns6__ClaimedRoleType


#define soap_new__ns6__ClaimedRole soap_new_ns6__ClaimedRoleType


#define soap_new_req__ns6__ClaimedRole soap_new_req_ns6__ClaimedRoleType


#define soap_new_set__ns6__ClaimedRole soap_new_set_ns6__ClaimedRoleType


#define soap_put__ns6__ClaimedRole soap_put_ns6__ClaimedRoleType


#define soap_write__ns6__ClaimedRole soap_write_ns6__ClaimedRoleType


#define soap_get__ns6__ClaimedRole soap_get_ns6__ClaimedRoleType


#define soap_read__ns6__ClaimedRole soap_read_ns6__ClaimedRoleType

/* _ns6__ClaimedRoles is a typedef synonym for ns6__ClaimedRolesListType */

#ifndef SOAP_TYPE_ACService__ns6__ClaimedRoles
#define SOAP_TYPE_ACService__ns6__ClaimedRoles (245)
#endif

#define soap_default__ns6__ClaimedRoles(soap, a) (a)->ns6__ClaimedRolesListType::soap_default(soap)


#define soap_serialize__ns6__ClaimedRoles(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__ClaimedRoles2s soap_ns6__ClaimedRolesListType2s


#define soap_out__ns6__ClaimedRoles soap_out_ns6__ClaimedRolesListType


#define soap_s2_ns6__ClaimedRoles soap_s2ns6__ClaimedRolesListType


#define soap_in__ns6__ClaimedRoles soap_in_ns6__ClaimedRolesListType


#define soap_instantiate__ns6__ClaimedRoles soap_instantiate_ns6__ClaimedRolesListType


#define soap_new__ns6__ClaimedRoles soap_new_ns6__ClaimedRolesListType


#define soap_new_req__ns6__ClaimedRoles soap_new_req_ns6__ClaimedRolesListType


#define soap_new_set__ns6__ClaimedRoles soap_new_set_ns6__ClaimedRolesListType


#define soap_put__ns6__ClaimedRoles soap_put_ns6__ClaimedRolesListType


#define soap_write__ns6__ClaimedRoles soap_write_ns6__ClaimedRolesListType


#define soap_get__ns6__ClaimedRoles soap_get_ns6__ClaimedRolesListType


#define soap_read__ns6__ClaimedRoles soap_read_ns6__ClaimedRolesListType

/* _ns6__SignerRole is a typedef synonym for ns6__SignerRoleType */

#ifndef SOAP_TYPE_ACService__ns6__SignerRole
#define SOAP_TYPE_ACService__ns6__SignerRole (244)
#endif

#define soap_default__ns6__SignerRole(soap, a) (a)->ns6__SignerRoleType::soap_default(soap)


#define soap_serialize__ns6__SignerRole(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__SignerRole2s soap_ns6__SignerRoleType2s


#define soap_out__ns6__SignerRole soap_out_ns6__SignerRoleType


#define soap_s2_ns6__SignerRole soap_s2ns6__SignerRoleType


#define soap_in__ns6__SignerRole soap_in_ns6__SignerRoleType


#define soap_instantiate__ns6__SignerRole soap_instantiate_ns6__SignerRoleType


#define soap_new__ns6__SignerRole soap_new_ns6__SignerRoleType


#define soap_new_req__ns6__SignerRole soap_new_req_ns6__SignerRoleType


#define soap_new_set__ns6__SignerRole soap_new_set_ns6__SignerRoleType


#define soap_put__ns6__SignerRole soap_put_ns6__SignerRoleType


#define soap_write__ns6__SignerRole soap_write_ns6__SignerRoleType


#define soap_get__ns6__SignerRole soap_get_ns6__SignerRoleType


#define soap_read__ns6__SignerRole soap_read_ns6__SignerRoleType

/* _ns6__IssuerSerial is a typedef synonym for ns6__IssuerSerialType */

#ifndef SOAP_TYPE_ACService__ns6__IssuerSerial
#define SOAP_TYPE_ACService__ns6__IssuerSerial (242)
#endif

#define soap_default__ns6__IssuerSerial(soap, a) (a)->ns6__IssuerSerialType::soap_default(soap)


#define soap_serialize__ns6__IssuerSerial(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__IssuerSerial2s soap_ns6__IssuerSerialType2s


#define soap_out__ns6__IssuerSerial soap_out_ns6__IssuerSerialType


#define soap_s2_ns6__IssuerSerial soap_s2ns6__IssuerSerialType


#define soap_in__ns6__IssuerSerial soap_in_ns6__IssuerSerialType


#define soap_instantiate__ns6__IssuerSerial soap_instantiate_ns6__IssuerSerialType


#define soap_new__ns6__IssuerSerial soap_new_ns6__IssuerSerialType


#define soap_new_req__ns6__IssuerSerial soap_new_req_ns6__IssuerSerialType


#define soap_new_set__ns6__IssuerSerial soap_new_set_ns6__IssuerSerialType


#define soap_put__ns6__IssuerSerial soap_put_ns6__IssuerSerialType


#define soap_write__ns6__IssuerSerial soap_write_ns6__IssuerSerialType


#define soap_get__ns6__IssuerSerial soap_get_ns6__IssuerSerialType


#define soap_read__ns6__IssuerSerial soap_read_ns6__IssuerSerialType

/* _ns6__CertDigest is a typedef synonym for ns6__CertDigestType */

#ifndef SOAP_TYPE_ACService__ns6__CertDigest
#define SOAP_TYPE_ACService__ns6__CertDigest (241)
#endif

#define soap_default__ns6__CertDigest(soap, a) (a)->ns6__CertDigestType::soap_default(soap)


#define soap_serialize__ns6__CertDigest(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__CertDigest2s soap_ns6__CertDigestType2s


#define soap_out__ns6__CertDigest soap_out_ns6__CertDigestType


#define soap_s2_ns6__CertDigest soap_s2ns6__CertDigestType


#define soap_in__ns6__CertDigest soap_in_ns6__CertDigestType


#define soap_instantiate__ns6__CertDigest soap_instantiate_ns6__CertDigestType


#define soap_new__ns6__CertDigest soap_new_ns6__CertDigestType


#define soap_new_req__ns6__CertDigest soap_new_req_ns6__CertDigestType


#define soap_new_set__ns6__CertDigest soap_new_set_ns6__CertDigestType


#define soap_put__ns6__CertDigest soap_put_ns6__CertDigestType


#define soap_write__ns6__CertDigest soap_write_ns6__CertDigestType


#define soap_get__ns6__CertDigest soap_get_ns6__CertDigestType


#define soap_read__ns6__CertDigest soap_read_ns6__CertDigestType

/* _ns6__Cert is a typedef synonym for ns6__CertType */

#ifndef SOAP_TYPE_ACService__ns6__Cert
#define SOAP_TYPE_ACService__ns6__Cert (240)
#endif

#define soap_default__ns6__Cert(soap, a) (a)->ns6__CertType::soap_default(soap)


#define soap_serialize__ns6__Cert(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__Cert2s soap_ns6__CertType2s


#define soap_out__ns6__Cert soap_out_ns6__CertType


#define soap_s2_ns6__Cert soap_s2ns6__CertType


#define soap_in__ns6__Cert soap_in_ns6__CertType


#define soap_instantiate__ns6__Cert soap_instantiate_ns6__CertType


#define soap_new__ns6__Cert soap_new_ns6__CertType


#define soap_new_req__ns6__Cert soap_new_req_ns6__CertType


#define soap_new_set__ns6__Cert soap_new_set_ns6__CertType


#define soap_put__ns6__Cert soap_put_ns6__CertType


#define soap_write__ns6__Cert soap_write_ns6__CertType


#define soap_get__ns6__Cert soap_get_ns6__CertType


#define soap_read__ns6__Cert soap_read_ns6__CertType

/* _ns6__SigningCertificate is a typedef synonym for ns6__SigningCertificateType */

#ifndef SOAP_TYPE_ACService__ns6__SigningCertificate
#define SOAP_TYPE_ACService__ns6__SigningCertificate (239)
#endif

#define soap_default__ns6__SigningCertificate(soap, a) (a)->ns6__SigningCertificateType::soap_default(soap)


#define soap_serialize__ns6__SigningCertificate(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__SigningCertificate2s soap_ns6__SigningCertificateType2s


#define soap_out__ns6__SigningCertificate soap_out_ns6__SigningCertificateType


#define soap_s2_ns6__SigningCertificate soap_s2ns6__SigningCertificateType


#define soap_in__ns6__SigningCertificate soap_in_ns6__SigningCertificateType


#define soap_instantiate__ns6__SigningCertificate soap_instantiate_ns6__SigningCertificateType


#define soap_new__ns6__SigningCertificate soap_new_ns6__SigningCertificateType


#define soap_new_req__ns6__SigningCertificate soap_new_req_ns6__SigningCertificateType


#define soap_new_set__ns6__SigningCertificate soap_new_set_ns6__SigningCertificateType


#define soap_put__ns6__SigningCertificate soap_put_ns6__SigningCertificateType


#define soap_write__ns6__SigningCertificate soap_write_ns6__SigningCertificateType


#define soap_get__ns6__SigningCertificate soap_get_ns6__SigningCertificateType


#define soap_read__ns6__SigningCertificate soap_read_ns6__SigningCertificateType

/* _ns6__SignedSignatureProperties is a typedef synonym for ns6__SignedSignaturePropertiesType */

#ifndef SOAP_TYPE_ACService__ns6__SignedSignatureProperties
#define SOAP_TYPE_ACService__ns6__SignedSignatureProperties (238)
#endif

#define soap_default__ns6__SignedSignatureProperties(soap, a) (a)->ns6__SignedSignaturePropertiesType::soap_default(soap)


#define soap_serialize__ns6__SignedSignatureProperties(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__SignedSignatureProperties2s soap_ns6__SignedSignaturePropertiesType2s


#define soap_out__ns6__SignedSignatureProperties soap_out_ns6__SignedSignaturePropertiesType


#define soap_s2_ns6__SignedSignatureProperties soap_s2ns6__SignedSignaturePropertiesType


#define soap_in__ns6__SignedSignatureProperties soap_in_ns6__SignedSignaturePropertiesType


#define soap_instantiate__ns6__SignedSignatureProperties soap_instantiate_ns6__SignedSignaturePropertiesType


#define soap_new__ns6__SignedSignatureProperties soap_new_ns6__SignedSignaturePropertiesType


#define soap_new_req__ns6__SignedSignatureProperties soap_new_req_ns6__SignedSignaturePropertiesType


#define soap_new_set__ns6__SignedSignatureProperties soap_new_set_ns6__SignedSignaturePropertiesType


#define soap_put__ns6__SignedSignatureProperties soap_put_ns6__SignedSignaturePropertiesType


#define soap_write__ns6__SignedSignatureProperties soap_write_ns6__SignedSignaturePropertiesType


#define soap_get__ns6__SignedSignatureProperties soap_get_ns6__SignedSignaturePropertiesType


#define soap_read__ns6__SignedSignatureProperties soap_read_ns6__SignedSignaturePropertiesType

/* _ns6__SignedProperties is a typedef synonym for ns6__SignedPropertiesType */

#ifndef SOAP_TYPE_ACService__ns6__SignedProperties
#define SOAP_TYPE_ACService__ns6__SignedProperties (237)
#endif

#define soap_default__ns6__SignedProperties(soap, a) (a)->ns6__SignedPropertiesType::soap_default(soap)


#define soap_serialize__ns6__SignedProperties(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__SignedProperties2s soap_ns6__SignedPropertiesType2s


#define soap_out__ns6__SignedProperties soap_out_ns6__SignedPropertiesType


#define soap_s2_ns6__SignedProperties soap_s2ns6__SignedPropertiesType


#define soap_in__ns6__SignedProperties soap_in_ns6__SignedPropertiesType


#define soap_instantiate__ns6__SignedProperties soap_instantiate_ns6__SignedPropertiesType


#define soap_new__ns6__SignedProperties soap_new_ns6__SignedPropertiesType


#define soap_new_req__ns6__SignedProperties soap_new_req_ns6__SignedPropertiesType


#define soap_new_set__ns6__SignedProperties soap_new_set_ns6__SignedPropertiesType


#define soap_put__ns6__SignedProperties soap_put_ns6__SignedPropertiesType


#define soap_write__ns6__SignedProperties soap_write_ns6__SignedPropertiesType


#define soap_get__ns6__SignedProperties soap_get_ns6__SignedPropertiesType


#define soap_read__ns6__SignedProperties soap_read_ns6__SignedPropertiesType

/* _ns6__QualifyingProperties is a typedef synonym for ns6__QualifyingPropertiesType */

#ifndef SOAP_TYPE_ACService__ns6__QualifyingProperties
#define SOAP_TYPE_ACService__ns6__QualifyingProperties (236)
#endif

#define soap_default__ns6__QualifyingProperties(soap, a) (a)->ns6__QualifyingPropertiesType::soap_default(soap)


#define soap_serialize__ns6__QualifyingProperties(soap, a) (a)->soap_serialize(soap)


#define soap__ns6__QualifyingProperties2s soap_ns6__QualifyingPropertiesType2s


#define soap_out__ns6__QualifyingProperties soap_out_ns6__QualifyingPropertiesType


#define soap_s2_ns6__QualifyingProperties soap_s2ns6__QualifyingPropertiesType


#define soap_in__ns6__QualifyingProperties soap_in_ns6__QualifyingPropertiesType


#define soap_instantiate__ns6__QualifyingProperties soap_instantiate_ns6__QualifyingPropertiesType


#define soap_new__ns6__QualifyingProperties soap_new_ns6__QualifyingPropertiesType


#define soap_new_req__ns6__QualifyingProperties soap_new_req_ns6__QualifyingPropertiesType


#define soap_new_set__ns6__QualifyingProperties soap_new_set_ns6__QualifyingPropertiesType


#define soap_put__ns6__QualifyingProperties soap_put_ns6__QualifyingPropertiesType


#define soap_write__ns6__QualifyingProperties soap_write_ns6__QualifyingPropertiesType


#define soap_get__ns6__QualifyingProperties soap_get_ns6__QualifyingPropertiesType


#define soap_read__ns6__QualifyingProperties soap_read_ns6__QualifyingPropertiesType

/* _ns3__SignatureAttribute is a typedef synonym for ns5__SignatureType */

#ifndef SOAP_TYPE_ACService__ns3__SignatureAttribute
#define SOAP_TYPE_ACService__ns3__SignatureAttribute (235)
#endif

#define soap_default__ns3__SignatureAttribute(soap, a) (a)->ns5__SignatureType::soap_default(soap)


#define soap_serialize__ns3__SignatureAttribute(soap, a) (a)->soap_serialize(soap)


#define soap__ns3__SignatureAttribute2s soap_ns5__SignatureType2s


#define soap_out__ns3__SignatureAttribute soap_out_ns5__SignatureType


#define soap_s2_ns3__SignatureAttribute soap_s2ns5__SignatureType


#define soap_in__ns3__SignatureAttribute soap_in_ns5__SignatureType


#define soap_instantiate__ns3__SignatureAttribute soap_instantiate_ns5__SignatureType


#define soap_new__ns3__SignatureAttribute soap_new_ns5__SignatureType


#define soap_new_req__ns3__SignatureAttribute soap_new_req_ns5__SignatureType


#define soap_new_set__ns3__SignatureAttribute soap_new_set_ns5__SignatureType


#define soap_put__ns3__SignatureAttribute soap_put_ns5__SignatureType


#define soap_write__ns3__SignatureAttribute soap_write_ns5__SignatureType


#define soap_get__ns3__SignatureAttribute soap_get_ns5__SignatureType


#define soap_read__ns3__SignatureAttribute soap_read_ns5__SignatureType

/* _ns3__Attribute is a typedef synonym for ns3__AttributeType */

#ifndef SOAP_TYPE_ACService__ns3__Attribute
#define SOAP_TYPE_ACService__ns3__Attribute (234)
#endif

#define soap_default__ns3__Attribute(soap, a) (a)->ns3__AttributeType::soap_default(soap)


#define soap_serialize__ns3__Attribute(soap, a) (a)->soap_serialize(soap)


#define soap__ns3__Attribute2s soap_ns3__AttributeType2s


#define soap_out__ns3__Attribute soap_out_ns3__AttributeType


#define soap_s2_ns3__Attribute soap_s2ns3__AttributeType


#define soap_in__ns3__Attribute soap_in_ns3__AttributeType


#define soap_instantiate__ns3__Attribute soap_instantiate_ns3__AttributeType


#define soap_new__ns3__Attribute soap_new_ns3__AttributeType


#define soap_new_req__ns3__Attribute soap_new_req_ns3__AttributeType


#define soap_new_set__ns3__Attribute soap_new_set_ns3__AttributeType


#define soap_put__ns3__Attribute soap_put_ns3__AttributeType


#define soap_write__ns3__Attribute soap_write_ns3__AttributeType


#define soap_get__ns3__Attribute soap_get_ns3__AttributeType


#define soap_read__ns3__Attribute soap_read_ns3__AttributeType

/* _ns5__X509SerialNumber is a typedef synonym for ns5__X509SerialNumberType */

#ifndef SOAP_TYPE_ACService__ns5__X509SerialNumber
#define SOAP_TYPE_ACService__ns5__X509SerialNumber (233)
#endif

#define soap_default__ns5__X509SerialNumber(soap, a) soap_default_ns5__X509SerialNumberType(soap, a)


#define soap_serialize__ns5__X509SerialNumber soap_serialize_ns5__X509SerialNumberType


#define soap__ns5__X509SerialNumber2s soap_ns5__X509SerialNumberType2s


#define soap_out__ns5__X509SerialNumber soap_out_ns5__X509SerialNumberType


#define soap_s2_ns5__X509SerialNumber soap_s2ns5__X509SerialNumberType


#define soap_in__ns5__X509SerialNumber soap_in_ns5__X509SerialNumberType


#define soap_instantiate__ns5__X509SerialNumber soap_instantiate_ns5__X509SerialNumberType


#define soap_new__ns5__X509SerialNumber soap_new_ns5__X509SerialNumberType


#define soap_put__ns5__X509SerialNumber soap_put_ns5__X509SerialNumberType


#define soap_write__ns5__X509SerialNumber soap_write_ns5__X509SerialNumberType


#define soap_get__ns5__X509SerialNumber soap_get_ns5__X509SerialNumberType


#define soap_read__ns5__X509SerialNumber soap_read_ns5__X509SerialNumberType

/* _ns5__X509IssuerName is a typedef synonym for ns5__X509IssuerNameType */

#ifndef SOAP_TYPE_ACService__ns5__X509IssuerName
#define SOAP_TYPE_ACService__ns5__X509IssuerName (232)
#endif

#define soap_default__ns5__X509IssuerName(soap, a) soap_default_ns5__X509IssuerNameType(soap, a)


#define soap_serialize__ns5__X509IssuerName soap_serialize_ns5__X509IssuerNameType


#define soap__ns5__X509IssuerName2s soap_ns5__X509IssuerNameType2s


#define soap_out__ns5__X509IssuerName soap_out_ns5__X509IssuerNameType


#define soap_s2_ns5__X509IssuerName soap_s2ns5__X509IssuerNameType


#define soap_in__ns5__X509IssuerName soap_in_ns5__X509IssuerNameType


#define soap_instantiate__ns5__X509IssuerName soap_instantiate_ns5__X509IssuerNameType


#define soap_new__ns5__X509IssuerName soap_new_ns5__X509IssuerNameType


#define soap_put__ns5__X509IssuerName soap_put_ns5__X509IssuerNameType


#define soap_write__ns5__X509IssuerName soap_write_ns5__X509IssuerNameType


#define soap_get__ns5__X509IssuerName soap_get_ns5__X509IssuerNameType


#define soap_read__ns5__X509IssuerName soap_read_ns5__X509IssuerNameType

/* _ns5__SignatureValue is a typedef synonym for ns5__SignatureValueType */

#ifndef SOAP_TYPE_ACService__ns5__SignatureValue
#define SOAP_TYPE_ACService__ns5__SignatureValue (231)
#endif

#define soap_default__ns5__SignatureValue(soap, a) (a)->ns5__SignatureValueType::soap_default(soap)


#define soap_serialize__ns5__SignatureValue(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__SignatureValue2s soap_ns5__SignatureValueType2s


#define soap_out__ns5__SignatureValue soap_out_ns5__SignatureValueType


#define soap_s2_ns5__SignatureValue soap_s2ns5__SignatureValueType


#define soap_in__ns5__SignatureValue soap_in_ns5__SignatureValueType


#define soap_instantiate__ns5__SignatureValue soap_instantiate_ns5__SignatureValueType


#define soap_new__ns5__SignatureValue soap_new_ns5__SignatureValueType


#define soap_new_req__ns5__SignatureValue soap_new_req_ns5__SignatureValueType


#define soap_new_set__ns5__SignatureValue soap_new_set_ns5__SignatureValueType


#define soap_put__ns5__SignatureValue soap_put_ns5__SignatureValueType


#define soap_write__ns5__SignatureValue soap_write_ns5__SignatureValueType


#define soap_get__ns5__SignatureValue soap_get_ns5__SignatureValueType


#define soap_read__ns5__SignatureValue soap_read_ns5__SignatureValueType

/* _ns5__DigestValue is a typedef synonym for ns5__DigestValueType */

#ifndef SOAP_TYPE_ACService__ns5__DigestValue
#define SOAP_TYPE_ACService__ns5__DigestValue (230)
#endif

#define soap_default__ns5__DigestValue(soap, a) (a)->ns5__DigestValueType::soap_default(soap)


#define soap_serialize__ns5__DigestValue(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__DigestValue2s soap_ns5__DigestValueType2s


#define soap_out__ns5__DigestValue soap_out_ns5__DigestValueType


#define soap_s2_ns5__DigestValue soap_s2ns5__DigestValueType


#define soap_in__ns5__DigestValue soap_in_ns5__DigestValueType


#define soap_instantiate__ns5__DigestValue soap_instantiate_ns5__DigestValueType


#define soap_new__ns5__DigestValue soap_new_ns5__DigestValueType


#define soap_new_req__ns5__DigestValue soap_new_req_ns5__DigestValueType


#define soap_new_set__ns5__DigestValue soap_new_set_ns5__DigestValueType


#define soap_put__ns5__DigestValue soap_put_ns5__DigestValueType


#define soap_write__ns5__DigestValue soap_write_ns5__DigestValueType


#define soap_get__ns5__DigestValue soap_get_ns5__DigestValueType


#define soap_read__ns5__DigestValue soap_read_ns5__DigestValueType

/* _ns5__X509Certificate is a typedef synonym for ns5__X509CertificateType */

#ifndef SOAP_TYPE_ACService__ns5__X509Certificate
#define SOAP_TYPE_ACService__ns5__X509Certificate (229)
#endif

#define soap_default__ns5__X509Certificate(soap, a) (a)->ns5__X509CertificateType::soap_default(soap)


#define soap_serialize__ns5__X509Certificate(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__X509Certificate2s soap_ns5__X509CertificateType2s


#define soap_out__ns5__X509Certificate soap_out_ns5__X509CertificateType


#define soap_s2_ns5__X509Certificate soap_s2ns5__X509CertificateType


#define soap_in__ns5__X509Certificate soap_in_ns5__X509CertificateType


#define soap_instantiate__ns5__X509Certificate soap_instantiate_ns5__X509CertificateType


#define soap_new__ns5__X509Certificate soap_new_ns5__X509CertificateType


#define soap_new_req__ns5__X509Certificate soap_new_req_ns5__X509CertificateType


#define soap_new_set__ns5__X509Certificate soap_new_set_ns5__X509CertificateType


#define soap_put__ns5__X509Certificate soap_put_ns5__X509CertificateType


#define soap_write__ns5__X509Certificate soap_write_ns5__X509CertificateType


#define soap_get__ns5__X509Certificate soap_get_ns5__X509CertificateType


#define soap_read__ns5__X509Certificate soap_read_ns5__X509CertificateType

/* _ns5__Object is a typedef synonym for ns5__ObjectType */

#ifndef SOAP_TYPE_ACService__ns5__Object
#define SOAP_TYPE_ACService__ns5__Object (228)
#endif

#define soap_default__ns5__Object(soap, a) (a)->ns5__ObjectType::soap_default(soap)


#define soap_serialize__ns5__Object(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__Object2s soap_ns5__ObjectType2s


#define soap_out__ns5__Object soap_out_ns5__ObjectType


#define soap_s2_ns5__Object soap_s2ns5__ObjectType


#define soap_in__ns5__Object soap_in_ns5__ObjectType


#define soap_instantiate__ns5__Object soap_instantiate_ns5__ObjectType


#define soap_new__ns5__Object soap_new_ns5__ObjectType


#define soap_new_req__ns5__Object soap_new_req_ns5__ObjectType


#define soap_new_set__ns5__Object soap_new_set_ns5__ObjectType


#define soap_put__ns5__Object soap_put_ns5__ObjectType


#define soap_write__ns5__Object soap_write_ns5__ObjectType


#define soap_get__ns5__Object soap_get_ns5__ObjectType


#define soap_read__ns5__Object soap_read_ns5__ObjectType

/* _ns5__X509Data is a typedef synonym for ns5__X509DataType */

#ifndef SOAP_TYPE_ACService__ns5__X509Data
#define SOAP_TYPE_ACService__ns5__X509Data (227)
#endif

#define soap_default__ns5__X509Data(soap, a) (a)->ns5__X509DataType::soap_default(soap)


#define soap_serialize__ns5__X509Data(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__X509Data2s soap_ns5__X509DataType2s


#define soap_out__ns5__X509Data soap_out_ns5__X509DataType


#define soap_s2_ns5__X509Data soap_s2ns5__X509DataType


#define soap_in__ns5__X509Data soap_in_ns5__X509DataType


#define soap_instantiate__ns5__X509Data soap_instantiate_ns5__X509DataType


#define soap_new__ns5__X509Data soap_new_ns5__X509DataType


#define soap_new_req__ns5__X509Data soap_new_req_ns5__X509DataType


#define soap_new_set__ns5__X509Data soap_new_set_ns5__X509DataType


#define soap_put__ns5__X509Data soap_put_ns5__X509DataType


#define soap_write__ns5__X509Data soap_write_ns5__X509DataType


#define soap_get__ns5__X509Data soap_get_ns5__X509DataType


#define soap_read__ns5__X509Data soap_read_ns5__X509DataType

/* _ns5__KeyInfo is a typedef synonym for ns5__KeyInfoType */

#ifndef SOAP_TYPE_ACService__ns5__KeyInfo
#define SOAP_TYPE_ACService__ns5__KeyInfo (226)
#endif

#define soap_default__ns5__KeyInfo(soap, a) (a)->ns5__KeyInfoType::soap_default(soap)


#define soap_serialize__ns5__KeyInfo(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__KeyInfo2s soap_ns5__KeyInfoType2s


#define soap_out__ns5__KeyInfo soap_out_ns5__KeyInfoType


#define soap_s2_ns5__KeyInfo soap_s2ns5__KeyInfoType


#define soap_in__ns5__KeyInfo soap_in_ns5__KeyInfoType


#define soap_instantiate__ns5__KeyInfo soap_instantiate_ns5__KeyInfoType


#define soap_new__ns5__KeyInfo soap_new_ns5__KeyInfoType


#define soap_new_req__ns5__KeyInfo soap_new_req_ns5__KeyInfoType


#define soap_new_set__ns5__KeyInfo soap_new_set_ns5__KeyInfoType


#define soap_put__ns5__KeyInfo soap_put_ns5__KeyInfoType


#define soap_write__ns5__KeyInfo soap_write_ns5__KeyInfoType


#define soap_get__ns5__KeyInfo soap_get_ns5__KeyInfoType


#define soap_read__ns5__KeyInfo soap_read_ns5__KeyInfoType

/* _ns5__DigestMethod is a typedef synonym for ns5__DigestMethodType */

#ifndef SOAP_TYPE_ACService__ns5__DigestMethod
#define SOAP_TYPE_ACService__ns5__DigestMethod (225)
#endif

#define soap_default__ns5__DigestMethod(soap, a) (a)->ns5__DigestMethodType::soap_default(soap)


#define soap_serialize__ns5__DigestMethod(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__DigestMethod2s soap_ns5__DigestMethodType2s


#define soap_out__ns5__DigestMethod soap_out_ns5__DigestMethodType


#define soap_s2_ns5__DigestMethod soap_s2ns5__DigestMethodType


#define soap_in__ns5__DigestMethod soap_in_ns5__DigestMethodType


#define soap_instantiate__ns5__DigestMethod soap_instantiate_ns5__DigestMethodType


#define soap_new__ns5__DigestMethod soap_new_ns5__DigestMethodType


#define soap_new_req__ns5__DigestMethod soap_new_req_ns5__DigestMethodType


#define soap_new_set__ns5__DigestMethod soap_new_set_ns5__DigestMethodType


#define soap_put__ns5__DigestMethod soap_put_ns5__DigestMethodType


#define soap_write__ns5__DigestMethod soap_write_ns5__DigestMethodType


#define soap_get__ns5__DigestMethod soap_get_ns5__DigestMethodType


#define soap_read__ns5__DigestMethod soap_read_ns5__DigestMethodType

/* _ns5__Transform is a typedef synonym for ns5__TransformType */

#ifndef SOAP_TYPE_ACService__ns5__Transform
#define SOAP_TYPE_ACService__ns5__Transform (224)
#endif

#define soap_default__ns5__Transform(soap, a) (a)->ns5__TransformType::soap_default(soap)


#define soap_serialize__ns5__Transform(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__Transform2s soap_ns5__TransformType2s


#define soap_out__ns5__Transform soap_out_ns5__TransformType


#define soap_s2_ns5__Transform soap_s2ns5__TransformType


#define soap_in__ns5__Transform soap_in_ns5__TransformType


#define soap_instantiate__ns5__Transform soap_instantiate_ns5__TransformType


#define soap_new__ns5__Transform soap_new_ns5__TransformType


#define soap_new_req__ns5__Transform soap_new_req_ns5__TransformType


#define soap_new_set__ns5__Transform soap_new_set_ns5__TransformType


#define soap_put__ns5__Transform soap_put_ns5__TransformType


#define soap_write__ns5__Transform soap_write_ns5__TransformType


#define soap_get__ns5__Transform soap_get_ns5__TransformType


#define soap_read__ns5__Transform soap_read_ns5__TransformType

/* _ns5__Transforms is a typedef synonym for ns5__TransformsType */

#ifndef SOAP_TYPE_ACService__ns5__Transforms
#define SOAP_TYPE_ACService__ns5__Transforms (223)
#endif

#define soap_default__ns5__Transforms(soap, a) (a)->ns5__TransformsType::soap_default(soap)


#define soap_serialize__ns5__Transforms(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__Transforms2s soap_ns5__TransformsType2s


#define soap_out__ns5__Transforms soap_out_ns5__TransformsType


#define soap_s2_ns5__Transforms soap_s2ns5__TransformsType


#define soap_in__ns5__Transforms soap_in_ns5__TransformsType


#define soap_instantiate__ns5__Transforms soap_instantiate_ns5__TransformsType


#define soap_new__ns5__Transforms soap_new_ns5__TransformsType


#define soap_new_req__ns5__Transforms soap_new_req_ns5__TransformsType


#define soap_new_set__ns5__Transforms soap_new_set_ns5__TransformsType


#define soap_put__ns5__Transforms soap_put_ns5__TransformsType


#define soap_write__ns5__Transforms soap_write_ns5__TransformsType


#define soap_get__ns5__Transforms soap_get_ns5__TransformsType


#define soap_read__ns5__Transforms soap_read_ns5__TransformsType

/* _ns5__Reference is a typedef synonym for ns5__ReferenceType */

#ifndef SOAP_TYPE_ACService__ns5__Reference
#define SOAP_TYPE_ACService__ns5__Reference (222)
#endif

#define soap_default__ns5__Reference(soap, a) (a)->ns5__ReferenceType::soap_default(soap)


#define soap_serialize__ns5__Reference(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__Reference2s soap_ns5__ReferenceType2s


#define soap_out__ns5__Reference soap_out_ns5__ReferenceType


#define soap_s2_ns5__Reference soap_s2ns5__ReferenceType


#define soap_in__ns5__Reference soap_in_ns5__ReferenceType


#define soap_instantiate__ns5__Reference soap_instantiate_ns5__ReferenceType


#define soap_new__ns5__Reference soap_new_ns5__ReferenceType


#define soap_new_req__ns5__Reference soap_new_req_ns5__ReferenceType


#define soap_new_set__ns5__Reference soap_new_set_ns5__ReferenceType


#define soap_put__ns5__Reference soap_put_ns5__ReferenceType


#define soap_write__ns5__Reference soap_write_ns5__ReferenceType


#define soap_get__ns5__Reference soap_get_ns5__ReferenceType


#define soap_read__ns5__Reference soap_read_ns5__ReferenceType

/* _ns5__SignatureMethod is a typedef synonym for ns5__SignatureMethodType */

#ifndef SOAP_TYPE_ACService__ns5__SignatureMethod
#define SOAP_TYPE_ACService__ns5__SignatureMethod (221)
#endif

#define soap_default__ns5__SignatureMethod(soap, a) (a)->ns5__SignatureMethodType::soap_default(soap)


#define soap_serialize__ns5__SignatureMethod(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__SignatureMethod2s soap_ns5__SignatureMethodType2s


#define soap_out__ns5__SignatureMethod soap_out_ns5__SignatureMethodType


#define soap_s2_ns5__SignatureMethod soap_s2ns5__SignatureMethodType


#define soap_in__ns5__SignatureMethod soap_in_ns5__SignatureMethodType


#define soap_instantiate__ns5__SignatureMethod soap_instantiate_ns5__SignatureMethodType


#define soap_new__ns5__SignatureMethod soap_new_ns5__SignatureMethodType


#define soap_new_req__ns5__SignatureMethod soap_new_req_ns5__SignatureMethodType


#define soap_new_set__ns5__SignatureMethod soap_new_set_ns5__SignatureMethodType


#define soap_put__ns5__SignatureMethod soap_put_ns5__SignatureMethodType


#define soap_write__ns5__SignatureMethod soap_write_ns5__SignatureMethodType


#define soap_get__ns5__SignatureMethod soap_get_ns5__SignatureMethodType


#define soap_read__ns5__SignatureMethod soap_read_ns5__SignatureMethodType

/* _ns5__CanonicalizationMethod is a typedef synonym for ns5__CanonicalizationMethodType */

#ifndef SOAP_TYPE_ACService__ns5__CanonicalizationMethod
#define SOAP_TYPE_ACService__ns5__CanonicalizationMethod (220)
#endif

#define soap_default__ns5__CanonicalizationMethod(soap, a) (a)->ns5__CanonicalizationMethodType::soap_default(soap)


#define soap_serialize__ns5__CanonicalizationMethod(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__CanonicalizationMethod2s soap_ns5__CanonicalizationMethodType2s


#define soap_out__ns5__CanonicalizationMethod soap_out_ns5__CanonicalizationMethodType


#define soap_s2_ns5__CanonicalizationMethod soap_s2ns5__CanonicalizationMethodType


#define soap_in__ns5__CanonicalizationMethod soap_in_ns5__CanonicalizationMethodType


#define soap_instantiate__ns5__CanonicalizationMethod soap_instantiate_ns5__CanonicalizationMethodType


#define soap_new__ns5__CanonicalizationMethod soap_new_ns5__CanonicalizationMethodType


#define soap_new_req__ns5__CanonicalizationMethod soap_new_req_ns5__CanonicalizationMethodType


#define soap_new_set__ns5__CanonicalizationMethod soap_new_set_ns5__CanonicalizationMethodType


#define soap_put__ns5__CanonicalizationMethod soap_put_ns5__CanonicalizationMethodType


#define soap_write__ns5__CanonicalizationMethod soap_write_ns5__CanonicalizationMethodType


#define soap_get__ns5__CanonicalizationMethod soap_get_ns5__CanonicalizationMethodType


#define soap_read__ns5__CanonicalizationMethod soap_read_ns5__CanonicalizationMethodType

/* _ns5__SignedInfo is a typedef synonym for ns5__SignedInfoType */

#ifndef SOAP_TYPE_ACService__ns5__SignedInfo
#define SOAP_TYPE_ACService__ns5__SignedInfo (219)
#endif

#define soap_default__ns5__SignedInfo(soap, a) (a)->ns5__SignedInfoType::soap_default(soap)


#define soap_serialize__ns5__SignedInfo(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__SignedInfo2s soap_ns5__SignedInfoType2s


#define soap_out__ns5__SignedInfo soap_out_ns5__SignedInfoType


#define soap_s2_ns5__SignedInfo soap_s2ns5__SignedInfoType


#define soap_in__ns5__SignedInfo soap_in_ns5__SignedInfoType


#define soap_instantiate__ns5__SignedInfo soap_instantiate_ns5__SignedInfoType


#define soap_new__ns5__SignedInfo soap_new_ns5__SignedInfoType


#define soap_new_req__ns5__SignedInfo soap_new_req_ns5__SignedInfoType


#define soap_new_set__ns5__SignedInfo soap_new_set_ns5__SignedInfoType


#define soap_put__ns5__SignedInfo soap_put_ns5__SignedInfoType


#define soap_write__ns5__SignedInfo soap_write_ns5__SignedInfoType


#define soap_get__ns5__SignedInfo soap_get_ns5__SignedInfoType


#define soap_read__ns5__SignedInfo soap_read_ns5__SignedInfoType

/* _ns5__Signature is a typedef synonym for ns5__SignatureType */

#ifndef SOAP_TYPE_ACService__ns5__Signature
#define SOAP_TYPE_ACService__ns5__Signature (218)
#endif

#define soap_default__ns5__Signature(soap, a) (a)->ns5__SignatureType::soap_default(soap)


#define soap_serialize__ns5__Signature(soap, a) (a)->soap_serialize(soap)


#define soap__ns5__Signature2s soap_ns5__SignatureType2s


#define soap_out__ns5__Signature soap_out_ns5__SignatureType


#define soap_s2_ns5__Signature soap_s2ns5__SignatureType


#define soap_in__ns5__Signature soap_in_ns5__SignatureType


#define soap_instantiate__ns5__Signature soap_instantiate_ns5__SignatureType


#define soap_new__ns5__Signature soap_new_ns5__SignatureType


#define soap_new_req__ns5__Signature soap_new_req_ns5__SignatureType


#define soap_new_set__ns5__Signature soap_new_set_ns5__SignatureType


#define soap_put__ns5__Signature soap_put_ns5__SignatureType


#define soap_write__ns5__Signature soap_write_ns5__SignatureType


#define soap_get__ns5__Signature soap_get_ns5__SignatureType


#define soap_read__ns5__Signature soap_read_ns5__SignatureType

/* _ns2__SingleAttributeResponse is a typedef synonym for ns2__SingleAttributeResponseType */

#ifndef SOAP_TYPE_ACService__ns2__SingleAttributeResponse
#define SOAP_TYPE_ACService__ns2__SingleAttributeResponse (217)
#endif

#define soap_default__ns2__SingleAttributeResponse(soap, a) (a)->ns2__SingleAttributeResponseType::soap_default(soap)


#define soap_serialize__ns2__SingleAttributeResponse(soap, a) (a)->soap_serialize(soap)


#define soap__ns2__SingleAttributeResponse2s soap_ns2__SingleAttributeResponseType2s


#define soap_out__ns2__SingleAttributeResponse soap_out_ns2__SingleAttributeResponseType


#define soap_s2_ns2__SingleAttributeResponse soap_s2ns2__SingleAttributeResponseType


#define soap_in__ns2__SingleAttributeResponse soap_in_ns2__SingleAttributeResponseType


#define soap_instantiate__ns2__SingleAttributeResponse soap_instantiate_ns2__SingleAttributeResponseType


#define soap_new__ns2__SingleAttributeResponse soap_new_ns2__SingleAttributeResponseType


#define soap_new_req__ns2__SingleAttributeResponse soap_new_req_ns2__SingleAttributeResponseType


#define soap_new_set__ns2__SingleAttributeResponse soap_new_set_ns2__SingleAttributeResponseType


#define soap_put__ns2__SingleAttributeResponse soap_put_ns2__SingleAttributeResponseType


#define soap_write__ns2__SingleAttributeResponse soap_write_ns2__SingleAttributeResponseType


#define soap_get__ns2__SingleAttributeResponse soap_get_ns2__SingleAttributeResponseType


#define soap_read__ns2__SingleAttributeResponse soap_read_ns2__SingleAttributeResponseType

/* _ns2__PSAAttributeRequest is a typedef synonym for ns2__PSAAttributeRequestType */

#ifndef SOAP_TYPE_ACService__ns2__PSAAttributeRequest
#define SOAP_TYPE_ACService__ns2__PSAAttributeRequest (216)
#endif

#define soap_default__ns2__PSAAttributeRequest(soap, a) (a)->ns2__PSAAttributeRequestType::soap_default(soap)


#define soap_serialize__ns2__PSAAttributeRequest(soap, a) (a)->soap_serialize(soap)


#define soap__ns2__PSAAttributeRequest2s soap_ns2__PSAAttributeRequestType2s


#define soap_out__ns2__PSAAttributeRequest soap_out_ns2__PSAAttributeRequestType


#define soap_s2_ns2__PSAAttributeRequest soap_s2ns2__PSAAttributeRequestType


#define soap_in__ns2__PSAAttributeRequest soap_in_ns2__PSAAttributeRequestType


#define soap_instantiate__ns2__PSAAttributeRequest soap_instantiate_ns2__PSAAttributeRequestType


#define soap_new__ns2__PSAAttributeRequest soap_new_ns2__PSAAttributeRequestType


#define soap_new_req__ns2__PSAAttributeRequest soap_new_req_ns2__PSAAttributeRequestType


#define soap_new_set__ns2__PSAAttributeRequest soap_new_set_ns2__PSAAttributeRequestType


#define soap_put__ns2__PSAAttributeRequest soap_put_ns2__PSAAttributeRequestType


#define soap_write__ns2__PSAAttributeRequest soap_write_ns2__PSAAttributeRequestType


#define soap_get__ns2__PSAAttributeRequest soap_get_ns2__PSAAttributeRequestType


#define soap_read__ns2__PSAAttributeRequest soap_read_ns2__PSAAttributeRequestType

/* _ns2__AttributeResponse is a typedef synonym for ns2__AttributeResponseType */

#ifndef SOAP_TYPE_ACService__ns2__AttributeResponse
#define SOAP_TYPE_ACService__ns2__AttributeResponse (215)
#endif

#define soap_default__ns2__AttributeResponse(soap, a) (a)->ns2__AttributeResponseType::soap_default(soap)


#define soap_serialize__ns2__AttributeResponse(soap, a) (a)->soap_serialize(soap)


#define soap__ns2__AttributeResponse2s soap_ns2__AttributeResponseType2s


#define soap_out__ns2__AttributeResponse soap_out_ns2__AttributeResponseType


#define soap_s2_ns2__AttributeResponse soap_s2ns2__AttributeResponseType


#define soap_in__ns2__AttributeResponse soap_in_ns2__AttributeResponseType


#define soap_instantiate__ns2__AttributeResponse soap_instantiate_ns2__AttributeResponseType


#define soap_new__ns2__AttributeResponse soap_new_ns2__AttributeResponseType


#define soap_new_req__ns2__AttributeResponse soap_new_req_ns2__AttributeResponseType


#define soap_new_set__ns2__AttributeResponse soap_new_set_ns2__AttributeResponseType


#define soap_put__ns2__AttributeResponse soap_put_ns2__AttributeResponseType


#define soap_write__ns2__AttributeResponse soap_write_ns2__AttributeResponseType


#define soap_get__ns2__AttributeResponse soap_get_ns2__AttributeResponseType


#define soap_read__ns2__AttributeResponse soap_read_ns2__AttributeResponseType

/* _ns2__AttributeRequest is a typedef synonym for ns2__AttributeRequestType */

#ifndef SOAP_TYPE_ACService__ns2__AttributeRequest
#define SOAP_TYPE_ACService__ns2__AttributeRequest (214)
#endif

#define soap_default__ns2__AttributeRequest(soap, a) (a)->ns2__AttributeRequestType::soap_default(soap)


#define soap_serialize__ns2__AttributeRequest(soap, a) (a)->soap_serialize(soap)


#define soap__ns2__AttributeRequest2s soap_ns2__AttributeRequestType2s


#define soap_out__ns2__AttributeRequest soap_out_ns2__AttributeRequestType


#define soap_s2_ns2__AttributeRequest soap_s2ns2__AttributeRequestType


#define soap_in__ns2__AttributeRequest soap_in_ns2__AttributeRequestType


#define soap_instantiate__ns2__AttributeRequest soap_instantiate_ns2__AttributeRequestType


#define soap_new__ns2__AttributeRequest soap_new_ns2__AttributeRequestType


#define soap_new_req__ns2__AttributeRequest soap_new_req_ns2__AttributeRequestType


#define soap_new_set__ns2__AttributeRequest soap_new_set_ns2__AttributeRequestType


#define soap_put__ns2__AttributeRequest soap_put_ns2__AttributeRequestType


#define soap_write__ns2__AttributeRequest soap_write_ns2__AttributeRequestType


#define soap_get__ns2__AttributeRequest soap_get_ns2__AttributeRequestType


#define soap_read__ns2__AttributeRequest soap_read_ns2__AttributeRequestType


#ifndef SOAP_TYPE_ACService_ns7__SVGType
#define SOAP_TYPE_ACService_ns7__SVGType (121)
#endif

#define soap_default_ns7__SVGType(soap, a) (a)->xsd__base64Binary::soap_default(soap)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns7__SVGType(struct soap*, const xsd__base64Binary *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns7__SVGType(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_ns7__SVGType(struct soap*, const char*, xsd__base64Binary *, const char*);

#define soap_instantiate_ns7__SVGType soap_instantiate_xsd__base64Binary


#define soap_new_ns7__SVGType soap_new_xsd__base64Binary


#define soap_new_req_ns7__SVGType soap_new_req_xsd__base64Binary


#define soap_new_set_ns7__SVGType soap_new_set_xsd__base64Binary

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns7__SVGType(struct soap*, const xsd__base64Binary *, const char*, const char*);

#ifndef soap_write_ns7__SVGType
#define soap_write_ns7__SVGType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns7:SVGType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_ns7__SVGType(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_ns7__SVGType
#define soap_read_ns7__SVGType(soap, data) ( ((data) ? (ACService::soap_default_ns7__SVGType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns7__SVGType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__ByNameType
#define SOAP_TYPE_ACService_ns6__ByNameType (119)
#endif

#define soap_default_ns6__ByNameType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns6__ByNameType(struct soap*, const std::string *);

#define soap_ns6__ByNameType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__ByNameType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns6__ByNameType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns6__ByNameType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns6__ByNameType soap_instantiate_std__string


#define soap_new_ns6__ByNameType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns6__ByNameType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns6__ByNameType
#define soap_write_ns6__ByNameType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns6__ByNameType(soap, data), 0) || ACService::soap_put_ns6__ByNameType(soap, data, "ns6:ByNameType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns6__ByNameType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns6__ByNameType
#define soap_read_ns6__ByNameType(soap, data) ( ((data) ? (ACService::soap_default_ns6__ByNameType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__ByNameType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* ns6__NumberType is a typedef synonym for xsd__integer */

#ifndef SOAP_TYPE_ACService_ns6__NumberType
#define SOAP_TYPE_ACService_ns6__NumberType (118)
#endif

#define soap_default_ns6__NumberType(soap, a) soap_default_xsd__integer(soap, a)


#define soap_serialize_ns6__NumberType soap_serialize_xsd__integer


#define soap_ns6__NumberType2s soap_xsd__integer2s


#define soap_out_ns6__NumberType soap_out_xsd__integer


#define soap_s2ns6__NumberType soap_s2xsd__integer


#define soap_in_ns6__NumberType soap_in_xsd__integer


#define soap_instantiate_ns6__NumberType soap_instantiate_xsd__integer


#define soap_new_ns6__NumberType soap_new_xsd__integer


#define soap_put_ns6__NumberType soap_put_xsd__integer


#define soap_write_ns6__NumberType soap_write_xsd__integer


#define soap_get_ns6__NumberType soap_get_xsd__integer


#define soap_read_ns6__NumberType soap_read_xsd__integer


#ifndef SOAP_TYPE_ACService_ns6__IssuerType
#define SOAP_TYPE_ACService_ns6__IssuerType (116)
#endif

#define soap_default_ns6__IssuerType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns6__IssuerType(struct soap*, const std::string *);

#define soap_ns6__IssuerType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__IssuerType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns6__IssuerType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns6__IssuerType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns6__IssuerType soap_instantiate_std__string


#define soap_new_ns6__IssuerType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns6__IssuerType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns6__IssuerType
#define soap_write_ns6__IssuerType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns6__IssuerType(soap, data), 0) || ACService::soap_put_ns6__IssuerType(soap, data, "ns6:IssuerType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns6__IssuerType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns6__IssuerType
#define soap_read_ns6__IssuerType(soap, data) ( ((data) ? (ACService::soap_default_ns6__IssuerType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__IssuerType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__EncapsulatedTimeStampType
#define SOAP_TYPE_ACService_ns6__EncapsulatedTimeStampType (115)
#endif

#define soap_default_ns6__EncapsulatedTimeStampType(soap, a) (a)->xsd__base64Binary::soap_default(soap)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns6__EncapsulatedTimeStampType(struct soap*, const xsd__base64Binary *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__EncapsulatedTimeStampType(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_ns6__EncapsulatedTimeStampType(struct soap*, const char*, xsd__base64Binary *, const char*);

#define soap_instantiate_ns6__EncapsulatedTimeStampType soap_instantiate_xsd__base64Binary


#define soap_new_ns6__EncapsulatedTimeStampType soap_new_xsd__base64Binary


#define soap_new_req_ns6__EncapsulatedTimeStampType soap_new_req_xsd__base64Binary


#define soap_new_set_ns6__EncapsulatedTimeStampType soap_new_set_xsd__base64Binary

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns6__EncapsulatedTimeStampType(struct soap*, const xsd__base64Binary *, const char*, const char*);

#ifndef soap_write_ns6__EncapsulatedTimeStampType
#define soap_write_ns6__EncapsulatedTimeStampType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:EncapsulatedTimeStampType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_ns6__EncapsulatedTimeStampType(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_ns6__EncapsulatedTimeStampType
#define soap_read_ns6__EncapsulatedTimeStampType(soap, data) ( ((data) ? (ACService::soap_default_ns6__EncapsulatedTimeStampType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__EncapsulatedTimeStampType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__ResponseCodeMessage
#define SOAP_TYPE_ACService_ns4__ResponseCodeMessage (112)
#endif

#define soap_default_ns4__ResponseCodeMessage(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__ResponseCodeMessage(struct soap*, const std::string *);

#define soap_ns4__ResponseCodeMessage2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__ResponseCodeMessage(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__ResponseCodeMessage soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__ResponseCodeMessage(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__ResponseCodeMessage soap_instantiate_std__string


#define soap_new_ns4__ResponseCodeMessage soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__ResponseCodeMessage(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__ResponseCodeMessage
#define soap_write_ns4__ResponseCodeMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__ResponseCodeMessage(soap, data), 0) || ACService::soap_put_ns4__ResponseCodeMessage(soap, data, "ns4:ResponseCodeMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__ResponseCodeMessage(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__ResponseCodeMessage
#define soap_read_ns4__ResponseCodeMessage(soap, data) ( ((data) ? (ACService::soap_default_ns4__ResponseCodeMessage(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__ResponseCodeMessage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__ResponseCodeType
#define SOAP_TYPE_ACService_ns4__ResponseCodeType (111)
#endif

#define soap_default_ns4__ResponseCodeType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__ResponseCodeType(struct soap*, const std::string *);

#define soap_ns4__ResponseCodeType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__ResponseCodeType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__ResponseCodeType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__ResponseCodeType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__ResponseCodeType soap_instantiate_std__string


#define soap_new_ns4__ResponseCodeType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__ResponseCodeType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__ResponseCodeType
#define soap_write_ns4__ResponseCodeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__ResponseCodeType(soap, data), 0) || ACService::soap_put_ns4__ResponseCodeType(soap, data, "ns4:ResponseCodeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__ResponseCodeType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__ResponseCodeType
#define soap_read_ns4__ResponseCodeType(soap, data) ( ((data) ? (ACService::soap_default_ns4__ResponseCodeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__ResponseCodeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__DescriptionType
#define SOAP_TYPE_ACService_ns4__DescriptionType (110)
#endif

#define soap_default_ns4__DescriptionType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__DescriptionType(struct soap*, const std::string *);

#define soap_ns4__DescriptionType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__DescriptionType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__DescriptionType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__DescriptionType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__DescriptionType soap_instantiate_std__string


#define soap_new_ns4__DescriptionType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__DescriptionType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__DescriptionType
#define soap_write_ns4__DescriptionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__DescriptionType(soap, data), 0) || ACService::soap_put_ns4__DescriptionType(soap, data, "ns4:DescriptionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__DescriptionType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__DescriptionType
#define soap_read_ns4__DescriptionType(soap, data) ( ((data) ? (ACService::soap_default_ns4__DescriptionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__DescriptionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__SubAttributeValueType
#define SOAP_TYPE_ACService_ns4__SubAttributeValueType (109)
#endif

#define soap_default_ns4__SubAttributeValueType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__SubAttributeValueType(struct soap*, const std::string *);

#define soap_ns4__SubAttributeValueType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__SubAttributeValueType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__SubAttributeValueType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__SubAttributeValueType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__SubAttributeValueType soap_instantiate_std__string


#define soap_new_ns4__SubAttributeValueType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__SubAttributeValueType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__SubAttributeValueType
#define soap_write_ns4__SubAttributeValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__SubAttributeValueType(soap, data), 0) || ACService::soap_put_ns4__SubAttributeValueType(soap, data, "ns4:SubAttributeValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__SubAttributeValueType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__SubAttributeValueType
#define soap_read_ns4__SubAttributeValueType(soap, data) ( ((data) ? (ACService::soap_default_ns4__SubAttributeValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__SubAttributeValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__LegalActType
#define SOAP_TYPE_ACService_ns4__LegalActType (108)
#endif

#define soap_default_ns4__LegalActType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__LegalActType(struct soap*, const std::string *);

#define soap_ns4__LegalActType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__LegalActType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__LegalActType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__LegalActType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__LegalActType soap_instantiate_std__string


#define soap_new_ns4__LegalActType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__LegalActType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__LegalActType
#define soap_write_ns4__LegalActType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__LegalActType(soap, data), 0) || ACService::soap_put_ns4__LegalActType(soap, data, "ns4:LegalActType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__LegalActType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__LegalActType
#define soap_read_ns4__LegalActType(soap, data) ( ((data) ? (ACService::soap_default_ns4__LegalActType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__LegalActType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__AttributeIDType
#define SOAP_TYPE_ACService_ns4__AttributeIDType (107)
#endif

#define soap_default_ns4__AttributeIDType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__AttributeIDType(struct soap*, const std::string *);

#define soap_ns4__AttributeIDType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__AttributeIDType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__AttributeIDType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__AttributeIDType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__AttributeIDType soap_instantiate_std__string


#define soap_new_ns4__AttributeIDType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__AttributeIDType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__AttributeIDType
#define soap_write_ns4__AttributeIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__AttributeIDType(soap, data), 0) || ACService::soap_put_ns4__AttributeIDType(soap, data, "ns4:AttributeIDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__AttributeIDType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__AttributeIDType
#define soap_read_ns4__AttributeIDType(soap, data) ( ((data) ? (ACService::soap_default_ns4__AttributeIDType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__AttributeIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__ExtraIDValueType
#define SOAP_TYPE_ACService_ns4__ExtraIDValueType (106)
#endif

#define soap_default_ns4__ExtraIDValueType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__ExtraIDValueType(struct soap*, const std::string *);

#define soap_ns4__ExtraIDValueType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__ExtraIDValueType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__ExtraIDValueType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__ExtraIDValueType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__ExtraIDValueType soap_instantiate_std__string


#define soap_new_ns4__ExtraIDValueType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__ExtraIDValueType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__ExtraIDValueType
#define soap_write_ns4__ExtraIDValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__ExtraIDValueType(soap, data), 0) || ACService::soap_put_ns4__ExtraIDValueType(soap, data, "ns4:ExtraIDValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__ExtraIDValueType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__ExtraIDValueType
#define soap_read_ns4__ExtraIDValueType(soap, data) ( ((data) ? (ACService::soap_default_ns4__ExtraIDValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__ExtraIDValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__CompanyNameType
#define SOAP_TYPE_ACService_ns4__CompanyNameType (105)
#endif

#define soap_default_ns4__CompanyNameType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__CompanyNameType(struct soap*, const std::string *);

#define soap_ns4__CompanyNameType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__CompanyNameType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__CompanyNameType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__CompanyNameType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__CompanyNameType soap_instantiate_std__string


#define soap_new_ns4__CompanyNameType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__CompanyNameType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__CompanyNameType
#define soap_write_ns4__CompanyNameType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__CompanyNameType(soap, data), 0) || ACService::soap_put_ns4__CompanyNameType(soap, data, "ns4:CompanyNameType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__CompanyNameType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__CompanyNameType
#define soap_read_ns4__CompanyNameType(soap, data) ( ((data) ? (ACService::soap_default_ns4__CompanyNameType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__CompanyNameType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__NIPCType
#define SOAP_TYPE_ACService_ns4__NIPCType (104)
#endif

#define soap_default_ns4__NIPCType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__NIPCType(struct soap*, const std::string *);

#define soap_ns4__NIPCType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__NIPCType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__NIPCType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__NIPCType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__NIPCType soap_instantiate_std__string


#define soap_new_ns4__NIPCType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__NIPCType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__NIPCType
#define soap_write_ns4__NIPCType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__NIPCType(soap, data), 0) || ACService::soap_put_ns4__NIPCType(soap, data, "ns4:NIPCType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__NIPCType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__NIPCType
#define soap_read_ns4__NIPCType(soap, data) ( ((data) ? (ACService::soap_default_ns4__NIPCType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__NIPCType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__NICType
#define SOAP_TYPE_ACService_ns4__NICType (103)
#endif

#define soap_default_ns4__NICType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__NICType(struct soap*, const std::string *);

#define soap_ns4__NICType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__NICType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__NICType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__NICType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__NICType soap_instantiate_std__string


#define soap_new_ns4__NICType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__NICType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__NICType
#define soap_write_ns4__NICType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__NICType(soap, data), 0) || ACService::soap_put_ns4__NICType(soap, data, "ns4:NICType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__NICType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__NICType
#define soap_read_ns4__NICType(soap, data) ( ((data) ? (ACService::soap_default_ns4__NICType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__NICType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* ns4__DateType is a typedef synonym for xsd__date */

#ifndef SOAP_TYPE_ACService_ns4__DateType
#define SOAP_TYPE_ACService_ns4__DateType (102)
#endif

#define soap_default_ns4__DateType(soap, a) soap_default_xsd__date(soap, a)


#define soap_serialize_ns4__DateType soap_serialize_xsd__date


#define soap_ns4__DateType2s soap_xsd__date2s


#define soap_out_ns4__DateType soap_out_xsd__date


#define soap_s2ns4__DateType soap_s2xsd__date


#define soap_in_ns4__DateType soap_in_xsd__date


#define soap_instantiate_ns4__DateType soap_instantiate_xsd__date


#define soap_new_ns4__DateType soap_new_xsd__date


#define soap_put_ns4__DateType soap_put_xsd__date


#define soap_write_ns4__DateType soap_write_xsd__date


#define soap_get_ns4__DateType soap_get_xsd__date


#define soap_read_ns4__DateType soap_read_xsd__date

/* ns4__ValidityType is a typedef synonym for xsd__date */

#ifndef SOAP_TYPE_ACService_ns4__ValidityType
#define SOAP_TYPE_ACService_ns4__ValidityType (101)
#endif

#define soap_default_ns4__ValidityType(soap, a) soap_default_xsd__date(soap, a)


#define soap_serialize_ns4__ValidityType soap_serialize_xsd__date


#define soap_ns4__ValidityType2s soap_xsd__date2s


#define soap_out_ns4__ValidityType soap_out_xsd__date


#define soap_s2ns4__ValidityType soap_s2xsd__date


#define soap_in_ns4__ValidityType soap_in_xsd__date


#define soap_instantiate_ns4__ValidityType soap_instantiate_xsd__date


#define soap_new_ns4__ValidityType soap_new_xsd__date


#define soap_put_ns4__ValidityType soap_put_xsd__date


#define soap_write_ns4__ValidityType soap_write_xsd__date


#define soap_get_ns4__ValidityType soap_get_xsd__date


#define soap_read_ns4__ValidityType soap_read_xsd__date


#ifndef SOAP_TYPE_ACService_ns4__NameType
#define SOAP_TYPE_ACService_ns4__NameType (100)
#endif

#define soap_default_ns4__NameType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__NameType(struct soap*, const std::string *);

#define soap_ns4__NameType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__NameType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__NameType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__NameType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__NameType soap_instantiate_std__string


#define soap_new_ns4__NameType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__NameType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__NameType
#define soap_write_ns4__NameType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__NameType(soap, data), 0) || ACService::soap_put_ns4__NameType(soap, data, "ns4:NameType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__NameType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__NameType
#define soap_read_ns4__NameType(soap, data) ( ((data) ? (ACService::soap_default_ns4__NameType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__NameType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns4__ProcessIDType
#define SOAP_TYPE_ACService_ns4__ProcessIDType (99)
#endif

#define soap_default_ns4__ProcessIDType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns4__ProcessIDType(struct soap*, const std::string *);

#define soap_ns4__ProcessIDType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__ProcessIDType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns4__ProcessIDType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns4__ProcessIDType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns4__ProcessIDType soap_instantiate_std__string


#define soap_new_ns4__ProcessIDType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns4__ProcessIDType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns4__ProcessIDType
#define soap_write_ns4__ProcessIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns4__ProcessIDType(soap, data), 0) || ACService::soap_put_ns4__ProcessIDType(soap, data, "ns4:ProcessIDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns4__ProcessIDType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns4__ProcessIDType
#define soap_read_ns4__ProcessIDType(soap, data) ( ((data) ? (ACService::soap_default_ns4__ProcessIDType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns4__ProcessIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* ns5__X509SerialNumberType is a typedef synonym for xsd__integer */

#ifndef SOAP_TYPE_ACService_ns5__X509SerialNumberType
#define SOAP_TYPE_ACService_ns5__X509SerialNumberType (98)
#endif

#define soap_default_ns5__X509SerialNumberType(soap, a) soap_default_xsd__integer(soap, a)


#define soap_serialize_ns5__X509SerialNumberType soap_serialize_xsd__integer


#define soap_ns5__X509SerialNumberType2s soap_xsd__integer2s


#define soap_out_ns5__X509SerialNumberType soap_out_xsd__integer


#define soap_s2ns5__X509SerialNumberType soap_s2xsd__integer


#define soap_in_ns5__X509SerialNumberType soap_in_xsd__integer


#define soap_instantiate_ns5__X509SerialNumberType soap_instantiate_xsd__integer


#define soap_new_ns5__X509SerialNumberType soap_new_xsd__integer


#define soap_put_ns5__X509SerialNumberType soap_put_xsd__integer


#define soap_write_ns5__X509SerialNumberType soap_write_xsd__integer


#define soap_get_ns5__X509SerialNumberType soap_get_xsd__integer


#define soap_read_ns5__X509SerialNumberType soap_read_xsd__integer


#ifndef SOAP_TYPE_ACService_ns5__X509IssuerNameType
#define SOAP_TYPE_ACService_ns5__X509IssuerNameType (97)
#endif

#define soap_default_ns5__X509IssuerNameType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns5__X509IssuerNameType(struct soap*, const std::string *);

#define soap_ns5__X509IssuerNameType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__X509IssuerNameType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns5__X509IssuerNameType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns5__X509IssuerNameType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns5__X509IssuerNameType soap_instantiate_std__string


#define soap_new_ns5__X509IssuerNameType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns5__X509IssuerNameType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns5__X509IssuerNameType
#define soap_write_ns5__X509IssuerNameType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_ns5__X509IssuerNameType(soap, data), 0) || ACService::soap_put_ns5__X509IssuerNameType(soap, data, "ns5:X509IssuerNameType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns5__X509IssuerNameType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns5__X509IssuerNameType
#define soap_read_ns5__X509IssuerNameType(soap, data) ( ((data) ? (ACService::soap_default_ns5__X509IssuerNameType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__X509IssuerNameType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns7__SVGListType
#define SOAP_TYPE_ACService_ns7__SVGListType (96)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns7__SVGListType(struct soap*, const char*, int, const ns7__SVGListType *, const char*);
SOAP_FMAC3 ns7__SVGListType * SOAP_FMAC4 soap_in_ns7__SVGListType(struct soap*, const char*, ns7__SVGListType *, const char*);
SOAP_FMAC1 ns7__SVGListType * SOAP_FMAC2 soap_instantiate_ns7__SVGListType(struct soap*, int, const char*, const char*, size_t*);

inline ns7__SVGListType * soap_new_ns7__SVGListType(struct soap *soap, int n = -1) { return soap_instantiate_ns7__SVGListType(soap, n, NULL, NULL, NULL); }

inline ns7__SVGListType * soap_new_req_ns7__SVGListType(
	struct soap *soap,
	const std::vector<xsd__base64Binary> & ns7__SVG)
{	ns7__SVGListType *_p = soap_new_ns7__SVGListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns7__SVGListType::ns7__SVG = ns7__SVG;
	}
	return _p;
}

inline ns7__SVGListType * soap_new_set_ns7__SVGListType(
	struct soap *soap,
	const std::vector<xsd__base64Binary> & ns7__SVG)
{	ns7__SVGListType *_p = soap_new_ns7__SVGListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns7__SVGListType::ns7__SVG = ns7__SVG;
	}
	return _p;
}

#ifndef soap_write_ns7__SVGListType
#define soap_write_ns7__SVGListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns7:SVGListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns7__SVGListType * SOAP_FMAC4 soap_get_ns7__SVGListType(struct soap*, ns7__SVGListType *, const char*, const char*);

#ifndef soap_read_ns7__SVGListType
#define soap_read_ns7__SVGListType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns7__SVGListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__ArchiveTimeStampType
#define SOAP_TYPE_ACService_ns6__ArchiveTimeStampType (90)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__ArchiveTimeStampType(struct soap*, const char*, int, const ns6__ArchiveTimeStampType *, const char*);
SOAP_FMAC3 ns6__ArchiveTimeStampType * SOAP_FMAC4 soap_in_ns6__ArchiveTimeStampType(struct soap*, const char*, ns6__ArchiveTimeStampType *, const char*);
SOAP_FMAC1 ns6__ArchiveTimeStampType * SOAP_FMAC2 soap_instantiate_ns6__ArchiveTimeStampType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__ArchiveTimeStampType * soap_new_ns6__ArchiveTimeStampType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__ArchiveTimeStampType(soap, n, NULL, NULL, NULL); }

inline ns6__ArchiveTimeStampType * soap_new_req_ns6__ArchiveTimeStampType(
	struct soap *soap,
	ns5__CanonicalizationMethodType *ns5__CanonicalizationMethod,
	const xsd__base64Binary& ns6__EncapsulatedTimeStamp)
{	ns6__ArchiveTimeStampType *_p = soap_new_ns6__ArchiveTimeStampType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__ArchiveTimeStampType::ns5__CanonicalizationMethod = ns5__CanonicalizationMethod;
		_p->ns6__ArchiveTimeStampType::ns6__EncapsulatedTimeStamp = ns6__EncapsulatedTimeStamp;
	}
	return _p;
}

inline ns6__ArchiveTimeStampType * soap_new_set_ns6__ArchiveTimeStampType(
	struct soap *soap,
	ns5__CanonicalizationMethodType *ns5__CanonicalizationMethod,
	const xsd__base64Binary& ns6__EncapsulatedTimeStamp)
{	ns6__ArchiveTimeStampType *_p = soap_new_ns6__ArchiveTimeStampType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__ArchiveTimeStampType::ns5__CanonicalizationMethod = ns5__CanonicalizationMethod;
		_p->ns6__ArchiveTimeStampType::ns6__EncapsulatedTimeStamp = ns6__EncapsulatedTimeStamp;
	}
	return _p;
}

#ifndef soap_write_ns6__ArchiveTimeStampType
#define soap_write_ns6__ArchiveTimeStampType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:ArchiveTimeStampType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__ArchiveTimeStampType * SOAP_FMAC4 soap_get_ns6__ArchiveTimeStampType(struct soap*, ns6__ArchiveTimeStampType *, const char*, const char*);

#ifndef soap_read_ns6__ArchiveTimeStampType
#define soap_read_ns6__ArchiveTimeStampType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__ArchiveTimeStampType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__EncapsulatedOCSPValueType
#define SOAP_TYPE_ACService_ns6__EncapsulatedOCSPValueType (89)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__EncapsulatedOCSPValueType(struct soap*, const char*, int, const ns6__EncapsulatedOCSPValueType *, const char*);
SOAP_FMAC3 ns6__EncapsulatedOCSPValueType * SOAP_FMAC4 soap_in_ns6__EncapsulatedOCSPValueType(struct soap*, const char*, ns6__EncapsulatedOCSPValueType *, const char*);
SOAP_FMAC1 ns6__EncapsulatedOCSPValueType * SOAP_FMAC2 soap_instantiate_ns6__EncapsulatedOCSPValueType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__EncapsulatedOCSPValueType * soap_new_ns6__EncapsulatedOCSPValueType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__EncapsulatedOCSPValueType(soap, n, NULL, NULL, NULL); }

inline ns6__EncapsulatedOCSPValueType * soap_new_req_ns6__EncapsulatedOCSPValueType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns6__EncapsulatedOCSPValueType *_p = soap_new_ns6__EncapsulatedOCSPValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__EncapsulatedOCSPValueType::__item = __item;
		_p->ns6__EncapsulatedOCSPValueType::Id = Id;
	}
	return _p;
}

inline ns6__EncapsulatedOCSPValueType * soap_new_set_ns6__EncapsulatedOCSPValueType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns6__EncapsulatedOCSPValueType *_p = soap_new_ns6__EncapsulatedOCSPValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__EncapsulatedOCSPValueType::__item = __item;
		_p->ns6__EncapsulatedOCSPValueType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns6__EncapsulatedOCSPValueType
#define soap_write_ns6__EncapsulatedOCSPValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:EncapsulatedOCSPValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__EncapsulatedOCSPValueType * SOAP_FMAC4 soap_get_ns6__EncapsulatedOCSPValueType(struct soap*, ns6__EncapsulatedOCSPValueType *, const char*, const char*);

#ifndef soap_read_ns6__EncapsulatedOCSPValueType
#define soap_read_ns6__EncapsulatedOCSPValueType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__EncapsulatedOCSPValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__OCSPValuesType
#define SOAP_TYPE_ACService_ns6__OCSPValuesType (88)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__OCSPValuesType(struct soap*, const char*, int, const ns6__OCSPValuesType *, const char*);
SOAP_FMAC3 ns6__OCSPValuesType * SOAP_FMAC4 soap_in_ns6__OCSPValuesType(struct soap*, const char*, ns6__OCSPValuesType *, const char*);
SOAP_FMAC1 ns6__OCSPValuesType * SOAP_FMAC2 soap_instantiate_ns6__OCSPValuesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__OCSPValuesType * soap_new_ns6__OCSPValuesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__OCSPValuesType(soap, n, NULL, NULL, NULL); }

inline ns6__OCSPValuesType * soap_new_req_ns6__OCSPValuesType(
	struct soap *soap,
	const std::vector<ns6__EncapsulatedOCSPValueType *> & ns6__EncapsulatedOCSPValue,
	const std::string& Id)
{	ns6__OCSPValuesType *_p = soap_new_ns6__OCSPValuesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__OCSPValuesType::ns6__EncapsulatedOCSPValue = ns6__EncapsulatedOCSPValue;
		_p->ns6__OCSPValuesType::Id = Id;
	}
	return _p;
}

inline ns6__OCSPValuesType * soap_new_set_ns6__OCSPValuesType(
	struct soap *soap,
	const std::vector<ns6__EncapsulatedOCSPValueType *> & ns6__EncapsulatedOCSPValue,
	const std::string& Id)
{	ns6__OCSPValuesType *_p = soap_new_ns6__OCSPValuesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__OCSPValuesType::ns6__EncapsulatedOCSPValue = ns6__EncapsulatedOCSPValue;
		_p->ns6__OCSPValuesType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns6__OCSPValuesType
#define soap_write_ns6__OCSPValuesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:OCSPValuesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__OCSPValuesType * SOAP_FMAC4 soap_get_ns6__OCSPValuesType(struct soap*, ns6__OCSPValuesType *, const char*, const char*);

#ifndef soap_read_ns6__OCSPValuesType
#define soap_read_ns6__OCSPValuesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__OCSPValuesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__EncapsulatedCRLValueType
#define SOAP_TYPE_ACService_ns6__EncapsulatedCRLValueType (87)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__EncapsulatedCRLValueType(struct soap*, const char*, int, const ns6__EncapsulatedCRLValueType *, const char*);
SOAP_FMAC3 ns6__EncapsulatedCRLValueType * SOAP_FMAC4 soap_in_ns6__EncapsulatedCRLValueType(struct soap*, const char*, ns6__EncapsulatedCRLValueType *, const char*);
SOAP_FMAC1 ns6__EncapsulatedCRLValueType * SOAP_FMAC2 soap_instantiate_ns6__EncapsulatedCRLValueType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__EncapsulatedCRLValueType * soap_new_ns6__EncapsulatedCRLValueType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__EncapsulatedCRLValueType(soap, n, NULL, NULL, NULL); }

inline ns6__EncapsulatedCRLValueType * soap_new_req_ns6__EncapsulatedCRLValueType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns6__EncapsulatedCRLValueType *_p = soap_new_ns6__EncapsulatedCRLValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__EncapsulatedCRLValueType::__item = __item;
		_p->ns6__EncapsulatedCRLValueType::Id = Id;
	}
	return _p;
}

inline ns6__EncapsulatedCRLValueType * soap_new_set_ns6__EncapsulatedCRLValueType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns6__EncapsulatedCRLValueType *_p = soap_new_ns6__EncapsulatedCRLValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__EncapsulatedCRLValueType::__item = __item;
		_p->ns6__EncapsulatedCRLValueType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns6__EncapsulatedCRLValueType
#define soap_write_ns6__EncapsulatedCRLValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:EncapsulatedCRLValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__EncapsulatedCRLValueType * SOAP_FMAC4 soap_get_ns6__EncapsulatedCRLValueType(struct soap*, ns6__EncapsulatedCRLValueType *, const char*, const char*);

#ifndef soap_read_ns6__EncapsulatedCRLValueType
#define soap_read_ns6__EncapsulatedCRLValueType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__EncapsulatedCRLValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CRLValuesType
#define SOAP_TYPE_ACService_ns6__CRLValuesType (86)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CRLValuesType(struct soap*, const char*, int, const ns6__CRLValuesType *, const char*);
SOAP_FMAC3 ns6__CRLValuesType * SOAP_FMAC4 soap_in_ns6__CRLValuesType(struct soap*, const char*, ns6__CRLValuesType *, const char*);
SOAP_FMAC1 ns6__CRLValuesType * SOAP_FMAC2 soap_instantiate_ns6__CRLValuesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CRLValuesType * soap_new_ns6__CRLValuesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CRLValuesType(soap, n, NULL, NULL, NULL); }

inline ns6__CRLValuesType * soap_new_req_ns6__CRLValuesType(
	struct soap *soap,
	const std::vector<ns6__EncapsulatedCRLValueType *> & ns6__EncapsulatedCRLValue,
	const std::string& Id)
{	ns6__CRLValuesType *_p = soap_new_ns6__CRLValuesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CRLValuesType::ns6__EncapsulatedCRLValue = ns6__EncapsulatedCRLValue;
		_p->ns6__CRLValuesType::Id = Id;
	}
	return _p;
}

inline ns6__CRLValuesType * soap_new_set_ns6__CRLValuesType(
	struct soap *soap,
	const std::vector<ns6__EncapsulatedCRLValueType *> & ns6__EncapsulatedCRLValue,
	const std::string& Id)
{	ns6__CRLValuesType *_p = soap_new_ns6__CRLValuesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CRLValuesType::ns6__EncapsulatedCRLValue = ns6__EncapsulatedCRLValue;
		_p->ns6__CRLValuesType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns6__CRLValuesType
#define soap_write_ns6__CRLValuesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CRLValuesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CRLValuesType * SOAP_FMAC4 soap_get_ns6__CRLValuesType(struct soap*, ns6__CRLValuesType *, const char*, const char*);

#ifndef soap_read_ns6__CRLValuesType
#define soap_read_ns6__CRLValuesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CRLValuesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__RevocationValuesType
#define SOAP_TYPE_ACService_ns6__RevocationValuesType (85)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__RevocationValuesType(struct soap*, const char*, int, const ns6__RevocationValuesType *, const char*);
SOAP_FMAC3 ns6__RevocationValuesType * SOAP_FMAC4 soap_in_ns6__RevocationValuesType(struct soap*, const char*, ns6__RevocationValuesType *, const char*);
SOAP_FMAC1 ns6__RevocationValuesType * SOAP_FMAC2 soap_instantiate_ns6__RevocationValuesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__RevocationValuesType * soap_new_ns6__RevocationValuesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__RevocationValuesType(soap, n, NULL, NULL, NULL); }

inline ns6__RevocationValuesType * soap_new_req_ns6__RevocationValuesType(
	struct soap *soap,
	ns6__CRLValuesType *ns6__CRLValues,
	ns6__OCSPValuesType *ns6__OCSPValues,
	const std::string& Id)
{	ns6__RevocationValuesType *_p = soap_new_ns6__RevocationValuesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__RevocationValuesType::ns6__CRLValues = ns6__CRLValues;
		_p->ns6__RevocationValuesType::ns6__OCSPValues = ns6__OCSPValues;
		_p->ns6__RevocationValuesType::Id = Id;
	}
	return _p;
}

inline ns6__RevocationValuesType * soap_new_set_ns6__RevocationValuesType(
	struct soap *soap,
	ns6__CRLValuesType *ns6__CRLValues,
	ns6__OCSPValuesType *ns6__OCSPValues,
	const std::string& Id)
{	ns6__RevocationValuesType *_p = soap_new_ns6__RevocationValuesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__RevocationValuesType::ns6__CRLValues = ns6__CRLValues;
		_p->ns6__RevocationValuesType::ns6__OCSPValues = ns6__OCSPValues;
		_p->ns6__RevocationValuesType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns6__RevocationValuesType
#define soap_write_ns6__RevocationValuesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:RevocationValuesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__RevocationValuesType * SOAP_FMAC4 soap_get_ns6__RevocationValuesType(struct soap*, ns6__RevocationValuesType *, const char*, const char*);

#ifndef soap_read_ns6__RevocationValuesType
#define soap_read_ns6__RevocationValuesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__RevocationValuesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__EncapsulatedX509CertificateType
#define SOAP_TYPE_ACService_ns6__EncapsulatedX509CertificateType (84)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__EncapsulatedX509CertificateType(struct soap*, const char*, int, const ns6__EncapsulatedX509CertificateType *, const char*);
SOAP_FMAC3 ns6__EncapsulatedX509CertificateType * SOAP_FMAC4 soap_in_ns6__EncapsulatedX509CertificateType(struct soap*, const char*, ns6__EncapsulatedX509CertificateType *, const char*);
SOAP_FMAC1 ns6__EncapsulatedX509CertificateType * SOAP_FMAC2 soap_instantiate_ns6__EncapsulatedX509CertificateType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__EncapsulatedX509CertificateType * soap_new_ns6__EncapsulatedX509CertificateType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__EncapsulatedX509CertificateType(soap, n, NULL, NULL, NULL); }

inline ns6__EncapsulatedX509CertificateType * soap_new_req_ns6__EncapsulatedX509CertificateType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns6__EncapsulatedX509CertificateType *_p = soap_new_ns6__EncapsulatedX509CertificateType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__EncapsulatedX509CertificateType::__item = __item;
		_p->ns6__EncapsulatedX509CertificateType::Id = Id;
	}
	return _p;
}

inline ns6__EncapsulatedX509CertificateType * soap_new_set_ns6__EncapsulatedX509CertificateType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns6__EncapsulatedX509CertificateType *_p = soap_new_ns6__EncapsulatedX509CertificateType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__EncapsulatedX509CertificateType::__item = __item;
		_p->ns6__EncapsulatedX509CertificateType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns6__EncapsulatedX509CertificateType
#define soap_write_ns6__EncapsulatedX509CertificateType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:EncapsulatedX509CertificateType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__EncapsulatedX509CertificateType * SOAP_FMAC4 soap_get_ns6__EncapsulatedX509CertificateType(struct soap*, ns6__EncapsulatedX509CertificateType *, const char*, const char*);

#ifndef soap_read_ns6__EncapsulatedX509CertificateType
#define soap_read_ns6__EncapsulatedX509CertificateType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__EncapsulatedX509CertificateType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CertificateValuesType
#define SOAP_TYPE_ACService_ns6__CertificateValuesType (83)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CertificateValuesType(struct soap*, const char*, int, const ns6__CertificateValuesType *, const char*);
SOAP_FMAC3 ns6__CertificateValuesType * SOAP_FMAC4 soap_in_ns6__CertificateValuesType(struct soap*, const char*, ns6__CertificateValuesType *, const char*);
SOAP_FMAC1 ns6__CertificateValuesType * SOAP_FMAC2 soap_instantiate_ns6__CertificateValuesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CertificateValuesType * soap_new_ns6__CertificateValuesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CertificateValuesType(soap, n, NULL, NULL, NULL); }

inline ns6__CertificateValuesType * soap_new_req_ns6__CertificateValuesType(
	struct soap *soap,
	const std::vector<ns6__EncapsulatedX509CertificateType *> & ns6__EncapsulatedX509Certificate,
	const std::string& Id)
{	ns6__CertificateValuesType *_p = soap_new_ns6__CertificateValuesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CertificateValuesType::ns6__EncapsulatedX509Certificate = ns6__EncapsulatedX509Certificate;
		_p->ns6__CertificateValuesType::Id = Id;
	}
	return _p;
}

inline ns6__CertificateValuesType * soap_new_set_ns6__CertificateValuesType(
	struct soap *soap,
	const std::vector<ns6__EncapsulatedX509CertificateType *> & ns6__EncapsulatedX509Certificate,
	const std::string& Id)
{	ns6__CertificateValuesType *_p = soap_new_ns6__CertificateValuesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CertificateValuesType::ns6__EncapsulatedX509Certificate = ns6__EncapsulatedX509Certificate;
		_p->ns6__CertificateValuesType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns6__CertificateValuesType
#define soap_write_ns6__CertificateValuesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CertificateValuesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CertificateValuesType * SOAP_FMAC4 soap_get_ns6__CertificateValuesType(struct soap*, ns6__CertificateValuesType *, const char*, const char*);

#ifndef soap_read_ns6__CertificateValuesType
#define soap_read_ns6__CertificateValuesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CertificateValuesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__SigAndRefsTimeStampType
#define SOAP_TYPE_ACService_ns6__SigAndRefsTimeStampType (82)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__SigAndRefsTimeStampType(struct soap*, const char*, int, const ns6__SigAndRefsTimeStampType *, const char*);
SOAP_FMAC3 ns6__SigAndRefsTimeStampType * SOAP_FMAC4 soap_in_ns6__SigAndRefsTimeStampType(struct soap*, const char*, ns6__SigAndRefsTimeStampType *, const char*);
SOAP_FMAC1 ns6__SigAndRefsTimeStampType * SOAP_FMAC2 soap_instantiate_ns6__SigAndRefsTimeStampType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__SigAndRefsTimeStampType * soap_new_ns6__SigAndRefsTimeStampType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__SigAndRefsTimeStampType(soap, n, NULL, NULL, NULL); }

inline ns6__SigAndRefsTimeStampType * soap_new_req_ns6__SigAndRefsTimeStampType(
	struct soap *soap,
	ns5__CanonicalizationMethodType *ns5__CanonicalizationMethod,
	const xsd__base64Binary& ns6__EncapsulatedTimeStamp)
{	ns6__SigAndRefsTimeStampType *_p = soap_new_ns6__SigAndRefsTimeStampType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SigAndRefsTimeStampType::ns5__CanonicalizationMethod = ns5__CanonicalizationMethod;
		_p->ns6__SigAndRefsTimeStampType::ns6__EncapsulatedTimeStamp = ns6__EncapsulatedTimeStamp;
	}
	return _p;
}

inline ns6__SigAndRefsTimeStampType * soap_new_set_ns6__SigAndRefsTimeStampType(
	struct soap *soap,
	ns5__CanonicalizationMethodType *ns5__CanonicalizationMethod,
	const xsd__base64Binary& ns6__EncapsulatedTimeStamp)
{	ns6__SigAndRefsTimeStampType *_p = soap_new_ns6__SigAndRefsTimeStampType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SigAndRefsTimeStampType::ns5__CanonicalizationMethod = ns5__CanonicalizationMethod;
		_p->ns6__SigAndRefsTimeStampType::ns6__EncapsulatedTimeStamp = ns6__EncapsulatedTimeStamp;
	}
	return _p;
}

#ifndef soap_write_ns6__SigAndRefsTimeStampType
#define soap_write_ns6__SigAndRefsTimeStampType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:SigAndRefsTimeStampType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SigAndRefsTimeStampType * SOAP_FMAC4 soap_get_ns6__SigAndRefsTimeStampType(struct soap*, ns6__SigAndRefsTimeStampType *, const char*, const char*);

#ifndef soap_read_ns6__SigAndRefsTimeStampType
#define soap_read_ns6__SigAndRefsTimeStampType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__SigAndRefsTimeStampType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__ResponderIDType
#define SOAP_TYPE_ACService_ns6__ResponderIDType (81)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__ResponderIDType(struct soap*, const char*, int, const ns6__ResponderIDType *, const char*);
SOAP_FMAC3 ns6__ResponderIDType * SOAP_FMAC4 soap_in_ns6__ResponderIDType(struct soap*, const char*, ns6__ResponderIDType *, const char*);
SOAP_FMAC1 ns6__ResponderIDType * SOAP_FMAC2 soap_instantiate_ns6__ResponderIDType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__ResponderIDType * soap_new_ns6__ResponderIDType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__ResponderIDType(soap, n, NULL, NULL, NULL); }

inline ns6__ResponderIDType * soap_new_req_ns6__ResponderIDType(
	struct soap *soap,
	char *ns6__ByName)
{	ns6__ResponderIDType *_p = soap_new_ns6__ResponderIDType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__ResponderIDType::ns6__ByName = ns6__ByName;
	}
	return _p;
}

inline ns6__ResponderIDType * soap_new_set_ns6__ResponderIDType(
	struct soap *soap,
	char *ns6__ByName)
{	ns6__ResponderIDType *_p = soap_new_ns6__ResponderIDType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__ResponderIDType::ns6__ByName = ns6__ByName;
	}
	return _p;
}

#ifndef soap_write_ns6__ResponderIDType
#define soap_write_ns6__ResponderIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:ResponderIDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__ResponderIDType * SOAP_FMAC4 soap_get_ns6__ResponderIDType(struct soap*, ns6__ResponderIDType *, const char*, const char*);

#ifndef soap_read_ns6__ResponderIDType
#define soap_read_ns6__ResponderIDType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__ResponderIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__OCSPIdentifierType
#define SOAP_TYPE_ACService_ns6__OCSPIdentifierType (80)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__OCSPIdentifierType(struct soap*, const char*, int, const ns6__OCSPIdentifierType *, const char*);
SOAP_FMAC3 ns6__OCSPIdentifierType * SOAP_FMAC4 soap_in_ns6__OCSPIdentifierType(struct soap*, const char*, ns6__OCSPIdentifierType *, const char*);
SOAP_FMAC1 ns6__OCSPIdentifierType * SOAP_FMAC2 soap_instantiate_ns6__OCSPIdentifierType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__OCSPIdentifierType * soap_new_ns6__OCSPIdentifierType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__OCSPIdentifierType(soap, n, NULL, NULL, NULL); }

inline ns6__OCSPIdentifierType * soap_new_req_ns6__OCSPIdentifierType(
	struct soap *soap,
	ns6__ResponderIDType *ns6__ResponderID,
	char *ns6__ProducedAt)
{	ns6__OCSPIdentifierType *_p = soap_new_ns6__OCSPIdentifierType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__OCSPIdentifierType::ns6__ResponderID = ns6__ResponderID;
		_p->ns6__OCSPIdentifierType::ns6__ProducedAt = ns6__ProducedAt;
	}
	return _p;
}

inline ns6__OCSPIdentifierType * soap_new_set_ns6__OCSPIdentifierType(
	struct soap *soap,
	ns6__ResponderIDType *ns6__ResponderID,
	char *ns6__ProducedAt)
{	ns6__OCSPIdentifierType *_p = soap_new_ns6__OCSPIdentifierType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__OCSPIdentifierType::ns6__ResponderID = ns6__ResponderID;
		_p->ns6__OCSPIdentifierType::ns6__ProducedAt = ns6__ProducedAt;
	}
	return _p;
}

#ifndef soap_write_ns6__OCSPIdentifierType
#define soap_write_ns6__OCSPIdentifierType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:OCSPIdentifierType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__OCSPIdentifierType * SOAP_FMAC4 soap_get_ns6__OCSPIdentifierType(struct soap*, ns6__OCSPIdentifierType *, const char*, const char*);

#ifndef soap_read_ns6__OCSPIdentifierType
#define soap_read_ns6__OCSPIdentifierType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__OCSPIdentifierType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__OCSPRefType
#define SOAP_TYPE_ACService_ns6__OCSPRefType (79)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__OCSPRefType(struct soap*, const char*, int, const ns6__OCSPRefType *, const char*);
SOAP_FMAC3 ns6__OCSPRefType * SOAP_FMAC4 soap_in_ns6__OCSPRefType(struct soap*, const char*, ns6__OCSPRefType *, const char*);
SOAP_FMAC1 ns6__OCSPRefType * SOAP_FMAC2 soap_instantiate_ns6__OCSPRefType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__OCSPRefType * soap_new_ns6__OCSPRefType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__OCSPRefType(soap, n, NULL, NULL, NULL); }

inline ns6__OCSPRefType * soap_new_req_ns6__OCSPRefType(
	struct soap *soap,
	ns6__OCSPIdentifierType *ns6__OCSPIdentifier,
	ns6__DigestAlgAndValueType *ns6__DigestAlgAndValue)
{	ns6__OCSPRefType *_p = soap_new_ns6__OCSPRefType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__OCSPRefType::ns6__OCSPIdentifier = ns6__OCSPIdentifier;
		_p->ns6__OCSPRefType::ns6__DigestAlgAndValue = ns6__DigestAlgAndValue;
	}
	return _p;
}

inline ns6__OCSPRefType * soap_new_set_ns6__OCSPRefType(
	struct soap *soap,
	ns6__OCSPIdentifierType *ns6__OCSPIdentifier,
	ns6__DigestAlgAndValueType *ns6__DigestAlgAndValue)
{	ns6__OCSPRefType *_p = soap_new_ns6__OCSPRefType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__OCSPRefType::ns6__OCSPIdentifier = ns6__OCSPIdentifier;
		_p->ns6__OCSPRefType::ns6__DigestAlgAndValue = ns6__DigestAlgAndValue;
	}
	return _p;
}

#ifndef soap_write_ns6__OCSPRefType
#define soap_write_ns6__OCSPRefType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:OCSPRefType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__OCSPRefType * SOAP_FMAC4 soap_get_ns6__OCSPRefType(struct soap*, ns6__OCSPRefType *, const char*, const char*);

#ifndef soap_read_ns6__OCSPRefType
#define soap_read_ns6__OCSPRefType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__OCSPRefType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__OCSPRefsType
#define SOAP_TYPE_ACService_ns6__OCSPRefsType (78)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__OCSPRefsType(struct soap*, const char*, int, const ns6__OCSPRefsType *, const char*);
SOAP_FMAC3 ns6__OCSPRefsType * SOAP_FMAC4 soap_in_ns6__OCSPRefsType(struct soap*, const char*, ns6__OCSPRefsType *, const char*);
SOAP_FMAC1 ns6__OCSPRefsType * SOAP_FMAC2 soap_instantiate_ns6__OCSPRefsType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__OCSPRefsType * soap_new_ns6__OCSPRefsType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__OCSPRefsType(soap, n, NULL, NULL, NULL); }

inline ns6__OCSPRefsType * soap_new_req_ns6__OCSPRefsType(
	struct soap *soap,
	const std::vector<ns6__OCSPRefType *> & ns6__OCSPRef)
{	ns6__OCSPRefsType *_p = soap_new_ns6__OCSPRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__OCSPRefsType::ns6__OCSPRef = ns6__OCSPRef;
	}
	return _p;
}

inline ns6__OCSPRefsType * soap_new_set_ns6__OCSPRefsType(
	struct soap *soap,
	const std::vector<ns6__OCSPRefType *> & ns6__OCSPRef)
{	ns6__OCSPRefsType *_p = soap_new_ns6__OCSPRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__OCSPRefsType::ns6__OCSPRef = ns6__OCSPRef;
	}
	return _p;
}

#ifndef soap_write_ns6__OCSPRefsType
#define soap_write_ns6__OCSPRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:OCSPRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__OCSPRefsType * SOAP_FMAC4 soap_get_ns6__OCSPRefsType(struct soap*, ns6__OCSPRefsType *, const char*, const char*);

#ifndef soap_read_ns6__OCSPRefsType
#define soap_read_ns6__OCSPRefsType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__OCSPRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CRLIdentifierType
#define SOAP_TYPE_ACService_ns6__CRLIdentifierType (77)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CRLIdentifierType(struct soap*, const char*, int, const ns6__CRLIdentifierType *, const char*);
SOAP_FMAC3 ns6__CRLIdentifierType * SOAP_FMAC4 soap_in_ns6__CRLIdentifierType(struct soap*, const char*, ns6__CRLIdentifierType *, const char*);
SOAP_FMAC1 ns6__CRLIdentifierType * SOAP_FMAC2 soap_instantiate_ns6__CRLIdentifierType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CRLIdentifierType * soap_new_ns6__CRLIdentifierType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CRLIdentifierType(soap, n, NULL, NULL, NULL); }

inline ns6__CRLIdentifierType * soap_new_req_ns6__CRLIdentifierType(
	struct soap *soap,
	char *ns6__Issuer,
	char *ns6__IssueTime,
	char *ns6__Number)
{	ns6__CRLIdentifierType *_p = soap_new_ns6__CRLIdentifierType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CRLIdentifierType::ns6__Issuer = ns6__Issuer;
		_p->ns6__CRLIdentifierType::ns6__IssueTime = ns6__IssueTime;
		_p->ns6__CRLIdentifierType::ns6__Number = ns6__Number;
	}
	return _p;
}

inline ns6__CRLIdentifierType * soap_new_set_ns6__CRLIdentifierType(
	struct soap *soap,
	char *ns6__Issuer,
	char *ns6__IssueTime,
	char *ns6__Number)
{	ns6__CRLIdentifierType *_p = soap_new_ns6__CRLIdentifierType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CRLIdentifierType::ns6__Issuer = ns6__Issuer;
		_p->ns6__CRLIdentifierType::ns6__IssueTime = ns6__IssueTime;
		_p->ns6__CRLIdentifierType::ns6__Number = ns6__Number;
	}
	return _p;
}

#ifndef soap_write_ns6__CRLIdentifierType
#define soap_write_ns6__CRLIdentifierType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CRLIdentifierType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CRLIdentifierType * SOAP_FMAC4 soap_get_ns6__CRLIdentifierType(struct soap*, ns6__CRLIdentifierType *, const char*, const char*);

#ifndef soap_read_ns6__CRLIdentifierType
#define soap_read_ns6__CRLIdentifierType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CRLIdentifierType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__DigestAlgAndValueType
#define SOAP_TYPE_ACService_ns6__DigestAlgAndValueType (76)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__DigestAlgAndValueType(struct soap*, const char*, int, const ns6__DigestAlgAndValueType *, const char*);
SOAP_FMAC3 ns6__DigestAlgAndValueType * SOAP_FMAC4 soap_in_ns6__DigestAlgAndValueType(struct soap*, const char*, ns6__DigestAlgAndValueType *, const char*);
SOAP_FMAC1 ns6__DigestAlgAndValueType * SOAP_FMAC2 soap_instantiate_ns6__DigestAlgAndValueType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__DigestAlgAndValueType * soap_new_ns6__DigestAlgAndValueType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__DigestAlgAndValueType(soap, n, NULL, NULL, NULL); }

inline ns6__DigestAlgAndValueType * soap_new_req_ns6__DigestAlgAndValueType(
	struct soap *soap,
	ns5__DigestMethodType *ns5__DigestMethod,
	ns5__DigestValueType *ns5__DigestValue)
{	ns6__DigestAlgAndValueType *_p = soap_new_ns6__DigestAlgAndValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__DigestAlgAndValueType::ns5__DigestMethod = ns5__DigestMethod;
		_p->ns6__DigestAlgAndValueType::ns5__DigestValue = ns5__DigestValue;
	}
	return _p;
}

inline ns6__DigestAlgAndValueType * soap_new_set_ns6__DigestAlgAndValueType(
	struct soap *soap,
	ns5__DigestMethodType *ns5__DigestMethod,
	ns5__DigestValueType *ns5__DigestValue)
{	ns6__DigestAlgAndValueType *_p = soap_new_ns6__DigestAlgAndValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__DigestAlgAndValueType::ns5__DigestMethod = ns5__DigestMethod;
		_p->ns6__DigestAlgAndValueType::ns5__DigestValue = ns5__DigestValue;
	}
	return _p;
}

#ifndef soap_write_ns6__DigestAlgAndValueType
#define soap_write_ns6__DigestAlgAndValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:DigestAlgAndValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__DigestAlgAndValueType * SOAP_FMAC4 soap_get_ns6__DigestAlgAndValueType(struct soap*, ns6__DigestAlgAndValueType *, const char*, const char*);

#ifndef soap_read_ns6__DigestAlgAndValueType
#define soap_read_ns6__DigestAlgAndValueType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__DigestAlgAndValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CRLRefType
#define SOAP_TYPE_ACService_ns6__CRLRefType (75)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CRLRefType(struct soap*, const char*, int, const ns6__CRLRefType *, const char*);
SOAP_FMAC3 ns6__CRLRefType * SOAP_FMAC4 soap_in_ns6__CRLRefType(struct soap*, const char*, ns6__CRLRefType *, const char*);
SOAP_FMAC1 ns6__CRLRefType * SOAP_FMAC2 soap_instantiate_ns6__CRLRefType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CRLRefType * soap_new_ns6__CRLRefType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CRLRefType(soap, n, NULL, NULL, NULL); }

inline ns6__CRLRefType * soap_new_req_ns6__CRLRefType(
	struct soap *soap,
	ns6__DigestAlgAndValueType *ns6__DigestAlgAndValue,
	ns6__CRLIdentifierType *ns6__CRLIdentifier)
{	ns6__CRLRefType *_p = soap_new_ns6__CRLRefType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CRLRefType::ns6__DigestAlgAndValue = ns6__DigestAlgAndValue;
		_p->ns6__CRLRefType::ns6__CRLIdentifier = ns6__CRLIdentifier;
	}
	return _p;
}

inline ns6__CRLRefType * soap_new_set_ns6__CRLRefType(
	struct soap *soap,
	ns6__DigestAlgAndValueType *ns6__DigestAlgAndValue,
	ns6__CRLIdentifierType *ns6__CRLIdentifier)
{	ns6__CRLRefType *_p = soap_new_ns6__CRLRefType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CRLRefType::ns6__DigestAlgAndValue = ns6__DigestAlgAndValue;
		_p->ns6__CRLRefType::ns6__CRLIdentifier = ns6__CRLIdentifier;
	}
	return _p;
}

#ifndef soap_write_ns6__CRLRefType
#define soap_write_ns6__CRLRefType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CRLRefType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CRLRefType * SOAP_FMAC4 soap_get_ns6__CRLRefType(struct soap*, ns6__CRLRefType *, const char*, const char*);

#ifndef soap_read_ns6__CRLRefType
#define soap_read_ns6__CRLRefType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CRLRefType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CRLRefsType
#define SOAP_TYPE_ACService_ns6__CRLRefsType (74)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CRLRefsType(struct soap*, const char*, int, const ns6__CRLRefsType *, const char*);
SOAP_FMAC3 ns6__CRLRefsType * SOAP_FMAC4 soap_in_ns6__CRLRefsType(struct soap*, const char*, ns6__CRLRefsType *, const char*);
SOAP_FMAC1 ns6__CRLRefsType * SOAP_FMAC2 soap_instantiate_ns6__CRLRefsType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CRLRefsType * soap_new_ns6__CRLRefsType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CRLRefsType(soap, n, NULL, NULL, NULL); }

inline ns6__CRLRefsType * soap_new_req_ns6__CRLRefsType(
	struct soap *soap,
	const std::vector<ns6__CRLRefType *> & ns6__CRLRef)
{	ns6__CRLRefsType *_p = soap_new_ns6__CRLRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CRLRefsType::ns6__CRLRef = ns6__CRLRef;
	}
	return _p;
}

inline ns6__CRLRefsType * soap_new_set_ns6__CRLRefsType(
	struct soap *soap,
	const std::vector<ns6__CRLRefType *> & ns6__CRLRef)
{	ns6__CRLRefsType *_p = soap_new_ns6__CRLRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CRLRefsType::ns6__CRLRef = ns6__CRLRef;
	}
	return _p;
}

#ifndef soap_write_ns6__CRLRefsType
#define soap_write_ns6__CRLRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CRLRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CRLRefsType * SOAP_FMAC4 soap_get_ns6__CRLRefsType(struct soap*, ns6__CRLRefsType *, const char*, const char*);

#ifndef soap_read_ns6__CRLRefsType
#define soap_read_ns6__CRLRefsType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CRLRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CompleteRevocationRefsType
#define SOAP_TYPE_ACService_ns6__CompleteRevocationRefsType (73)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CompleteRevocationRefsType(struct soap*, const char*, int, const ns6__CompleteRevocationRefsType *, const char*);
SOAP_FMAC3 ns6__CompleteRevocationRefsType * SOAP_FMAC4 soap_in_ns6__CompleteRevocationRefsType(struct soap*, const char*, ns6__CompleteRevocationRefsType *, const char*);
SOAP_FMAC1 ns6__CompleteRevocationRefsType * SOAP_FMAC2 soap_instantiate_ns6__CompleteRevocationRefsType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CompleteRevocationRefsType * soap_new_ns6__CompleteRevocationRefsType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CompleteRevocationRefsType(soap, n, NULL, NULL, NULL); }

inline ns6__CompleteRevocationRefsType * soap_new_req_ns6__CompleteRevocationRefsType(
	struct soap *soap,
	ns6__CRLRefsType *ns6__CRLRefs,
	ns6__OCSPRefsType *ns6__OCSPRefs)
{	ns6__CompleteRevocationRefsType *_p = soap_new_ns6__CompleteRevocationRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CompleteRevocationRefsType::ns6__CRLRefs = ns6__CRLRefs;
		_p->ns6__CompleteRevocationRefsType::ns6__OCSPRefs = ns6__OCSPRefs;
	}
	return _p;
}

inline ns6__CompleteRevocationRefsType * soap_new_set_ns6__CompleteRevocationRefsType(
	struct soap *soap,
	ns6__CRLRefsType *ns6__CRLRefs,
	ns6__OCSPRefsType *ns6__OCSPRefs)
{	ns6__CompleteRevocationRefsType *_p = soap_new_ns6__CompleteRevocationRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CompleteRevocationRefsType::ns6__CRLRefs = ns6__CRLRefs;
		_p->ns6__CompleteRevocationRefsType::ns6__OCSPRefs = ns6__OCSPRefs;
	}
	return _p;
}

#ifndef soap_write_ns6__CompleteRevocationRefsType
#define soap_write_ns6__CompleteRevocationRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CompleteRevocationRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CompleteRevocationRefsType * SOAP_FMAC4 soap_get_ns6__CompleteRevocationRefsType(struct soap*, ns6__CompleteRevocationRefsType *, const char*, const char*);

#ifndef soap_read_ns6__CompleteRevocationRefsType
#define soap_read_ns6__CompleteRevocationRefsType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CompleteRevocationRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CertRefsType
#define SOAP_TYPE_ACService_ns6__CertRefsType (72)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CertRefsType(struct soap*, const char*, int, const ns6__CertRefsType *, const char*);
SOAP_FMAC3 ns6__CertRefsType * SOAP_FMAC4 soap_in_ns6__CertRefsType(struct soap*, const char*, ns6__CertRefsType *, const char*);
SOAP_FMAC1 ns6__CertRefsType * SOAP_FMAC2 soap_instantiate_ns6__CertRefsType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CertRefsType * soap_new_ns6__CertRefsType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CertRefsType(soap, n, NULL, NULL, NULL); }

inline ns6__CertRefsType * soap_new_req_ns6__CertRefsType(
	struct soap *soap,
	const std::vector<ns6__CertType *> & ns6__Cert)
{	ns6__CertRefsType *_p = soap_new_ns6__CertRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CertRefsType::ns6__Cert = ns6__Cert;
	}
	return _p;
}

inline ns6__CertRefsType * soap_new_set_ns6__CertRefsType(
	struct soap *soap,
	const std::vector<ns6__CertType *> & ns6__Cert)
{	ns6__CertRefsType *_p = soap_new_ns6__CertRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CertRefsType::ns6__Cert = ns6__Cert;
	}
	return _p;
}

#ifndef soap_write_ns6__CertRefsType
#define soap_write_ns6__CertRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CertRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CertRefsType * SOAP_FMAC4 soap_get_ns6__CertRefsType(struct soap*, ns6__CertRefsType *, const char*, const char*);

#ifndef soap_read_ns6__CertRefsType
#define soap_read_ns6__CertRefsType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CertRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CompleteCertificateRefsType
#define SOAP_TYPE_ACService_ns6__CompleteCertificateRefsType (71)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CompleteCertificateRefsType(struct soap*, const char*, int, const ns6__CompleteCertificateRefsType *, const char*);
SOAP_FMAC3 ns6__CompleteCertificateRefsType * SOAP_FMAC4 soap_in_ns6__CompleteCertificateRefsType(struct soap*, const char*, ns6__CompleteCertificateRefsType *, const char*);
SOAP_FMAC1 ns6__CompleteCertificateRefsType * SOAP_FMAC2 soap_instantiate_ns6__CompleteCertificateRefsType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CompleteCertificateRefsType * soap_new_ns6__CompleteCertificateRefsType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CompleteCertificateRefsType(soap, n, NULL, NULL, NULL); }

inline ns6__CompleteCertificateRefsType * soap_new_req_ns6__CompleteCertificateRefsType(
	struct soap *soap,
	ns6__CertRefsType *ns6__CertRefs)
{	ns6__CompleteCertificateRefsType *_p = soap_new_ns6__CompleteCertificateRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CompleteCertificateRefsType::ns6__CertRefs = ns6__CertRefs;
	}
	return _p;
}

inline ns6__CompleteCertificateRefsType * soap_new_set_ns6__CompleteCertificateRefsType(
	struct soap *soap,
	ns6__CertRefsType *ns6__CertRefs)
{	ns6__CompleteCertificateRefsType *_p = soap_new_ns6__CompleteCertificateRefsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CompleteCertificateRefsType::ns6__CertRefs = ns6__CertRefs;
	}
	return _p;
}

#ifndef soap_write_ns6__CompleteCertificateRefsType
#define soap_write_ns6__CompleteCertificateRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CompleteCertificateRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CompleteCertificateRefsType * SOAP_FMAC4 soap_get_ns6__CompleteCertificateRefsType(struct soap*, ns6__CompleteCertificateRefsType *, const char*, const char*);

#ifndef soap_read_ns6__CompleteCertificateRefsType
#define soap_read_ns6__CompleteCertificateRefsType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CompleteCertificateRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__SignatureTimeStampType
#define SOAP_TYPE_ACService_ns6__SignatureTimeStampType (70)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__SignatureTimeStampType(struct soap*, const char*, int, const ns6__SignatureTimeStampType *, const char*);
SOAP_FMAC3 ns6__SignatureTimeStampType * SOAP_FMAC4 soap_in_ns6__SignatureTimeStampType(struct soap*, const char*, ns6__SignatureTimeStampType *, const char*);
SOAP_FMAC1 ns6__SignatureTimeStampType * SOAP_FMAC2 soap_instantiate_ns6__SignatureTimeStampType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__SignatureTimeStampType * soap_new_ns6__SignatureTimeStampType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__SignatureTimeStampType(soap, n, NULL, NULL, NULL); }

inline ns6__SignatureTimeStampType * soap_new_req_ns6__SignatureTimeStampType(
	struct soap *soap,
	ns5__CanonicalizationMethodType *ns5__CanonicalizationMethod,
	const xsd__base64Binary& ns6__EncapsulatedTimeStamp)
{	ns6__SignatureTimeStampType *_p = soap_new_ns6__SignatureTimeStampType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SignatureTimeStampType::ns5__CanonicalizationMethod = ns5__CanonicalizationMethod;
		_p->ns6__SignatureTimeStampType::ns6__EncapsulatedTimeStamp = ns6__EncapsulatedTimeStamp;
	}
	return _p;
}

inline ns6__SignatureTimeStampType * soap_new_set_ns6__SignatureTimeStampType(
	struct soap *soap,
	ns5__CanonicalizationMethodType *ns5__CanonicalizationMethod,
	const xsd__base64Binary& ns6__EncapsulatedTimeStamp)
{	ns6__SignatureTimeStampType *_p = soap_new_ns6__SignatureTimeStampType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SignatureTimeStampType::ns5__CanonicalizationMethod = ns5__CanonicalizationMethod;
		_p->ns6__SignatureTimeStampType::ns6__EncapsulatedTimeStamp = ns6__EncapsulatedTimeStamp;
	}
	return _p;
}

#ifndef soap_write_ns6__SignatureTimeStampType
#define soap_write_ns6__SignatureTimeStampType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:SignatureTimeStampType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SignatureTimeStampType * SOAP_FMAC4 soap_get_ns6__SignatureTimeStampType(struct soap*, ns6__SignatureTimeStampType *, const char*, const char*);

#ifndef soap_read_ns6__SignatureTimeStampType
#define soap_read_ns6__SignatureTimeStampType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__SignatureTimeStampType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CounterSignatureType
#define SOAP_TYPE_ACService_ns6__CounterSignatureType (69)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CounterSignatureType(struct soap*, const char*, int, const ns6__CounterSignatureType *, const char*);
SOAP_FMAC3 ns6__CounterSignatureType * SOAP_FMAC4 soap_in_ns6__CounterSignatureType(struct soap*, const char*, ns6__CounterSignatureType *, const char*);
SOAP_FMAC1 ns6__CounterSignatureType * SOAP_FMAC2 soap_instantiate_ns6__CounterSignatureType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CounterSignatureType * soap_new_ns6__CounterSignatureType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CounterSignatureType(soap, n, NULL, NULL, NULL); }

inline ns6__CounterSignatureType * soap_new_req_ns6__CounterSignatureType(
	struct soap *soap,
	ns5__SignatureType *ns5__Signature)
{	ns6__CounterSignatureType *_p = soap_new_ns6__CounterSignatureType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CounterSignatureType::ns5__Signature = ns5__Signature;
	}
	return _p;
}

inline ns6__CounterSignatureType * soap_new_set_ns6__CounterSignatureType(
	struct soap *soap,
	ns5__SignatureType *ns5__Signature)
{	ns6__CounterSignatureType *_p = soap_new_ns6__CounterSignatureType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CounterSignatureType::ns5__Signature = ns5__Signature;
	}
	return _p;
}

#ifndef soap_write_ns6__CounterSignatureType
#define soap_write_ns6__CounterSignatureType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CounterSignatureType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CounterSignatureType * SOAP_FMAC4 soap_get_ns6__CounterSignatureType(struct soap*, ns6__CounterSignatureType *, const char*, const char*);

#ifndef soap_read_ns6__CounterSignatureType
#define soap_read_ns6__CounterSignatureType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CounterSignatureType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__UnsignedSignaturePropertiesType
#define SOAP_TYPE_ACService_ns6__UnsignedSignaturePropertiesType (68)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__UnsignedSignaturePropertiesType(struct soap*, const char*, int, const ns6__UnsignedSignaturePropertiesType *, const char*);
SOAP_FMAC3 ns6__UnsignedSignaturePropertiesType * SOAP_FMAC4 soap_in_ns6__UnsignedSignaturePropertiesType(struct soap*, const char*, ns6__UnsignedSignaturePropertiesType *, const char*);
SOAP_FMAC1 ns6__UnsignedSignaturePropertiesType * SOAP_FMAC2 soap_instantiate_ns6__UnsignedSignaturePropertiesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__UnsignedSignaturePropertiesType * soap_new_ns6__UnsignedSignaturePropertiesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__UnsignedSignaturePropertiesType(soap, n, NULL, NULL, NULL); }

inline ns6__UnsignedSignaturePropertiesType * soap_new_req_ns6__UnsignedSignaturePropertiesType(
	struct soap *soap,
	ns6__SignatureTimeStampType *ns6__SignatureTimeStamp,
	ns6__CompleteCertificateRefsType *ns6__CompleteCertificateRefs,
	ns6__CompleteRevocationRefsType *ns6__CompleteRevocationRefs,
	ns6__SigAndRefsTimeStampType *ns6__SigAndRefsTimeStamp,
	ns6__CertificateValuesType *ns6__CertificateValues,
	ns6__RevocationValuesType *ns6__RevocationValues,
	ns6__ArchiveTimeStampType *ns6__ArchiveTimeStamp)
{	ns6__UnsignedSignaturePropertiesType *_p = soap_new_ns6__UnsignedSignaturePropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__UnsignedSignaturePropertiesType::ns6__SignatureTimeStamp = ns6__SignatureTimeStamp;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__CompleteCertificateRefs = ns6__CompleteCertificateRefs;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__CompleteRevocationRefs = ns6__CompleteRevocationRefs;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__SigAndRefsTimeStamp = ns6__SigAndRefsTimeStamp;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__CertificateValues = ns6__CertificateValues;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__RevocationValues = ns6__RevocationValues;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__ArchiveTimeStamp = ns6__ArchiveTimeStamp;
	}
	return _p;
}

inline ns6__UnsignedSignaturePropertiesType * soap_new_set_ns6__UnsignedSignaturePropertiesType(
	struct soap *soap,
	ns6__CounterSignatureType *ns6__CounterSignature,
	ns6__SignatureTimeStampType *ns6__SignatureTimeStamp,
	ns6__CompleteCertificateRefsType *ns6__CompleteCertificateRefs,
	ns6__CompleteRevocationRefsType *ns6__CompleteRevocationRefs,
	ns6__SigAndRefsTimeStampType *ns6__SigAndRefsTimeStamp,
	ns6__CertificateValuesType *ns6__CertificateValues,
	ns6__RevocationValuesType *ns6__RevocationValues,
	ns6__ArchiveTimeStampType *ns6__ArchiveTimeStamp)
{	ns6__UnsignedSignaturePropertiesType *_p = soap_new_ns6__UnsignedSignaturePropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__UnsignedSignaturePropertiesType::ns6__CounterSignature = ns6__CounterSignature;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__SignatureTimeStamp = ns6__SignatureTimeStamp;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__CompleteCertificateRefs = ns6__CompleteCertificateRefs;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__CompleteRevocationRefs = ns6__CompleteRevocationRefs;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__SigAndRefsTimeStamp = ns6__SigAndRefsTimeStamp;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__CertificateValues = ns6__CertificateValues;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__RevocationValues = ns6__RevocationValues;
		_p->ns6__UnsignedSignaturePropertiesType::ns6__ArchiveTimeStamp = ns6__ArchiveTimeStamp;
	}
	return _p;
}

#ifndef soap_write_ns6__UnsignedSignaturePropertiesType
#define soap_write_ns6__UnsignedSignaturePropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:UnsignedSignaturePropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__UnsignedSignaturePropertiesType * SOAP_FMAC4 soap_get_ns6__UnsignedSignaturePropertiesType(struct soap*, ns6__UnsignedSignaturePropertiesType *, const char*, const char*);

#ifndef soap_read_ns6__UnsignedSignaturePropertiesType
#define soap_read_ns6__UnsignedSignaturePropertiesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__UnsignedSignaturePropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__UnsignedPropertiesType
#define SOAP_TYPE_ACService_ns6__UnsignedPropertiesType (67)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__UnsignedPropertiesType(struct soap*, const char*, int, const ns6__UnsignedPropertiesType *, const char*);
SOAP_FMAC3 ns6__UnsignedPropertiesType * SOAP_FMAC4 soap_in_ns6__UnsignedPropertiesType(struct soap*, const char*, ns6__UnsignedPropertiesType *, const char*);
SOAP_FMAC1 ns6__UnsignedPropertiesType * SOAP_FMAC2 soap_instantiate_ns6__UnsignedPropertiesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__UnsignedPropertiesType * soap_new_ns6__UnsignedPropertiesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__UnsignedPropertiesType(soap, n, NULL, NULL, NULL); }

inline ns6__UnsignedPropertiesType * soap_new_req_ns6__UnsignedPropertiesType(
	struct soap *soap,
	ns6__UnsignedSignaturePropertiesType *ns6__UnsignedSignatureProperties)
{	ns6__UnsignedPropertiesType *_p = soap_new_ns6__UnsignedPropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__UnsignedPropertiesType::ns6__UnsignedSignatureProperties = ns6__UnsignedSignatureProperties;
	}
	return _p;
}

inline ns6__UnsignedPropertiesType * soap_new_set_ns6__UnsignedPropertiesType(
	struct soap *soap,
	ns6__UnsignedSignaturePropertiesType *ns6__UnsignedSignatureProperties)
{	ns6__UnsignedPropertiesType *_p = soap_new_ns6__UnsignedPropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__UnsignedPropertiesType::ns6__UnsignedSignatureProperties = ns6__UnsignedSignatureProperties;
	}
	return _p;
}

#ifndef soap_write_ns6__UnsignedPropertiesType
#define soap_write_ns6__UnsignedPropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:UnsignedPropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__UnsignedPropertiesType * SOAP_FMAC4 soap_get_ns6__UnsignedPropertiesType(struct soap*, ns6__UnsignedPropertiesType *, const char*, const char*);

#ifndef soap_read_ns6__UnsignedPropertiesType
#define soap_read_ns6__UnsignedPropertiesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__UnsignedPropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__ClaimedRoleType
#define SOAP_TYPE_ACService_ns6__ClaimedRoleType (66)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__ClaimedRoleType(struct soap*, const char*, int, const ns6__ClaimedRoleType *, const char*);
SOAP_FMAC3 ns6__ClaimedRoleType * SOAP_FMAC4 soap_in_ns6__ClaimedRoleType(struct soap*, const char*, ns6__ClaimedRoleType *, const char*);
SOAP_FMAC1 ns6__ClaimedRoleType * SOAP_FMAC2 soap_instantiate_ns6__ClaimedRoleType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__ClaimedRoleType * soap_new_ns6__ClaimedRoleType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__ClaimedRoleType(soap, n, NULL, NULL, NULL); }

inline ns6__ClaimedRoleType * soap_new_req_ns6__ClaimedRoleType(
	struct soap *soap,
	ns5__SignatureType *ns3__SignatureAttribute)
{	ns6__ClaimedRoleType *_p = soap_new_ns6__ClaimedRoleType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__ClaimedRoleType::ns3__SignatureAttribute = ns3__SignatureAttribute;
	}
	return _p;
}

inline ns6__ClaimedRoleType * soap_new_set_ns6__ClaimedRoleType(
	struct soap *soap,
	ns5__SignatureType *ns3__SignatureAttribute)
{	ns6__ClaimedRoleType *_p = soap_new_ns6__ClaimedRoleType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__ClaimedRoleType::ns3__SignatureAttribute = ns3__SignatureAttribute;
	}
	return _p;
}

#ifndef soap_write_ns6__ClaimedRoleType
#define soap_write_ns6__ClaimedRoleType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:ClaimedRoleType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__ClaimedRoleType * SOAP_FMAC4 soap_get_ns6__ClaimedRoleType(struct soap*, ns6__ClaimedRoleType *, const char*, const char*);

#ifndef soap_read_ns6__ClaimedRoleType
#define soap_read_ns6__ClaimedRoleType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__ClaimedRoleType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__ClaimedRolesListType
#define SOAP_TYPE_ACService_ns6__ClaimedRolesListType (65)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__ClaimedRolesListType(struct soap*, const char*, int, const ns6__ClaimedRolesListType *, const char*);
SOAP_FMAC3 ns6__ClaimedRolesListType * SOAP_FMAC4 soap_in_ns6__ClaimedRolesListType(struct soap*, const char*, ns6__ClaimedRolesListType *, const char*);
SOAP_FMAC1 ns6__ClaimedRolesListType * SOAP_FMAC2 soap_instantiate_ns6__ClaimedRolesListType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__ClaimedRolesListType * soap_new_ns6__ClaimedRolesListType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__ClaimedRolesListType(soap, n, NULL, NULL, NULL); }

inline ns6__ClaimedRolesListType * soap_new_req_ns6__ClaimedRolesListType(
	struct soap *soap,
	const std::vector<ns6__ClaimedRoleType *> & ns6__ClaimedRole)
{	ns6__ClaimedRolesListType *_p = soap_new_ns6__ClaimedRolesListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__ClaimedRolesListType::ns6__ClaimedRole = ns6__ClaimedRole;
	}
	return _p;
}

inline ns6__ClaimedRolesListType * soap_new_set_ns6__ClaimedRolesListType(
	struct soap *soap,
	const std::vector<ns6__ClaimedRoleType *> & ns6__ClaimedRole)
{	ns6__ClaimedRolesListType *_p = soap_new_ns6__ClaimedRolesListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__ClaimedRolesListType::ns6__ClaimedRole = ns6__ClaimedRole;
	}
	return _p;
}

#ifndef soap_write_ns6__ClaimedRolesListType
#define soap_write_ns6__ClaimedRolesListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:ClaimedRolesListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__ClaimedRolesListType * SOAP_FMAC4 soap_get_ns6__ClaimedRolesListType(struct soap*, ns6__ClaimedRolesListType *, const char*, const char*);

#ifndef soap_read_ns6__ClaimedRolesListType
#define soap_read_ns6__ClaimedRolesListType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__ClaimedRolesListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__SignerRoleType
#define SOAP_TYPE_ACService_ns6__SignerRoleType (64)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__SignerRoleType(struct soap*, const char*, int, const ns6__SignerRoleType *, const char*);
SOAP_FMAC3 ns6__SignerRoleType * SOAP_FMAC4 soap_in_ns6__SignerRoleType(struct soap*, const char*, ns6__SignerRoleType *, const char*);
SOAP_FMAC1 ns6__SignerRoleType * SOAP_FMAC2 soap_instantiate_ns6__SignerRoleType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__SignerRoleType * soap_new_ns6__SignerRoleType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__SignerRoleType(soap, n, NULL, NULL, NULL); }

inline ns6__SignerRoleType * soap_new_req_ns6__SignerRoleType(
	struct soap *soap,
	ns6__ClaimedRolesListType *ns6__ClaimedRoles)
{	ns6__SignerRoleType *_p = soap_new_ns6__SignerRoleType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SignerRoleType::ns6__ClaimedRoles = ns6__ClaimedRoles;
	}
	return _p;
}

inline ns6__SignerRoleType * soap_new_set_ns6__SignerRoleType(
	struct soap *soap,
	ns6__ClaimedRolesListType *ns6__ClaimedRoles)
{	ns6__SignerRoleType *_p = soap_new_ns6__SignerRoleType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SignerRoleType::ns6__ClaimedRoles = ns6__ClaimedRoles;
	}
	return _p;
}

#ifndef soap_write_ns6__SignerRoleType
#define soap_write_ns6__SignerRoleType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:SignerRoleType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SignerRoleType * SOAP_FMAC4 soap_get_ns6__SignerRoleType(struct soap*, ns6__SignerRoleType *, const char*, const char*);

#ifndef soap_read_ns6__SignerRoleType
#define soap_read_ns6__SignerRoleType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__SignerRoleType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__IssuerSerialType
#define SOAP_TYPE_ACService_ns6__IssuerSerialType (63)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__IssuerSerialType(struct soap*, const char*, int, const ns6__IssuerSerialType *, const char*);
SOAP_FMAC3 ns6__IssuerSerialType * SOAP_FMAC4 soap_in_ns6__IssuerSerialType(struct soap*, const char*, ns6__IssuerSerialType *, const char*);
SOAP_FMAC1 ns6__IssuerSerialType * SOAP_FMAC2 soap_instantiate_ns6__IssuerSerialType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__IssuerSerialType * soap_new_ns6__IssuerSerialType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__IssuerSerialType(soap, n, NULL, NULL, NULL); }

inline ns6__IssuerSerialType * soap_new_req_ns6__IssuerSerialType(
	struct soap *soap,
	const std::string& ns5__X509IssuerName,
	const std::string& ns5__X509SerialNumber)
{	ns6__IssuerSerialType *_p = soap_new_ns6__IssuerSerialType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__IssuerSerialType::ns5__X509IssuerName = ns5__X509IssuerName;
		_p->ns6__IssuerSerialType::ns5__X509SerialNumber = ns5__X509SerialNumber;
	}
	return _p;
}

inline ns6__IssuerSerialType * soap_new_set_ns6__IssuerSerialType(
	struct soap *soap,
	const std::string& ns5__X509IssuerName,
	const std::string& ns5__X509SerialNumber)
{	ns6__IssuerSerialType *_p = soap_new_ns6__IssuerSerialType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__IssuerSerialType::ns5__X509IssuerName = ns5__X509IssuerName;
		_p->ns6__IssuerSerialType::ns5__X509SerialNumber = ns5__X509SerialNumber;
	}
	return _p;
}

#ifndef soap_write_ns6__IssuerSerialType
#define soap_write_ns6__IssuerSerialType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:IssuerSerialType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__IssuerSerialType * SOAP_FMAC4 soap_get_ns6__IssuerSerialType(struct soap*, ns6__IssuerSerialType *, const char*, const char*);

#ifndef soap_read_ns6__IssuerSerialType
#define soap_read_ns6__IssuerSerialType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__IssuerSerialType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CertDigestType
#define SOAP_TYPE_ACService_ns6__CertDigestType (62)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CertDigestType(struct soap*, const char*, int, const ns6__CertDigestType *, const char*);
SOAP_FMAC3 ns6__CertDigestType * SOAP_FMAC4 soap_in_ns6__CertDigestType(struct soap*, const char*, ns6__CertDigestType *, const char*);
SOAP_FMAC1 ns6__CertDigestType * SOAP_FMAC2 soap_instantiate_ns6__CertDigestType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CertDigestType * soap_new_ns6__CertDigestType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CertDigestType(soap, n, NULL, NULL, NULL); }

inline ns6__CertDigestType * soap_new_req_ns6__CertDigestType(
	struct soap *soap,
	ns5__DigestMethodType *ns5__DigestMethod,
	ns5__DigestValueType *ns5__DigestValue)
{	ns6__CertDigestType *_p = soap_new_ns6__CertDigestType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CertDigestType::ns5__DigestMethod = ns5__DigestMethod;
		_p->ns6__CertDigestType::ns5__DigestValue = ns5__DigestValue;
	}
	return _p;
}

inline ns6__CertDigestType * soap_new_set_ns6__CertDigestType(
	struct soap *soap,
	ns5__DigestMethodType *ns5__DigestMethod,
	ns5__DigestValueType *ns5__DigestValue)
{	ns6__CertDigestType *_p = soap_new_ns6__CertDigestType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CertDigestType::ns5__DigestMethod = ns5__DigestMethod;
		_p->ns6__CertDigestType::ns5__DigestValue = ns5__DigestValue;
	}
	return _p;
}

#ifndef soap_write_ns6__CertDigestType
#define soap_write_ns6__CertDigestType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CertDigestType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CertDigestType * SOAP_FMAC4 soap_get_ns6__CertDigestType(struct soap*, ns6__CertDigestType *, const char*, const char*);

#ifndef soap_read_ns6__CertDigestType
#define soap_read_ns6__CertDigestType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CertDigestType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__CertType
#define SOAP_TYPE_ACService_ns6__CertType (61)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__CertType(struct soap*, const char*, int, const ns6__CertType *, const char*);
SOAP_FMAC3 ns6__CertType * SOAP_FMAC4 soap_in_ns6__CertType(struct soap*, const char*, ns6__CertType *, const char*);
SOAP_FMAC1 ns6__CertType * SOAP_FMAC2 soap_instantiate_ns6__CertType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__CertType * soap_new_ns6__CertType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__CertType(soap, n, NULL, NULL, NULL); }

inline ns6__CertType * soap_new_req_ns6__CertType(
	struct soap *soap,
	ns6__CertDigestType *ns6__CertDigest,
	ns6__IssuerSerialType *ns6__IssuerSerial)
{	ns6__CertType *_p = soap_new_ns6__CertType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CertType::ns6__CertDigest = ns6__CertDigest;
		_p->ns6__CertType::ns6__IssuerSerial = ns6__IssuerSerial;
	}
	return _p;
}

inline ns6__CertType * soap_new_set_ns6__CertType(
	struct soap *soap,
	ns6__CertDigestType *ns6__CertDigest,
	ns6__IssuerSerialType *ns6__IssuerSerial)
{	ns6__CertType *_p = soap_new_ns6__CertType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__CertType::ns6__CertDigest = ns6__CertDigest;
		_p->ns6__CertType::ns6__IssuerSerial = ns6__IssuerSerial;
	}
	return _p;
}

#ifndef soap_write_ns6__CertType
#define soap_write_ns6__CertType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:CertType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CertType * SOAP_FMAC4 soap_get_ns6__CertType(struct soap*, ns6__CertType *, const char*, const char*);

#ifndef soap_read_ns6__CertType
#define soap_read_ns6__CertType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__CertType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__SigningCertificateType
#define SOAP_TYPE_ACService_ns6__SigningCertificateType (60)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__SigningCertificateType(struct soap*, const char*, int, const ns6__SigningCertificateType *, const char*);
SOAP_FMAC3 ns6__SigningCertificateType * SOAP_FMAC4 soap_in_ns6__SigningCertificateType(struct soap*, const char*, ns6__SigningCertificateType *, const char*);
SOAP_FMAC1 ns6__SigningCertificateType * SOAP_FMAC2 soap_instantiate_ns6__SigningCertificateType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__SigningCertificateType * soap_new_ns6__SigningCertificateType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__SigningCertificateType(soap, n, NULL, NULL, NULL); }

inline ns6__SigningCertificateType * soap_new_req_ns6__SigningCertificateType(
	struct soap *soap,
	ns6__CertType *ns6__Cert)
{	ns6__SigningCertificateType *_p = soap_new_ns6__SigningCertificateType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SigningCertificateType::ns6__Cert = ns6__Cert;
	}
	return _p;
}

inline ns6__SigningCertificateType * soap_new_set_ns6__SigningCertificateType(
	struct soap *soap,
	ns6__CertType *ns6__Cert)
{	ns6__SigningCertificateType *_p = soap_new_ns6__SigningCertificateType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SigningCertificateType::ns6__Cert = ns6__Cert;
	}
	return _p;
}

#ifndef soap_write_ns6__SigningCertificateType
#define soap_write_ns6__SigningCertificateType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:SigningCertificateType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SigningCertificateType * SOAP_FMAC4 soap_get_ns6__SigningCertificateType(struct soap*, ns6__SigningCertificateType *, const char*, const char*);

#ifndef soap_read_ns6__SigningCertificateType
#define soap_read_ns6__SigningCertificateType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__SigningCertificateType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__SignedSignaturePropertiesType
#define SOAP_TYPE_ACService_ns6__SignedSignaturePropertiesType (59)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__SignedSignaturePropertiesType(struct soap*, const char*, int, const ns6__SignedSignaturePropertiesType *, const char*);
SOAP_FMAC3 ns6__SignedSignaturePropertiesType * SOAP_FMAC4 soap_in_ns6__SignedSignaturePropertiesType(struct soap*, const char*, ns6__SignedSignaturePropertiesType *, const char*);
SOAP_FMAC1 ns6__SignedSignaturePropertiesType * SOAP_FMAC2 soap_instantiate_ns6__SignedSignaturePropertiesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__SignedSignaturePropertiesType * soap_new_ns6__SignedSignaturePropertiesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__SignedSignaturePropertiesType(soap, n, NULL, NULL, NULL); }

inline ns6__SignedSignaturePropertiesType * soap_new_req_ns6__SignedSignaturePropertiesType(
	struct soap *soap,
	time_t ns6__SigningTime,
	ns6__SigningCertificateType *ns6__SigningCertificate)
{	ns6__SignedSignaturePropertiesType *_p = soap_new_ns6__SignedSignaturePropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SignedSignaturePropertiesType::ns6__SigningTime = ns6__SigningTime;
		_p->ns6__SignedSignaturePropertiesType::ns6__SigningCertificate = ns6__SigningCertificate;
	}
	return _p;
}

inline ns6__SignedSignaturePropertiesType * soap_new_set_ns6__SignedSignaturePropertiesType(
	struct soap *soap,
	time_t ns6__SigningTime,
	ns6__SigningCertificateType *ns6__SigningCertificate,
	ns6__SignerRoleType *ns6__SignerRole)
{	ns6__SignedSignaturePropertiesType *_p = soap_new_ns6__SignedSignaturePropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SignedSignaturePropertiesType::ns6__SigningTime = ns6__SigningTime;
		_p->ns6__SignedSignaturePropertiesType::ns6__SigningCertificate = ns6__SigningCertificate;
		_p->ns6__SignedSignaturePropertiesType::ns6__SignerRole = ns6__SignerRole;
	}
	return _p;
}

#ifndef soap_write_ns6__SignedSignaturePropertiesType
#define soap_write_ns6__SignedSignaturePropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:SignedSignaturePropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SignedSignaturePropertiesType * SOAP_FMAC4 soap_get_ns6__SignedSignaturePropertiesType(struct soap*, ns6__SignedSignaturePropertiesType *, const char*, const char*);

#ifndef soap_read_ns6__SignedSignaturePropertiesType
#define soap_read_ns6__SignedSignaturePropertiesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__SignedSignaturePropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__SignedPropertiesType
#define SOAP_TYPE_ACService_ns6__SignedPropertiesType (58)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__SignedPropertiesType(struct soap*, const char*, int, const ns6__SignedPropertiesType *, const char*);
SOAP_FMAC3 ns6__SignedPropertiesType * SOAP_FMAC4 soap_in_ns6__SignedPropertiesType(struct soap*, const char*, ns6__SignedPropertiesType *, const char*);
SOAP_FMAC1 ns6__SignedPropertiesType * SOAP_FMAC2 soap_instantiate_ns6__SignedPropertiesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__SignedPropertiesType * soap_new_ns6__SignedPropertiesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__SignedPropertiesType(soap, n, NULL, NULL, NULL); }

inline ns6__SignedPropertiesType * soap_new_req_ns6__SignedPropertiesType(
	struct soap *soap,
	ns6__SignedSignaturePropertiesType *ns6__SignedSignatureProperties,
	const std::string& Id)
{	ns6__SignedPropertiesType *_p = soap_new_ns6__SignedPropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SignedPropertiesType::ns6__SignedSignatureProperties = ns6__SignedSignatureProperties;
		_p->ns6__SignedPropertiesType::Id = Id;
	}
	return _p;
}

inline ns6__SignedPropertiesType * soap_new_set_ns6__SignedPropertiesType(
	struct soap *soap,
	ns6__SignedSignaturePropertiesType *ns6__SignedSignatureProperties,
	const std::string& Id)
{	ns6__SignedPropertiesType *_p = soap_new_ns6__SignedPropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__SignedPropertiesType::ns6__SignedSignatureProperties = ns6__SignedSignatureProperties;
		_p->ns6__SignedPropertiesType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns6__SignedPropertiesType
#define soap_write_ns6__SignedPropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:SignedPropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SignedPropertiesType * SOAP_FMAC4 soap_get_ns6__SignedPropertiesType(struct soap*, ns6__SignedPropertiesType *, const char*, const char*);

#ifndef soap_read_ns6__SignedPropertiesType
#define soap_read_ns6__SignedPropertiesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__SignedPropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns6__QualifyingPropertiesType
#define SOAP_TYPE_ACService_ns6__QualifyingPropertiesType (57)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__QualifyingPropertiesType(struct soap*, const char*, int, const ns6__QualifyingPropertiesType *, const char*);
SOAP_FMAC3 ns6__QualifyingPropertiesType * SOAP_FMAC4 soap_in_ns6__QualifyingPropertiesType(struct soap*, const char*, ns6__QualifyingPropertiesType *, const char*);
SOAP_FMAC1 ns6__QualifyingPropertiesType * SOAP_FMAC2 soap_instantiate_ns6__QualifyingPropertiesType(struct soap*, int, const char*, const char*, size_t*);

inline ns6__QualifyingPropertiesType * soap_new_ns6__QualifyingPropertiesType(struct soap *soap, int n = -1) { return soap_instantiate_ns6__QualifyingPropertiesType(soap, n, NULL, NULL, NULL); }

inline ns6__QualifyingPropertiesType * soap_new_req_ns6__QualifyingPropertiesType(
	struct soap *soap,
	ns6__SignedPropertiesType *ns6__SignedProperties,
	const std::string& Target)
{	ns6__QualifyingPropertiesType *_p = soap_new_ns6__QualifyingPropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__QualifyingPropertiesType::ns6__SignedProperties = ns6__SignedProperties;
		_p->ns6__QualifyingPropertiesType::Target = Target;
	}
	return _p;
}

inline ns6__QualifyingPropertiesType * soap_new_set_ns6__QualifyingPropertiesType(
	struct soap *soap,
	ns6__SignedPropertiesType *ns6__SignedProperties,
	ns6__UnsignedPropertiesType *ns6__UnsignedProperties,
	const std::string& Target)
{	ns6__QualifyingPropertiesType *_p = soap_new_ns6__QualifyingPropertiesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns6__QualifyingPropertiesType::ns6__SignedProperties = ns6__SignedProperties;
		_p->ns6__QualifyingPropertiesType::ns6__UnsignedProperties = ns6__UnsignedProperties;
		_p->ns6__QualifyingPropertiesType::Target = Target;
	}
	return _p;
}

#ifndef soap_write_ns6__QualifyingPropertiesType
#define soap_write_ns6__QualifyingPropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns6:QualifyingPropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__QualifyingPropertiesType * SOAP_FMAC4 soap_get_ns6__QualifyingPropertiesType(struct soap*, ns6__QualifyingPropertiesType *, const char*, const char*);

#ifndef soap_read_ns6__QualifyingPropertiesType
#define soap_read_ns6__QualifyingPropertiesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns6__QualifyingPropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__ResponseCodeStatusType
#define SOAP_TYPE_ACService_ns3__ResponseCodeStatusType (56)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ResponseCodeStatusType(struct soap*, const char*, int, const ns3__ResponseCodeStatusType *, const char*);
SOAP_FMAC3 ns3__ResponseCodeStatusType * SOAP_FMAC4 soap_in_ns3__ResponseCodeStatusType(struct soap*, const char*, ns3__ResponseCodeStatusType *, const char*);
SOAP_FMAC1 ns3__ResponseCodeStatusType * SOAP_FMAC2 soap_instantiate_ns3__ResponseCodeStatusType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__ResponseCodeStatusType * soap_new_ns3__ResponseCodeStatusType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__ResponseCodeStatusType(soap, n, NULL, NULL, NULL); }

inline ns3__ResponseCodeStatusType * soap_new_req_ns3__ResponseCodeStatusType(
	struct soap *soap,
	const std::string& Code)
{	ns3__ResponseCodeStatusType *_p = soap_new_ns3__ResponseCodeStatusType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__ResponseCodeStatusType::Code = Code;
	}
	return _p;
}

inline ns3__ResponseCodeStatusType * soap_new_set_ns3__ResponseCodeStatusType(
	struct soap *soap,
	const std::string& Code,
	std::string *Message)
{	ns3__ResponseCodeStatusType *_p = soap_new_ns3__ResponseCodeStatusType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__ResponseCodeStatusType::Code = Code;
		_p->ns3__ResponseCodeStatusType::Message = Message;
	}
	return _p;
}

#ifndef soap_write_ns3__ResponseCodeStatusType
#define soap_write_ns3__ResponseCodeStatusType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:ResponseCodeStatusType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ResponseCodeStatusType * SOAP_FMAC4 soap_get_ns3__ResponseCodeStatusType(struct soap*, ns3__ResponseCodeStatusType *, const char*, const char*);

#ifndef soap_read_ns3__ResponseCodeStatusType
#define soap_read_ns3__ResponseCodeStatusType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__ResponseCodeStatusType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__SubAttributeType
#define SOAP_TYPE_ACService_ns3__SubAttributeType (55)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__SubAttributeType(struct soap*, const char*, int, const ns3__SubAttributeType *, const char*);
SOAP_FMAC3 ns3__SubAttributeType * SOAP_FMAC4 soap_in_ns3__SubAttributeType(struct soap*, const char*, ns3__SubAttributeType *, const char*);
SOAP_FMAC1 ns3__SubAttributeType * SOAP_FMAC2 soap_instantiate_ns3__SubAttributeType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__SubAttributeType * soap_new_ns3__SubAttributeType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__SubAttributeType(soap, n, NULL, NULL, NULL); }

inline ns3__SubAttributeType * soap_new_req_ns3__SubAttributeType(
	struct soap *soap,
	const std::string& AttributeID)
{	ns3__SubAttributeType *_p = soap_new_ns3__SubAttributeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__SubAttributeType::AttributeID = AttributeID;
	}
	return _p;
}

inline ns3__SubAttributeType * soap_new_set_ns3__SubAttributeType(
	struct soap *soap,
	const std::string& AttributeID,
	std::string *Description,
	std::string *Value,
	ns3__LegalActListType *LegalActList)
{	ns3__SubAttributeType *_p = soap_new_ns3__SubAttributeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__SubAttributeType::AttributeID = AttributeID;
		_p->ns3__SubAttributeType::Description = Description;
		_p->ns3__SubAttributeType::Value = Value;
		_p->ns3__SubAttributeType::LegalActList = LegalActList;
	}
	return _p;
}

#ifndef soap_write_ns3__SubAttributeType
#define soap_write_ns3__SubAttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:SubAttributeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__SubAttributeType * SOAP_FMAC4 soap_get_ns3__SubAttributeType(struct soap*, ns3__SubAttributeType *, const char*, const char*);

#ifndef soap_read_ns3__SubAttributeType
#define soap_read_ns3__SubAttributeType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__SubAttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__SubAttributeListType
#define SOAP_TYPE_ACService_ns3__SubAttributeListType (54)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__SubAttributeListType(struct soap*, const char*, int, const ns3__SubAttributeListType *, const char*);
SOAP_FMAC3 ns3__SubAttributeListType * SOAP_FMAC4 soap_in_ns3__SubAttributeListType(struct soap*, const char*, ns3__SubAttributeListType *, const char*);
SOAP_FMAC1 ns3__SubAttributeListType * SOAP_FMAC2 soap_instantiate_ns3__SubAttributeListType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__SubAttributeListType * soap_new_ns3__SubAttributeListType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__SubAttributeListType(soap, n, NULL, NULL, NULL); }

inline ns3__SubAttributeListType * soap_new_req_ns3__SubAttributeListType(
	struct soap *soap,
	const std::vector<ns3__SubAttributeType *> & SubAttribute)
{	ns3__SubAttributeListType *_p = soap_new_ns3__SubAttributeListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__SubAttributeListType::SubAttribute = SubAttribute;
	}
	return _p;
}

inline ns3__SubAttributeListType * soap_new_set_ns3__SubAttributeListType(
	struct soap *soap,
	const std::vector<ns3__SubAttributeType *> & SubAttribute)
{	ns3__SubAttributeListType *_p = soap_new_ns3__SubAttributeListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__SubAttributeListType::SubAttribute = SubAttribute;
	}
	return _p;
}

#ifndef soap_write_ns3__SubAttributeListType
#define soap_write_ns3__SubAttributeListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:SubAttributeListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__SubAttributeListType * SOAP_FMAC4 soap_get_ns3__SubAttributeListType(struct soap*, ns3__SubAttributeListType *, const char*, const char*);

#ifndef soap_read_ns3__SubAttributeListType
#define soap_read_ns3__SubAttributeListType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__SubAttributeListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__LegalActListType
#define SOAP_TYPE_ACService_ns3__LegalActListType (53)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__LegalActListType(struct soap*, const char*, int, const ns3__LegalActListType *, const char*);
SOAP_FMAC3 ns3__LegalActListType * SOAP_FMAC4 soap_in_ns3__LegalActListType(struct soap*, const char*, ns3__LegalActListType *, const char*);
SOAP_FMAC1 ns3__LegalActListType * SOAP_FMAC2 soap_instantiate_ns3__LegalActListType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__LegalActListType * soap_new_ns3__LegalActListType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__LegalActListType(soap, n, NULL, NULL, NULL); }

inline ns3__LegalActListType * soap_new_req_ns3__LegalActListType(
	struct soap *soap,
	const std::vector<std::string> & LegalAct)
{	ns3__LegalActListType *_p = soap_new_ns3__LegalActListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__LegalActListType::LegalAct = LegalAct;
	}
	return _p;
}

inline ns3__LegalActListType * soap_new_set_ns3__LegalActListType(
	struct soap *soap,
	const std::vector<std::string> & LegalAct)
{	ns3__LegalActListType *_p = soap_new_ns3__LegalActListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__LegalActListType::LegalAct = LegalAct;
	}
	return _p;
}

#ifndef soap_write_ns3__LegalActListType
#define soap_write_ns3__LegalActListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:LegalActListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__LegalActListType * SOAP_FMAC4 soap_get_ns3__LegalActListType(struct soap*, ns3__LegalActListType *, const char*, const char*);

#ifndef soap_read_ns3__LegalActListType
#define soap_read_ns3__LegalActListType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__LegalActListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__MainAttributeType
#define SOAP_TYPE_ACService_ns3__MainAttributeType (52)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__MainAttributeType(struct soap*, const char*, int, const ns3__MainAttributeType *, const char*);
SOAP_FMAC3 ns3__MainAttributeType * SOAP_FMAC4 soap_in_ns3__MainAttributeType(struct soap*, const char*, ns3__MainAttributeType *, const char*);
SOAP_FMAC1 ns3__MainAttributeType * SOAP_FMAC2 soap_instantiate_ns3__MainAttributeType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__MainAttributeType * soap_new_ns3__MainAttributeType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__MainAttributeType(soap, n, NULL, NULL, NULL); }

inline ns3__MainAttributeType * soap_new_req_ns3__MainAttributeType(
	struct soap *soap,
	const std::string& AttributeID)
{	ns3__MainAttributeType *_p = soap_new_ns3__MainAttributeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__MainAttributeType::AttributeID = AttributeID;
	}
	return _p;
}

inline ns3__MainAttributeType * soap_new_set_ns3__MainAttributeType(
	struct soap *soap,
	const std::string& AttributeID,
	std::string *Description,
	ns3__LegalActListType *LegalActList,
	ns3__SubAttributeListType *SubAttributeList)
{	ns3__MainAttributeType *_p = soap_new_ns3__MainAttributeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__MainAttributeType::AttributeID = AttributeID;
		_p->ns3__MainAttributeType::Description = Description;
		_p->ns3__MainAttributeType::LegalActList = LegalActList;
		_p->ns3__MainAttributeType::SubAttributeList = SubAttributeList;
	}
	return _p;
}

#ifndef soap_write_ns3__MainAttributeType
#define soap_write_ns3__MainAttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:MainAttributeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__MainAttributeType * SOAP_FMAC4 soap_get_ns3__MainAttributeType(struct soap*, ns3__MainAttributeType *, const char*, const char*);

#ifndef soap_read_ns3__MainAttributeType
#define soap_read_ns3__MainAttributeType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__MainAttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__ExtraIDType
#define SOAP_TYPE_ACService_ns3__ExtraIDType (51)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ExtraIDType(struct soap*, const char*, int, const ns3__ExtraIDType *, const char*);
SOAP_FMAC3 ns3__ExtraIDType * SOAP_FMAC4 soap_in_ns3__ExtraIDType(struct soap*, const char*, ns3__ExtraIDType *, const char*);
SOAP_FMAC1 ns3__ExtraIDType * SOAP_FMAC2 soap_instantiate_ns3__ExtraIDType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__ExtraIDType * soap_new_ns3__ExtraIDType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__ExtraIDType(soap, n, NULL, NULL, NULL); }

inline ns3__ExtraIDType * soap_new_req_ns3__ExtraIDType(
	struct soap *soap,
	const std::string& Name,
	const std::string& Value)
{	ns3__ExtraIDType *_p = soap_new_ns3__ExtraIDType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__ExtraIDType::Name = Name;
		_p->ns3__ExtraIDType::Value = Value;
	}
	return _p;
}

inline ns3__ExtraIDType * soap_new_set_ns3__ExtraIDType(
	struct soap *soap,
	const std::string& Name,
	const std::string& Value)
{	ns3__ExtraIDType *_p = soap_new_ns3__ExtraIDType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__ExtraIDType::Name = Name;
		_p->ns3__ExtraIDType::Value = Value;
	}
	return _p;
}

#ifndef soap_write_ns3__ExtraIDType
#define soap_write_ns3__ExtraIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:ExtraIDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ExtraIDType * SOAP_FMAC4 soap_get_ns3__ExtraIDType(struct soap*, ns3__ExtraIDType *, const char*, const char*);

#ifndef soap_read_ns3__ExtraIDType
#define soap_read_ns3__ExtraIDType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__ExtraIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__ExtraIDListType
#define SOAP_TYPE_ACService_ns3__ExtraIDListType (50)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ExtraIDListType(struct soap*, const char*, int, const ns3__ExtraIDListType *, const char*);
SOAP_FMAC3 ns3__ExtraIDListType * SOAP_FMAC4 soap_in_ns3__ExtraIDListType(struct soap*, const char*, ns3__ExtraIDListType *, const char*);
SOAP_FMAC1 ns3__ExtraIDListType * SOAP_FMAC2 soap_instantiate_ns3__ExtraIDListType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__ExtraIDListType * soap_new_ns3__ExtraIDListType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__ExtraIDListType(soap, n, NULL, NULL, NULL); }

inline ns3__ExtraIDListType * soap_new_req_ns3__ExtraIDListType(
	struct soap *soap,
	const std::vector<ns3__ExtraIDType *> & ExtraID)
{	ns3__ExtraIDListType *_p = soap_new_ns3__ExtraIDListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__ExtraIDListType::ExtraID = ExtraID;
	}
	return _p;
}

inline ns3__ExtraIDListType * soap_new_set_ns3__ExtraIDListType(
	struct soap *soap,
	const std::vector<ns3__ExtraIDType *> & ExtraID)
{	ns3__ExtraIDListType *_p = soap_new_ns3__ExtraIDListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__ExtraIDListType::ExtraID = ExtraID;
	}
	return _p;
}

#ifndef soap_write_ns3__ExtraIDListType
#define soap_write_ns3__ExtraIDListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:ExtraIDListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ExtraIDListType * SOAP_FMAC4 soap_get_ns3__ExtraIDListType(struct soap*, ns3__ExtraIDListType *, const char*, const char*);

#ifndef soap_read_ns3__ExtraIDListType
#define soap_read_ns3__ExtraIDListType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__ExtraIDListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__PersonalDataType
#define SOAP_TYPE_ACService_ns3__PersonalDataType (49)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__PersonalDataType(struct soap*, const char*, int, const ns3__PersonalDataType *, const char*);
SOAP_FMAC3 ns3__PersonalDataType * SOAP_FMAC4 soap_in_ns3__PersonalDataType(struct soap*, const char*, ns3__PersonalDataType *, const char*);
SOAP_FMAC1 ns3__PersonalDataType * SOAP_FMAC2 soap_instantiate_ns3__PersonalDataType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__PersonalDataType * soap_new_ns3__PersonalDataType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__PersonalDataType(soap, n, NULL, NULL, NULL); }

inline ns3__PersonalDataType * soap_new_req_ns3__PersonalDataType(
	struct soap *soap,
	const std::string& Name,
	const std::string& NIC)
{	ns3__PersonalDataType *_p = soap_new_ns3__PersonalDataType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__PersonalDataType::Name = Name;
		_p->ns3__PersonalDataType::NIC = NIC;
	}
	return _p;
}

inline ns3__PersonalDataType * soap_new_set_ns3__PersonalDataType(
	struct soap *soap,
	const std::string& Name,
	const std::string& NIC,
	ns3__ExtraIDListType *ExtraIDList)
{	ns3__PersonalDataType *_p = soap_new_ns3__PersonalDataType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__PersonalDataType::Name = Name;
		_p->ns3__PersonalDataType::NIC = NIC;
		_p->ns3__PersonalDataType::ExtraIDList = ExtraIDList;
	}
	return _p;
}

#ifndef soap_write_ns3__PersonalDataType
#define soap_write_ns3__PersonalDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:PersonalDataType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__PersonalDataType * SOAP_FMAC4 soap_get_ns3__PersonalDataType(struct soap*, ns3__PersonalDataType *, const char*, const char*);

#ifndef soap_read_ns3__PersonalDataType
#define soap_read_ns3__PersonalDataType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__PersonalDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__AttributeSupplierType
#define SOAP_TYPE_ACService_ns3__AttributeSupplierType (48)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__AttributeSupplierType(struct soap*, const char*, int, const ns3__AttributeSupplierType *, const char*);
SOAP_FMAC3 ns3__AttributeSupplierType * SOAP_FMAC4 soap_in_ns3__AttributeSupplierType(struct soap*, const char*, ns3__AttributeSupplierType *, const char*);
SOAP_FMAC1 ns3__AttributeSupplierType * SOAP_FMAC2 soap_instantiate_ns3__AttributeSupplierType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__AttributeSupplierType * soap_new_ns3__AttributeSupplierType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__AttributeSupplierType(soap, n, NULL, NULL, NULL); }

inline ns3__AttributeSupplierType * soap_new_req_ns3__AttributeSupplierType(
	struct soap *soap,
	const std::string& Id,
	const std::string& Name)
{	ns3__AttributeSupplierType *_p = soap_new_ns3__AttributeSupplierType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__AttributeSupplierType::Id = Id;
		_p->ns3__AttributeSupplierType::Name = Name;
	}
	return _p;
}

inline ns3__AttributeSupplierType * soap_new_set_ns3__AttributeSupplierType(
	struct soap *soap,
	const std::string& Id,
	const std::string& Name)
{	ns3__AttributeSupplierType *_p = soap_new_ns3__AttributeSupplierType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__AttributeSupplierType::Id = Id;
		_p->ns3__AttributeSupplierType::Name = Name;
	}
	return _p;
}

#ifndef soap_write_ns3__AttributeSupplierType
#define soap_write_ns3__AttributeSupplierType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:AttributeSupplierType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__AttributeSupplierType * SOAP_FMAC4 soap_get_ns3__AttributeSupplierType(struct soap*, ns3__AttributeSupplierType *, const char*, const char*);

#ifndef soap_read_ns3__AttributeSupplierType
#define soap_read_ns3__AttributeSupplierType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__AttributeSupplierType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns3__AttributeType
#define SOAP_TYPE_ACService_ns3__AttributeType (47)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__AttributeType(struct soap*, const char*, int, const ns3__AttributeType *, const char*);
SOAP_FMAC3 ns3__AttributeType * SOAP_FMAC4 soap_in_ns3__AttributeType(struct soap*, const char*, ns3__AttributeType *, const char*);
SOAP_FMAC1 ns3__AttributeType * SOAP_FMAC2 soap_instantiate_ns3__AttributeType(struct soap*, int, const char*, const char*, size_t*);

inline ns3__AttributeType * soap_new_ns3__AttributeType(struct soap *soap, int n = -1) { return soap_instantiate_ns3__AttributeType(soap, n, NULL, NULL, NULL); }

inline ns3__AttributeType * soap_new_req_ns3__AttributeType(
	struct soap *soap,
	ns3__AttributeSupplierType *AttributeSupplier,
	const std::string& Date,
	const std::string& Validity,
	ns3__PersonalDataType *PersonalData,
	ns3__MainAttributeType *MainAttribute)
{	ns3__AttributeType *_p = soap_new_ns3__AttributeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__AttributeType::AttributeSupplier = AttributeSupplier;
		_p->ns3__AttributeType::Date = Date;
		_p->ns3__AttributeType::Validity = Validity;
		_p->ns3__AttributeType::PersonalData = PersonalData;
		_p->ns3__AttributeType::MainAttribute = MainAttribute;
	}
	return _p;
}

inline ns3__AttributeType * soap_new_set_ns3__AttributeType(
	struct soap *soap,
	ns3__AttributeSupplierType *AttributeSupplier,
	const std::string& Date,
	const std::string& Validity,
	ns3__PersonalDataType *PersonalData,
	ns3__MainAttributeType *MainAttribute)
{	ns3__AttributeType *_p = soap_new_ns3__AttributeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns3__AttributeType::AttributeSupplier = AttributeSupplier;
		_p->ns3__AttributeType::Date = Date;
		_p->ns3__AttributeType::Validity = Validity;
		_p->ns3__AttributeType::PersonalData = PersonalData;
		_p->ns3__AttributeType::MainAttribute = MainAttribute;
	}
	return _p;
}

#ifndef soap_write_ns3__AttributeType
#define soap_write_ns3__AttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:AttributeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__AttributeType * SOAP_FMAC4 soap_get_ns3__AttributeType(struct soap*, ns3__AttributeType *, const char*, const char*);

#ifndef soap_read_ns3__AttributeType
#define soap_read_ns3__AttributeType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns3__AttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__SignatureValueType
#define SOAP_TYPE_ACService_ns5__SignatureValueType (46)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__SignatureValueType(struct soap*, const char*, int, const ns5__SignatureValueType *, const char*);
SOAP_FMAC3 ns5__SignatureValueType * SOAP_FMAC4 soap_in_ns5__SignatureValueType(struct soap*, const char*, ns5__SignatureValueType *, const char*);
SOAP_FMAC1 ns5__SignatureValueType * SOAP_FMAC2 soap_instantiate_ns5__SignatureValueType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__SignatureValueType * soap_new_ns5__SignatureValueType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__SignatureValueType(soap, n, NULL, NULL, NULL); }

inline ns5__SignatureValueType * soap_new_req_ns5__SignatureValueType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns5__SignatureValueType *_p = soap_new_ns5__SignatureValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__SignatureValueType::__item = __item;
		_p->ns5__SignatureValueType::Id = Id;
	}
	return _p;
}

inline ns5__SignatureValueType * soap_new_set_ns5__SignatureValueType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns5__SignatureValueType *_p = soap_new_ns5__SignatureValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__SignatureValueType::__item = __item;
		_p->ns5__SignatureValueType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns5__SignatureValueType
#define soap_write_ns5__SignatureValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:SignatureValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SignatureValueType * SOAP_FMAC4 soap_get_ns5__SignatureValueType(struct soap*, ns5__SignatureValueType *, const char*, const char*);

#ifndef soap_read_ns5__SignatureValueType
#define soap_read_ns5__SignatureValueType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__SignatureValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__DigestValueType
#define SOAP_TYPE_ACService_ns5__DigestValueType (45)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__DigestValueType(struct soap*, const char*, int, const ns5__DigestValueType *, const char*);
SOAP_FMAC3 ns5__DigestValueType * SOAP_FMAC4 soap_in_ns5__DigestValueType(struct soap*, const char*, ns5__DigestValueType *, const char*);
SOAP_FMAC1 ns5__DigestValueType * SOAP_FMAC2 soap_instantiate_ns5__DigestValueType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__DigestValueType * soap_new_ns5__DigestValueType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__DigestValueType(soap, n, NULL, NULL, NULL); }

inline ns5__DigestValueType * soap_new_req_ns5__DigestValueType(
	struct soap *soap,
	const xsd__base64Binary& __item)
{	ns5__DigestValueType *_p = soap_new_ns5__DigestValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__DigestValueType::__item = __item;
	}
	return _p;
}

inline ns5__DigestValueType * soap_new_set_ns5__DigestValueType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	std::string *Id)
{	ns5__DigestValueType *_p = soap_new_ns5__DigestValueType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__DigestValueType::__item = __item;
		_p->ns5__DigestValueType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns5__DigestValueType
#define soap_write_ns5__DigestValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:DigestValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__DigestValueType * SOAP_FMAC4 soap_get_ns5__DigestValueType(struct soap*, ns5__DigestValueType *, const char*, const char*);

#ifndef soap_read_ns5__DigestValueType
#define soap_read_ns5__DigestValueType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__DigestValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__X509CertificateType
#define SOAP_TYPE_ACService_ns5__X509CertificateType (44)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__X509CertificateType(struct soap*, const char*, int, const ns5__X509CertificateType *, const char*);
SOAP_FMAC3 ns5__X509CertificateType * SOAP_FMAC4 soap_in_ns5__X509CertificateType(struct soap*, const char*, ns5__X509CertificateType *, const char*);
SOAP_FMAC1 ns5__X509CertificateType * SOAP_FMAC2 soap_instantiate_ns5__X509CertificateType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__X509CertificateType * soap_new_ns5__X509CertificateType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__X509CertificateType(soap, n, NULL, NULL, NULL); }

inline ns5__X509CertificateType * soap_new_req_ns5__X509CertificateType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns5__X509CertificateType *_p = soap_new_ns5__X509CertificateType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__X509CertificateType::__item = __item;
		_p->ns5__X509CertificateType::Id = Id;
	}
	return _p;
}

inline ns5__X509CertificateType * soap_new_set_ns5__X509CertificateType(
	struct soap *soap,
	const xsd__base64Binary& __item,
	const std::string& Id)
{	ns5__X509CertificateType *_p = soap_new_ns5__X509CertificateType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__X509CertificateType::__item = __item;
		_p->ns5__X509CertificateType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns5__X509CertificateType
#define soap_write_ns5__X509CertificateType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:X509CertificateType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__X509CertificateType * SOAP_FMAC4 soap_get_ns5__X509CertificateType(struct soap*, ns5__X509CertificateType *, const char*, const char*);

#ifndef soap_read_ns5__X509CertificateType
#define soap_read_ns5__X509CertificateType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__X509CertificateType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__ObjectType
#define SOAP_TYPE_ACService_ns5__ObjectType (43)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ObjectType(struct soap*, const char*, int, const ns5__ObjectType *, const char*);
SOAP_FMAC3 ns5__ObjectType * SOAP_FMAC4 soap_in_ns5__ObjectType(struct soap*, const char*, ns5__ObjectType *, const char*);
SOAP_FMAC1 ns5__ObjectType * SOAP_FMAC2 soap_instantiate_ns5__ObjectType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ObjectType * soap_new_ns5__ObjectType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ObjectType(soap, n, NULL, NULL, NULL); }

inline ns5__ObjectType * soap_new_req_ns5__ObjectType(
	struct soap *soap,
	int __union_ObjectType,
	const union _ns5__union_ObjectType& union_ObjectType,
	const std::string& Id)
{	ns5__ObjectType *_p = soap_new_ns5__ObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__ObjectType::__union_ObjectType = __union_ObjectType;
		_p->ns5__ObjectType::union_ObjectType = union_ObjectType;
		_p->ns5__ObjectType::Id = Id;
	}
	return _p;
}

inline ns5__ObjectType * soap_new_set_ns5__ObjectType(
	struct soap *soap,
	int __union_ObjectType,
	const union _ns5__union_ObjectType& union_ObjectType,
	const std::string& Id)
{	ns5__ObjectType *_p = soap_new_ns5__ObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__ObjectType::__union_ObjectType = __union_ObjectType;
		_p->ns5__ObjectType::union_ObjectType = union_ObjectType;
		_p->ns5__ObjectType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns5__ObjectType
#define soap_write_ns5__ObjectType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:ObjectType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ObjectType * SOAP_FMAC4 soap_get_ns5__ObjectType(struct soap*, ns5__ObjectType *, const char*, const char*);

#ifndef soap_read_ns5__ObjectType
#define soap_read_ns5__ObjectType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__ObjectType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__X509DataType
#define SOAP_TYPE_ACService_ns5__X509DataType (42)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__X509DataType(struct soap*, const char*, int, const ns5__X509DataType *, const char*);
SOAP_FMAC3 ns5__X509DataType * SOAP_FMAC4 soap_in_ns5__X509DataType(struct soap*, const char*, ns5__X509DataType *, const char*);
SOAP_FMAC1 ns5__X509DataType * SOAP_FMAC2 soap_instantiate_ns5__X509DataType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__X509DataType * soap_new_ns5__X509DataType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__X509DataType(soap, n, NULL, NULL, NULL); }

inline ns5__X509DataType * soap_new_req_ns5__X509DataType(
	struct soap *soap,
	const std::vector<ns5__X509CertificateType *> & ns5__X509Certificate)
{	ns5__X509DataType *_p = soap_new_ns5__X509DataType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__X509DataType::ns5__X509Certificate = ns5__X509Certificate;
	}
	return _p;
}

inline ns5__X509DataType * soap_new_set_ns5__X509DataType(
	struct soap *soap,
	const std::vector<ns5__X509CertificateType *> & ns5__X509Certificate)
{	ns5__X509DataType *_p = soap_new_ns5__X509DataType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__X509DataType::ns5__X509Certificate = ns5__X509Certificate;
	}
	return _p;
}

#ifndef soap_write_ns5__X509DataType
#define soap_write_ns5__X509DataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:X509DataType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__X509DataType * SOAP_FMAC4 soap_get_ns5__X509DataType(struct soap*, ns5__X509DataType *, const char*, const char*);

#ifndef soap_read_ns5__X509DataType
#define soap_read_ns5__X509DataType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__X509DataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__KeyInfoType
#define SOAP_TYPE_ACService_ns5__KeyInfoType (41)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__KeyInfoType(struct soap*, const char*, int, const ns5__KeyInfoType *, const char*);
SOAP_FMAC3 ns5__KeyInfoType * SOAP_FMAC4 soap_in_ns5__KeyInfoType(struct soap*, const char*, ns5__KeyInfoType *, const char*);
SOAP_FMAC1 ns5__KeyInfoType * SOAP_FMAC2 soap_instantiate_ns5__KeyInfoType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__KeyInfoType * soap_new_ns5__KeyInfoType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__KeyInfoType(soap, n, NULL, NULL, NULL); }

inline ns5__KeyInfoType * soap_new_req_ns5__KeyInfoType(
	struct soap *soap,
	ns5__X509DataType *ns5__X509Data,
	const std::string& Id)
{	ns5__KeyInfoType *_p = soap_new_ns5__KeyInfoType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__KeyInfoType::ns5__X509Data = ns5__X509Data;
		_p->ns5__KeyInfoType::Id = Id;
	}
	return _p;
}

inline ns5__KeyInfoType * soap_new_set_ns5__KeyInfoType(
	struct soap *soap,
	ns5__X509DataType *ns5__X509Data,
	const std::string& Id)
{	ns5__KeyInfoType *_p = soap_new_ns5__KeyInfoType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__KeyInfoType::ns5__X509Data = ns5__X509Data;
		_p->ns5__KeyInfoType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns5__KeyInfoType
#define soap_write_ns5__KeyInfoType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:KeyInfoType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__KeyInfoType * SOAP_FMAC4 soap_get_ns5__KeyInfoType(struct soap*, ns5__KeyInfoType *, const char*, const char*);

#ifndef soap_read_ns5__KeyInfoType
#define soap_read_ns5__KeyInfoType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__KeyInfoType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__DigestMethodType
#define SOAP_TYPE_ACService_ns5__DigestMethodType (40)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__DigestMethodType(struct soap*, const char*, int, const ns5__DigestMethodType *, const char*);
SOAP_FMAC3 ns5__DigestMethodType * SOAP_FMAC4 soap_in_ns5__DigestMethodType(struct soap*, const char*, ns5__DigestMethodType *, const char*);
SOAP_FMAC1 ns5__DigestMethodType * SOAP_FMAC2 soap_instantiate_ns5__DigestMethodType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__DigestMethodType * soap_new_ns5__DigestMethodType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__DigestMethodType(soap, n, NULL, NULL, NULL); }

inline ns5__DigestMethodType * soap_new_req_ns5__DigestMethodType(
	struct soap *soap,
	const std::string& Algorithm)
{	ns5__DigestMethodType *_p = soap_new_ns5__DigestMethodType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__DigestMethodType::Algorithm = Algorithm;
	}
	return _p;
}

inline ns5__DigestMethodType * soap_new_set_ns5__DigestMethodType(
	struct soap *soap,
	const std::string& Algorithm)
{	ns5__DigestMethodType *_p = soap_new_ns5__DigestMethodType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__DigestMethodType::Algorithm = Algorithm;
	}
	return _p;
}

#ifndef soap_write_ns5__DigestMethodType
#define soap_write_ns5__DigestMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:DigestMethodType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__DigestMethodType * SOAP_FMAC4 soap_get_ns5__DigestMethodType(struct soap*, ns5__DigestMethodType *, const char*, const char*);

#ifndef soap_read_ns5__DigestMethodType
#define soap_read_ns5__DigestMethodType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__DigestMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__TransformType
#define SOAP_TYPE_ACService_ns5__TransformType (39)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__TransformType(struct soap*, const char*, int, const ns5__TransformType *, const char*);
SOAP_FMAC3 ns5__TransformType * SOAP_FMAC4 soap_in_ns5__TransformType(struct soap*, const char*, ns5__TransformType *, const char*);
SOAP_FMAC1 ns5__TransformType * SOAP_FMAC2 soap_instantiate_ns5__TransformType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__TransformType * soap_new_ns5__TransformType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__TransformType(soap, n, NULL, NULL, NULL); }

inline ns5__TransformType * soap_new_req_ns5__TransformType(
	struct soap *soap,
	const std::string& Algorithm)
{	ns5__TransformType *_p = soap_new_ns5__TransformType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__TransformType::Algorithm = Algorithm;
	}
	return _p;
}

inline ns5__TransformType * soap_new_set_ns5__TransformType(
	struct soap *soap,
	const std::string& Algorithm)
{	ns5__TransformType *_p = soap_new_ns5__TransformType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__TransformType::Algorithm = Algorithm;
	}
	return _p;
}

#ifndef soap_write_ns5__TransformType
#define soap_write_ns5__TransformType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:TransformType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__TransformType * SOAP_FMAC4 soap_get_ns5__TransformType(struct soap*, ns5__TransformType *, const char*, const char*);

#ifndef soap_read_ns5__TransformType
#define soap_read_ns5__TransformType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__TransformType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__TransformsType
#define SOAP_TYPE_ACService_ns5__TransformsType (38)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__TransformsType(struct soap*, const char*, int, const ns5__TransformsType *, const char*);
SOAP_FMAC3 ns5__TransformsType * SOAP_FMAC4 soap_in_ns5__TransformsType(struct soap*, const char*, ns5__TransformsType *, const char*);
SOAP_FMAC1 ns5__TransformsType * SOAP_FMAC2 soap_instantiate_ns5__TransformsType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__TransformsType * soap_new_ns5__TransformsType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__TransformsType(soap, n, NULL, NULL, NULL); }

inline ns5__TransformsType * soap_new_req_ns5__TransformsType(
	struct soap *soap,
	const std::vector<ns5__TransformType *> & ns5__Transform)
{	ns5__TransformsType *_p = soap_new_ns5__TransformsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__TransformsType::ns5__Transform = ns5__Transform;
	}
	return _p;
}

inline ns5__TransformsType * soap_new_set_ns5__TransformsType(
	struct soap *soap,
	const std::vector<ns5__TransformType *> & ns5__Transform)
{	ns5__TransformsType *_p = soap_new_ns5__TransformsType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__TransformsType::ns5__Transform = ns5__Transform;
	}
	return _p;
}

#ifndef soap_write_ns5__TransformsType
#define soap_write_ns5__TransformsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:TransformsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__TransformsType * SOAP_FMAC4 soap_get_ns5__TransformsType(struct soap*, ns5__TransformsType *, const char*, const char*);

#ifndef soap_read_ns5__TransformsType
#define soap_read_ns5__TransformsType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__TransformsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__ReferenceType
#define SOAP_TYPE_ACService_ns5__ReferenceType (37)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ReferenceType(struct soap*, const char*, int, const ns5__ReferenceType *, const char*);
SOAP_FMAC3 ns5__ReferenceType * SOAP_FMAC4 soap_in_ns5__ReferenceType(struct soap*, const char*, ns5__ReferenceType *, const char*);
SOAP_FMAC1 ns5__ReferenceType * SOAP_FMAC2 soap_instantiate_ns5__ReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ReferenceType * soap_new_ns5__ReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ReferenceType(soap, n, NULL, NULL, NULL); }

inline ns5__ReferenceType * soap_new_req_ns5__ReferenceType(
	struct soap *soap,
	ns5__TransformsType *ns5__Transforms,
	ns5__DigestMethodType *ns5__DigestMethod,
	ns5__DigestValueType *ns5__DigestValue,
	const std::string& Id)
{	ns5__ReferenceType *_p = soap_new_ns5__ReferenceType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__ReferenceType::ns5__Transforms = ns5__Transforms;
		_p->ns5__ReferenceType::ns5__DigestMethod = ns5__DigestMethod;
		_p->ns5__ReferenceType::ns5__DigestValue = ns5__DigestValue;
		_p->ns5__ReferenceType::Id = Id;
	}
	return _p;
}

inline ns5__ReferenceType * soap_new_set_ns5__ReferenceType(
	struct soap *soap,
	ns5__TransformsType *ns5__Transforms,
	ns5__DigestMethodType *ns5__DigestMethod,
	ns5__DigestValueType *ns5__DigestValue,
	const std::string& Id,
	std::string *Type,
	std::string *URI)
{	ns5__ReferenceType *_p = soap_new_ns5__ReferenceType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__ReferenceType::ns5__Transforms = ns5__Transforms;
		_p->ns5__ReferenceType::ns5__DigestMethod = ns5__DigestMethod;
		_p->ns5__ReferenceType::ns5__DigestValue = ns5__DigestValue;
		_p->ns5__ReferenceType::Id = Id;
		_p->ns5__ReferenceType::Type = Type;
		_p->ns5__ReferenceType::URI = URI;
	}
	return _p;
}

#ifndef soap_write_ns5__ReferenceType
#define soap_write_ns5__ReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:ReferenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ReferenceType * SOAP_FMAC4 soap_get_ns5__ReferenceType(struct soap*, ns5__ReferenceType *, const char*, const char*);

#ifndef soap_read_ns5__ReferenceType
#define soap_read_ns5__ReferenceType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__ReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__SignatureMethodType
#define SOAP_TYPE_ACService_ns5__SignatureMethodType (36)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__SignatureMethodType(struct soap*, const char*, int, const ns5__SignatureMethodType *, const char*);
SOAP_FMAC3 ns5__SignatureMethodType * SOAP_FMAC4 soap_in_ns5__SignatureMethodType(struct soap*, const char*, ns5__SignatureMethodType *, const char*);
SOAP_FMAC1 ns5__SignatureMethodType * SOAP_FMAC2 soap_instantiate_ns5__SignatureMethodType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__SignatureMethodType * soap_new_ns5__SignatureMethodType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__SignatureMethodType(soap, n, NULL, NULL, NULL); }

inline ns5__SignatureMethodType * soap_new_req_ns5__SignatureMethodType(
	struct soap *soap,
	const std::string& Algorithm)
{	ns5__SignatureMethodType *_p = soap_new_ns5__SignatureMethodType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__SignatureMethodType::Algorithm = Algorithm;
	}
	return _p;
}

inline ns5__SignatureMethodType * soap_new_set_ns5__SignatureMethodType(
	struct soap *soap,
	const std::string& Algorithm)
{	ns5__SignatureMethodType *_p = soap_new_ns5__SignatureMethodType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__SignatureMethodType::Algorithm = Algorithm;
	}
	return _p;
}

#ifndef soap_write_ns5__SignatureMethodType
#define soap_write_ns5__SignatureMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:SignatureMethodType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SignatureMethodType * SOAP_FMAC4 soap_get_ns5__SignatureMethodType(struct soap*, ns5__SignatureMethodType *, const char*, const char*);

#ifndef soap_read_ns5__SignatureMethodType
#define soap_read_ns5__SignatureMethodType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__SignatureMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__CanonicalizationMethodType
#define SOAP_TYPE_ACService_ns5__CanonicalizationMethodType (35)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__CanonicalizationMethodType(struct soap*, const char*, int, const ns5__CanonicalizationMethodType *, const char*);
SOAP_FMAC3 ns5__CanonicalizationMethodType * SOAP_FMAC4 soap_in_ns5__CanonicalizationMethodType(struct soap*, const char*, ns5__CanonicalizationMethodType *, const char*);
SOAP_FMAC1 ns5__CanonicalizationMethodType * SOAP_FMAC2 soap_instantiate_ns5__CanonicalizationMethodType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__CanonicalizationMethodType * soap_new_ns5__CanonicalizationMethodType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__CanonicalizationMethodType(soap, n, NULL, NULL, NULL); }

inline ns5__CanonicalizationMethodType * soap_new_req_ns5__CanonicalizationMethodType(
	struct soap *soap,
	const std::string& Algorithm)
{	ns5__CanonicalizationMethodType *_p = soap_new_ns5__CanonicalizationMethodType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__CanonicalizationMethodType::Algorithm = Algorithm;
	}
	return _p;
}

inline ns5__CanonicalizationMethodType * soap_new_set_ns5__CanonicalizationMethodType(
	struct soap *soap,
	const std::string& Algorithm)
{	ns5__CanonicalizationMethodType *_p = soap_new_ns5__CanonicalizationMethodType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__CanonicalizationMethodType::Algorithm = Algorithm;
	}
	return _p;
}

#ifndef soap_write_ns5__CanonicalizationMethodType
#define soap_write_ns5__CanonicalizationMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:CanonicalizationMethodType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__CanonicalizationMethodType * SOAP_FMAC4 soap_get_ns5__CanonicalizationMethodType(struct soap*, ns5__CanonicalizationMethodType *, const char*, const char*);

#ifndef soap_read_ns5__CanonicalizationMethodType
#define soap_read_ns5__CanonicalizationMethodType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__CanonicalizationMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__SignedInfoType
#define SOAP_TYPE_ACService_ns5__SignedInfoType (34)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__SignedInfoType(struct soap*, const char*, int, const ns5__SignedInfoType *, const char*);
SOAP_FMAC3 ns5__SignedInfoType * SOAP_FMAC4 soap_in_ns5__SignedInfoType(struct soap*, const char*, ns5__SignedInfoType *, const char*);
SOAP_FMAC1 ns5__SignedInfoType * SOAP_FMAC2 soap_instantiate_ns5__SignedInfoType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__SignedInfoType * soap_new_ns5__SignedInfoType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__SignedInfoType(soap, n, NULL, NULL, NULL); }

inline ns5__SignedInfoType * soap_new_req_ns5__SignedInfoType(
	struct soap *soap,
	ns5__CanonicalizationMethodType *ns5__CanonicalizationMethod,
	ns5__SignatureMethodType *ns5__SignatureMethod,
	const std::vector<ns5__ReferenceType *> & ns5__Reference,
	const std::string& Id)
{	ns5__SignedInfoType *_p = soap_new_ns5__SignedInfoType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__SignedInfoType::ns5__CanonicalizationMethod = ns5__CanonicalizationMethod;
		_p->ns5__SignedInfoType::ns5__SignatureMethod = ns5__SignatureMethod;
		_p->ns5__SignedInfoType::ns5__Reference = ns5__Reference;
		_p->ns5__SignedInfoType::Id = Id;
	}
	return _p;
}

inline ns5__SignedInfoType * soap_new_set_ns5__SignedInfoType(
	struct soap *soap,
	ns5__CanonicalizationMethodType *ns5__CanonicalizationMethod,
	ns5__SignatureMethodType *ns5__SignatureMethod,
	const std::vector<ns5__ReferenceType *> & ns5__Reference,
	const std::string& Id)
{	ns5__SignedInfoType *_p = soap_new_ns5__SignedInfoType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__SignedInfoType::ns5__CanonicalizationMethod = ns5__CanonicalizationMethod;
		_p->ns5__SignedInfoType::ns5__SignatureMethod = ns5__SignatureMethod;
		_p->ns5__SignedInfoType::ns5__Reference = ns5__Reference;
		_p->ns5__SignedInfoType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns5__SignedInfoType
#define soap_write_ns5__SignedInfoType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:SignedInfoType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SignedInfoType * SOAP_FMAC4 soap_get_ns5__SignedInfoType(struct soap*, ns5__SignedInfoType *, const char*, const char*);

#ifndef soap_read_ns5__SignedInfoType
#define soap_read_ns5__SignedInfoType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__SignedInfoType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns5__SignatureType
#define SOAP_TYPE_ACService_ns5__SignatureType (33)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__SignatureType(struct soap*, const char*, int, const ns5__SignatureType *, const char*);
SOAP_FMAC3 ns5__SignatureType * SOAP_FMAC4 soap_in_ns5__SignatureType(struct soap*, const char*, ns5__SignatureType *, const char*);
SOAP_FMAC1 ns5__SignatureType * SOAP_FMAC2 soap_instantiate_ns5__SignatureType(struct soap*, int, const char*, const char*, size_t*);

inline ns5__SignatureType * soap_new_ns5__SignatureType(struct soap *soap, int n = -1) { return soap_instantiate_ns5__SignatureType(soap, n, NULL, NULL, NULL); }

inline ns5__SignatureType * soap_new_req_ns5__SignatureType(
	struct soap *soap,
	ns5__SignedInfoType *ns5__SignedInfo,
	ns5__SignatureValueType *ns5__SignatureValue,
	ns5__KeyInfoType *ns5__KeyInfo,
	const std::string& Id)
{	ns5__SignatureType *_p = soap_new_ns5__SignatureType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__SignatureType::ns5__SignedInfo = ns5__SignedInfo;
		_p->ns5__SignatureType::ns5__SignatureValue = ns5__SignatureValue;
		_p->ns5__SignatureType::ns5__KeyInfo = ns5__KeyInfo;
		_p->ns5__SignatureType::Id = Id;
	}
	return _p;
}

inline ns5__SignatureType * soap_new_set_ns5__SignatureType(
	struct soap *soap,
	ns5__SignedInfoType *ns5__SignedInfo,
	ns5__SignatureValueType *ns5__SignatureValue,
	ns5__KeyInfoType *ns5__KeyInfo,
	const std::vector<ns5__ObjectType *> & ns5__Object,
	const std::string& Id)
{	ns5__SignatureType *_p = soap_new_ns5__SignatureType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns5__SignatureType::ns5__SignedInfo = ns5__SignedInfo;
		_p->ns5__SignatureType::ns5__SignatureValue = ns5__SignatureValue;
		_p->ns5__SignatureType::ns5__KeyInfo = ns5__KeyInfo;
		_p->ns5__SignatureType::ns5__Object = ns5__Object;
		_p->ns5__SignatureType::Id = Id;
	}
	return _p;
}

#ifndef soap_write_ns5__SignatureType
#define soap_write_ns5__SignatureType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns5:SignatureType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SignatureType * SOAP_FMAC4 soap_get_ns5__SignatureType(struct soap*, ns5__SignatureType *, const char*, const char*);

#ifndef soap_read_ns5__SignatureType
#define soap_read_ns5__SignatureType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns5__SignatureType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__ResponseResult
#define SOAP_TYPE_ACService_ns2__ResponseResult (32)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ResponseResult(struct soap*, const char*, int, const ns2__ResponseResult *, const char*);
SOAP_FMAC3 ns2__ResponseResult * SOAP_FMAC4 soap_in_ns2__ResponseResult(struct soap*, const char*, ns2__ResponseResult *, const char*);
SOAP_FMAC1 ns2__ResponseResult * SOAP_FMAC2 soap_instantiate_ns2__ResponseResult(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ResponseResult * soap_new_ns2__ResponseResult(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ResponseResult(soap, n, NULL, NULL, NULL); }

inline ns2__ResponseResult * soap_new_req_ns2__ResponseResult(
	struct soap *soap,
	const std::string& ResultCode,
	const std::string& ResultMessage,
	ns3__PersonalDataType *CitizenIDWithExtraInfo)
{	ns2__ResponseResult *_p = soap_new_ns2__ResponseResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__ResponseResult::ResultCode = ResultCode;
		_p->ns2__ResponseResult::ResultMessage = ResultMessage;
		_p->ns2__ResponseResult::CitizenIDWithExtraInfo = CitizenIDWithExtraInfo;
	}
	return _p;
}

inline ns2__ResponseResult * soap_new_set_ns2__ResponseResult(
	struct soap *soap,
	const std::string& ResultCode,
	const std::string& ResultMessage,
	ns3__PersonalDataType *CitizenIDWithExtraInfo)
{	ns2__ResponseResult *_p = soap_new_ns2__ResponseResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__ResponseResult::ResultCode = ResultCode;
		_p->ns2__ResponseResult::ResultMessage = ResultMessage;
		_p->ns2__ResponseResult::CitizenIDWithExtraInfo = CitizenIDWithExtraInfo;
	}
	return _p;
}

#ifndef soap_write_ns2__ResponseResult
#define soap_write_ns2__ResponseResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:ResponseResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ResponseResult * SOAP_FMAC4 soap_get_ns2__ResponseResult(struct soap*, ns2__ResponseResult *, const char*, const char*);

#ifndef soap_read_ns2__ResponseResult
#define soap_read_ns2__ResponseResult(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__ResponseResult(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__UnsignedAttributesBasicType
#define SOAP_TYPE_ACService_ns2__UnsignedAttributesBasicType (31)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__UnsignedAttributesBasicType(struct soap*, const char*, int, const ns2__UnsignedAttributesBasicType *, const char*);
SOAP_FMAC3 ns2__UnsignedAttributesBasicType * SOAP_FMAC4 soap_in_ns2__UnsignedAttributesBasicType(struct soap*, const char*, ns2__UnsignedAttributesBasicType *, const char*);
SOAP_FMAC1 ns2__UnsignedAttributesBasicType * SOAP_FMAC2 soap_instantiate_ns2__UnsignedAttributesBasicType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__UnsignedAttributesBasicType * soap_new_ns2__UnsignedAttributesBasicType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__UnsignedAttributesBasicType(soap, n, NULL, NULL, NULL); }

inline ns2__UnsignedAttributesBasicType * soap_new_req_ns2__UnsignedAttributesBasicType(
	struct soap *soap,
	const std::vector<ns3__AttributeType *> & ns3__Attribute)
{	ns2__UnsignedAttributesBasicType *_p = soap_new_ns2__UnsignedAttributesBasicType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__UnsignedAttributesBasicType::ns3__Attribute = ns3__Attribute;
	}
	return _p;
}

inline ns2__UnsignedAttributesBasicType * soap_new_set_ns2__UnsignedAttributesBasicType(
	struct soap *soap,
	const std::vector<ns3__AttributeType *> & ns3__Attribute)
{	ns2__UnsignedAttributesBasicType *_p = soap_new_ns2__UnsignedAttributesBasicType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__UnsignedAttributesBasicType::ns3__Attribute = ns3__Attribute;
	}
	return _p;
}

#ifndef soap_write_ns2__UnsignedAttributesBasicType
#define soap_write_ns2__UnsignedAttributesBasicType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:UnsignedAttributesBasicType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__UnsignedAttributesBasicType * SOAP_FMAC4 soap_get_ns2__UnsignedAttributesBasicType(struct soap*, ns2__UnsignedAttributesBasicType *, const char*, const char*);

#ifndef soap_read_ns2__UnsignedAttributesBasicType
#define soap_read_ns2__UnsignedAttributesBasicType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__UnsignedAttributesBasicType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__SignedAttributesType
#define SOAP_TYPE_ACService_ns2__SignedAttributesType (30)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SignedAttributesType(struct soap*, const char*, int, const ns2__SignedAttributesType *, const char*);
SOAP_FMAC3 ns2__SignedAttributesType * SOAP_FMAC4 soap_in_ns2__SignedAttributesType(struct soap*, const char*, ns2__SignedAttributesType *, const char*);
SOAP_FMAC1 ns2__SignedAttributesType * SOAP_FMAC2 soap_instantiate_ns2__SignedAttributesType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__SignedAttributesType * soap_new_ns2__SignedAttributesType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SignedAttributesType(soap, n, NULL, NULL, NULL); }

inline ns2__SignedAttributesType * soap_new_req_ns2__SignedAttributesType(
	struct soap *soap,
	const std::vector<ns5__SignatureType *> & ns3__SignatureAttribute)
{	ns2__SignedAttributesType *_p = soap_new_ns2__SignedAttributesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__SignedAttributesType::ns3__SignatureAttribute = ns3__SignatureAttribute;
	}
	return _p;
}

inline ns2__SignedAttributesType * soap_new_set_ns2__SignedAttributesType(
	struct soap *soap,
	const std::vector<ns5__SignatureType *> & ns3__SignatureAttribute)
{	ns2__SignedAttributesType *_p = soap_new_ns2__SignedAttributesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__SignedAttributesType::ns3__SignatureAttribute = ns3__SignatureAttribute;
	}
	return _p;
}

#ifndef soap_write_ns2__SignedAttributesType
#define soap_write_ns2__SignedAttributesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:SignedAttributesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__SignedAttributesType * SOAP_FMAC4 soap_get_ns2__SignedAttributesType(struct soap*, ns2__SignedAttributesType *, const char*, const char*);

#ifndef soap_read_ns2__SignedAttributesType
#define soap_read_ns2__SignedAttributesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__SignedAttributesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__UnsignedAttributesType
#define SOAP_TYPE_ACService_ns2__UnsignedAttributesType (29)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__UnsignedAttributesType(struct soap*, const char*, int, const ns2__UnsignedAttributesType *, const char*);
SOAP_FMAC3 ns2__UnsignedAttributesType * SOAP_FMAC4 soap_in_ns2__UnsignedAttributesType(struct soap*, const char*, ns2__UnsignedAttributesType *, const char*);
SOAP_FMAC1 ns2__UnsignedAttributesType * SOAP_FMAC2 soap_instantiate_ns2__UnsignedAttributesType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__UnsignedAttributesType * soap_new_ns2__UnsignedAttributesType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__UnsignedAttributesType(soap, n, NULL, NULL, NULL); }

inline ns2__UnsignedAttributesType * soap_new_req_ns2__UnsignedAttributesType(
	struct soap *soap,
	ns2__ResponseResult *ResponseResult)
{	ns2__UnsignedAttributesType *_p = soap_new_ns2__UnsignedAttributesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__UnsignedAttributesType::ResponseResult = ResponseResult;
	}
	return _p;
}

inline ns2__UnsignedAttributesType * soap_new_set_ns2__UnsignedAttributesType(
	struct soap *soap,
	ns2__ResponseResult *ResponseResult,
	ns2__UnsignedAttributesBasicType *UnsignedAttributes)
{	ns2__UnsignedAttributesType *_p = soap_new_ns2__UnsignedAttributesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__UnsignedAttributesType::ResponseResult = ResponseResult;
		_p->ns2__UnsignedAttributesType::UnsignedAttributes = UnsignedAttributes;
	}
	return _p;
}

#ifndef soap_write_ns2__UnsignedAttributesType
#define soap_write_ns2__UnsignedAttributesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:UnsignedAttributesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__UnsignedAttributesType * SOAP_FMAC4 soap_get_ns2__UnsignedAttributesType(struct soap*, ns2__UnsignedAttributesType *, const char*, const char*);

#ifndef soap_read_ns2__UnsignedAttributesType
#define soap_read_ns2__UnsignedAttributesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__UnsignedAttributesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__AttributesType
#define SOAP_TYPE_ACService_ns2__AttributesType (28)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__AttributesType(struct soap*, const char*, int, const ns2__AttributesType *, const char*);
SOAP_FMAC3 ns2__AttributesType * SOAP_FMAC4 soap_in_ns2__AttributesType(struct soap*, const char*, ns2__AttributesType *, const char*);
SOAP_FMAC1 ns2__AttributesType * SOAP_FMAC2 soap_instantiate_ns2__AttributesType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__AttributesType * soap_new_ns2__AttributesType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__AttributesType(soap, n, NULL, NULL, NULL); }

inline ns2__AttributesType * soap_new_req_ns2__AttributesType(
	struct soap *soap,
	ns3__AttributeSupplierType *ATTRSupplier,
	ns2__ResponseResult *ResponseResult)
{	ns2__AttributesType *_p = soap_new_ns2__AttributesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__AttributesType::ATTRSupplier = ATTRSupplier;
		_p->ns2__AttributesType::ResponseResult = ResponseResult;
	}
	return _p;
}

inline ns2__AttributesType * soap_new_set_ns2__AttributesType(
	struct soap *soap,
	ns3__AttributeSupplierType *ATTRSupplier,
	ns2__ResponseResult *ResponseResult,
	ns2__SignedAttributesType *SignedAttributes)
{	ns2__AttributesType *_p = soap_new_ns2__AttributesType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__AttributesType::ATTRSupplier = ATTRSupplier;
		_p->ns2__AttributesType::ResponseResult = ResponseResult;
		_p->ns2__AttributesType::SignedAttributes = SignedAttributes;
	}
	return _p;
}

#ifndef soap_write_ns2__AttributesType
#define soap_write_ns2__AttributesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:AttributesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__AttributesType * SOAP_FMAC4 soap_get_ns2__AttributesType(struct soap*, ns2__AttributesType *, const char*, const char*);

#ifndef soap_read_ns2__AttributesType
#define soap_read_ns2__AttributesType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__AttributesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__UnsignedAttributeResponseType
#define SOAP_TYPE_ACService_ns2__UnsignedAttributeResponseType (27)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__UnsignedAttributeResponseType(struct soap*, const char*, int, const ns2__UnsignedAttributeResponseType *, const char*);
SOAP_FMAC3 ns2__UnsignedAttributeResponseType * SOAP_FMAC4 soap_in_ns2__UnsignedAttributeResponseType(struct soap*, const char*, ns2__UnsignedAttributeResponseType *, const char*);
SOAP_FMAC1 ns2__UnsignedAttributeResponseType * SOAP_FMAC2 soap_instantiate_ns2__UnsignedAttributeResponseType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__UnsignedAttributeResponseType * soap_new_ns2__UnsignedAttributeResponseType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__UnsignedAttributeResponseType(soap, n, NULL, NULL, NULL); }

inline ns2__UnsignedAttributeResponseType * soap_new_req_ns2__UnsignedAttributeResponseType(
	struct soap *soap,
	const std::string& ProcessId,
	ns2__UnsignedAttributesType *AttributeResponseValues)
{	ns2__UnsignedAttributeResponseType *_p = soap_new_ns2__UnsignedAttributeResponseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__UnsignedAttributeResponseType::ProcessId = ProcessId;
		_p->ns2__UnsignedAttributeResponseType::AttributeResponseValues = AttributeResponseValues;
	}
	return _p;
}

inline ns2__UnsignedAttributeResponseType * soap_new_set_ns2__UnsignedAttributeResponseType(
	struct soap *soap,
	const std::string& ProcessId,
	std::string *CompanyId,
	std::string *CompanyName,
	ns2__UnsignedAttributesType *AttributeResponseValues)
{	ns2__UnsignedAttributeResponseType *_p = soap_new_ns2__UnsignedAttributeResponseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__UnsignedAttributeResponseType::ProcessId = ProcessId;
		_p->ns2__UnsignedAttributeResponseType::CompanyId = CompanyId;
		_p->ns2__UnsignedAttributeResponseType::CompanyName = CompanyName;
		_p->ns2__UnsignedAttributeResponseType::AttributeResponseValues = AttributeResponseValues;
	}
	return _p;
}

#ifndef soap_write_ns2__UnsignedAttributeResponseType
#define soap_write_ns2__UnsignedAttributeResponseType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:UnsignedAttributeResponseType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__UnsignedAttributeResponseType * SOAP_FMAC4 soap_get_ns2__UnsignedAttributeResponseType(struct soap*, ns2__UnsignedAttributeResponseType *, const char*, const char*);

#ifndef soap_read_ns2__UnsignedAttributeResponseType
#define soap_read_ns2__UnsignedAttributeResponseType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__UnsignedAttributeResponseType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__SingleAttributeResponseType
#define SOAP_TYPE_ACService_ns2__SingleAttributeResponseType (26)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SingleAttributeResponseType(struct soap*, const char*, int, const ns2__SingleAttributeResponseType *, const char*);
SOAP_FMAC3 ns2__SingleAttributeResponseType * SOAP_FMAC4 soap_in_ns2__SingleAttributeResponseType(struct soap*, const char*, ns2__SingleAttributeResponseType *, const char*);
SOAP_FMAC1 ns2__SingleAttributeResponseType * SOAP_FMAC2 soap_instantiate_ns2__SingleAttributeResponseType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__SingleAttributeResponseType * soap_new_ns2__SingleAttributeResponseType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SingleAttributeResponseType(soap, n, NULL, NULL, NULL); }

inline ns2__SingleAttributeResponseType * soap_new_req_ns2__SingleAttributeResponseType(
	struct soap *soap,
	const std::string& ProcessId,
	ns2__AttributesType *AttributeResponseValues)
{	ns2__SingleAttributeResponseType *_p = soap_new_ns2__SingleAttributeResponseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__SingleAttributeResponseType::ProcessId = ProcessId;
		_p->ns2__SingleAttributeResponseType::AttributeResponseValues = AttributeResponseValues;
	}
	return _p;
}

inline ns2__SingleAttributeResponseType * soap_new_set_ns2__SingleAttributeResponseType(
	struct soap *soap,
	const std::string& ProcessId,
	ns2__AttributesType *AttributeResponseValues)
{	ns2__SingleAttributeResponseType *_p = soap_new_ns2__SingleAttributeResponseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__SingleAttributeResponseType::ProcessId = ProcessId;
		_p->ns2__SingleAttributeResponseType::AttributeResponseValues = AttributeResponseValues;
	}
	return _p;
}

#ifndef soap_write_ns2__SingleAttributeResponseType
#define soap_write_ns2__SingleAttributeResponseType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:SingleAttributeResponseType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__SingleAttributeResponseType * SOAP_FMAC4 soap_get_ns2__SingleAttributeResponseType(struct soap*, ns2__SingleAttributeResponseType *, const char*, const char*);

#ifndef soap_read_ns2__SingleAttributeResponseType
#define soap_read_ns2__SingleAttributeResponseType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__SingleAttributeResponseType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__AttributeResponseType
#define SOAP_TYPE_ACService_ns2__AttributeResponseType (25)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__AttributeResponseType(struct soap*, const char*, int, const ns2__AttributeResponseType *, const char*);
SOAP_FMAC3 ns2__AttributeResponseType * SOAP_FMAC4 soap_in_ns2__AttributeResponseType(struct soap*, const char*, ns2__AttributeResponseType *, const char*);
SOAP_FMAC1 ns2__AttributeResponseType * SOAP_FMAC2 soap_instantiate_ns2__AttributeResponseType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__AttributeResponseType * soap_new_ns2__AttributeResponseType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__AttributeResponseType(soap, n, NULL, NULL, NULL); }

inline ns2__AttributeResponseType * soap_new_req_ns2__AttributeResponseType(
	struct soap *soap,
	const std::string& ProcessId,
	const std::vector<ns2__AttributesType *> & AttributeResponseValues)
{	ns2__AttributeResponseType *_p = soap_new_ns2__AttributeResponseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__AttributeResponseType::ProcessId = ProcessId;
		_p->ns2__AttributeResponseType::AttributeResponseValues = AttributeResponseValues;
	}
	return _p;
}

inline ns2__AttributeResponseType * soap_new_set_ns2__AttributeResponseType(
	struct soap *soap,
	const std::string& ProcessId,
	const std::vector<ns2__AttributesType *> & AttributeResponseValues,
	std::string *ErrorMessage)
{	ns2__AttributeResponseType *_p = soap_new_ns2__AttributeResponseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__AttributeResponseType::ProcessId = ProcessId;
		_p->ns2__AttributeResponseType::AttributeResponseValues = AttributeResponseValues;
		_p->ns2__AttributeResponseType::ErrorMessage = ErrorMessage;
	}
	return _p;
}

#ifndef soap_write_ns2__AttributeResponseType
#define soap_write_ns2__AttributeResponseType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:AttributeResponseType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__AttributeResponseType * SOAP_FMAC4 soap_get_ns2__AttributeResponseType(struct soap*, ns2__AttributeResponseType *, const char*, const char*);

#ifndef soap_read_ns2__AttributeResponseType
#define soap_read_ns2__AttributeResponseType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__AttributeResponseType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__AttributeSupplierListType
#define SOAP_TYPE_ACService_ns2__AttributeSupplierListType (24)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__AttributeSupplierListType(struct soap*, const char*, int, const ns2__AttributeSupplierListType *, const char*);
SOAP_FMAC3 ns2__AttributeSupplierListType * SOAP_FMAC4 soap_in_ns2__AttributeSupplierListType(struct soap*, const char*, ns2__AttributeSupplierListType *, const char*);
SOAP_FMAC1 ns2__AttributeSupplierListType * SOAP_FMAC2 soap_instantiate_ns2__AttributeSupplierListType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__AttributeSupplierListType * soap_new_ns2__AttributeSupplierListType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__AttributeSupplierListType(soap, n, NULL, NULL, NULL); }

inline ns2__AttributeSupplierListType * soap_new_req_ns2__AttributeSupplierListType(
	struct soap *soap,
	const std::vector<ns3__AttributeSupplierType *> & AttributeSupplier)
{	ns2__AttributeSupplierListType *_p = soap_new_ns2__AttributeSupplierListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__AttributeSupplierListType::AttributeSupplier = AttributeSupplier;
	}
	return _p;
}

inline ns2__AttributeSupplierListType * soap_new_set_ns2__AttributeSupplierListType(
	struct soap *soap,
	const std::vector<ns3__AttributeSupplierType *> & AttributeSupplier)
{	ns2__AttributeSupplierListType *_p = soap_new_ns2__AttributeSupplierListType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__AttributeSupplierListType::AttributeSupplier = AttributeSupplier;
	}
	return _p;
}

#ifndef soap_write_ns2__AttributeSupplierListType
#define soap_write_ns2__AttributeSupplierListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:AttributeSupplierListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__AttributeSupplierListType * SOAP_FMAC4 soap_get_ns2__AttributeSupplierListType(struct soap*, ns2__AttributeSupplierListType *, const char*, const char*);

#ifndef soap_read_ns2__AttributeSupplierListType
#define soap_read_ns2__AttributeSupplierListType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__AttributeSupplierListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__PSAAttributeRequestType
#define SOAP_TYPE_ACService_ns2__PSAAttributeRequestType (23)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__PSAAttributeRequestType(struct soap*, const char*, int, const ns2__PSAAttributeRequestType *, const char*);
SOAP_FMAC3 ns2__PSAAttributeRequestType * SOAP_FMAC4 soap_in_ns2__PSAAttributeRequestType(struct soap*, const char*, ns2__PSAAttributeRequestType *, const char*);
SOAP_FMAC1 ns2__PSAAttributeRequestType * SOAP_FMAC2 soap_instantiate_ns2__PSAAttributeRequestType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__PSAAttributeRequestType * soap_new_ns2__PSAAttributeRequestType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__PSAAttributeRequestType(soap, n, NULL, NULL, NULL); }

inline ns2__PSAAttributeRequestType * soap_new_req_ns2__PSAAttributeRequestType(
	struct soap *soap,
	const std::string& ProcessId,
	ns3__PersonalDataType *Citizen)
{	ns2__PSAAttributeRequestType *_p = soap_new_ns2__PSAAttributeRequestType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__PSAAttributeRequestType::ProcessId = ProcessId;
		_p->ns2__PSAAttributeRequestType::Citizen = Citizen;
	}
	return _p;
}

inline ns2__PSAAttributeRequestType * soap_new_set_ns2__PSAAttributeRequestType(
	struct soap *soap,
	const std::string& ProcessId,
	ns3__PersonalDataType *Citizen,
	std::string *CompanyId,
	std::string *CompanyName)
{	ns2__PSAAttributeRequestType *_p = soap_new_ns2__PSAAttributeRequestType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__PSAAttributeRequestType::ProcessId = ProcessId;
		_p->ns2__PSAAttributeRequestType::Citizen = Citizen;
		_p->ns2__PSAAttributeRequestType::CompanyId = CompanyId;
		_p->ns2__PSAAttributeRequestType::CompanyName = CompanyName;
	}
	return _p;
}

#ifndef soap_write_ns2__PSAAttributeRequestType
#define soap_write_ns2__PSAAttributeRequestType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:PSAAttributeRequestType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__PSAAttributeRequestType * SOAP_FMAC4 soap_get_ns2__PSAAttributeRequestType(struct soap*, ns2__PSAAttributeRequestType *, const char*, const char*);

#ifndef soap_read_ns2__PSAAttributeRequestType
#define soap_read_ns2__PSAAttributeRequestType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__PSAAttributeRequestType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__SingleAttributeRequestType
#define SOAP_TYPE_ACService_ns2__SingleAttributeRequestType (22)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SingleAttributeRequestType(struct soap*, const char*, int, const ns2__SingleAttributeRequestType *, const char*);
SOAP_FMAC3 ns2__SingleAttributeRequestType * SOAP_FMAC4 soap_in_ns2__SingleAttributeRequestType(struct soap*, const char*, ns2__SingleAttributeRequestType *, const char*);
SOAP_FMAC1 ns2__SingleAttributeRequestType * SOAP_FMAC2 soap_instantiate_ns2__SingleAttributeRequestType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__SingleAttributeRequestType * soap_new_ns2__SingleAttributeRequestType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SingleAttributeRequestType(soap, n, NULL, NULL, NULL); }

inline ns2__SingleAttributeRequestType * soap_new_req_ns2__SingleAttributeRequestType(
	struct soap *soap,
	const std::string& ProcessId,
	ns3__PersonalDataType *Citizen,
	ns3__AttributeSupplierType *AttributeSuppliers)
{	ns2__SingleAttributeRequestType *_p = soap_new_ns2__SingleAttributeRequestType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__SingleAttributeRequestType::ProcessId = ProcessId;
		_p->ns2__SingleAttributeRequestType::Citizen = Citizen;
		_p->ns2__SingleAttributeRequestType::AttributeSuppliers = AttributeSuppliers;
	}
	return _p;
}

inline ns2__SingleAttributeRequestType * soap_new_set_ns2__SingleAttributeRequestType(
	struct soap *soap,
	const std::string& ProcessId,
	ns3__PersonalDataType *Citizen,
	ns3__AttributeSupplierType *AttributeSuppliers)
{	ns2__SingleAttributeRequestType *_p = soap_new_ns2__SingleAttributeRequestType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__SingleAttributeRequestType::ProcessId = ProcessId;
		_p->ns2__SingleAttributeRequestType::Citizen = Citizen;
		_p->ns2__SingleAttributeRequestType::AttributeSuppliers = AttributeSuppliers;
	}
	return _p;
}

#ifndef soap_write_ns2__SingleAttributeRequestType
#define soap_write_ns2__SingleAttributeRequestType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:SingleAttributeRequestType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__SingleAttributeRequestType * SOAP_FMAC4 soap_get_ns2__SingleAttributeRequestType(struct soap*, ns2__SingleAttributeRequestType *, const char*, const char*);

#ifndef soap_read_ns2__SingleAttributeRequestType
#define soap_read_ns2__SingleAttributeRequestType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__SingleAttributeRequestType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_ns2__AttributeRequestType
#define SOAP_TYPE_ACService_ns2__AttributeRequestType (21)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__AttributeRequestType(struct soap*, const char*, int, const ns2__AttributeRequestType *, const char*);
SOAP_FMAC3 ns2__AttributeRequestType * SOAP_FMAC4 soap_in_ns2__AttributeRequestType(struct soap*, const char*, ns2__AttributeRequestType *, const char*);
SOAP_FMAC1 ns2__AttributeRequestType * SOAP_FMAC2 soap_instantiate_ns2__AttributeRequestType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__AttributeRequestType * soap_new_ns2__AttributeRequestType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__AttributeRequestType(soap, n, NULL, NULL, NULL); }

inline ns2__AttributeRequestType * soap_new_req_ns2__AttributeRequestType(
	struct soap *soap,
	const std::string& ProcessId,
	ns3__PersonalDataType *Citizen,
	ns2__AttributeSupplierListType *AttributeSuppliers)
{	ns2__AttributeRequestType *_p = soap_new_ns2__AttributeRequestType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__AttributeRequestType::ProcessId = ProcessId;
		_p->ns2__AttributeRequestType::Citizen = Citizen;
		_p->ns2__AttributeRequestType::AttributeSuppliers = AttributeSuppliers;
	}
	return _p;
}

inline ns2__AttributeRequestType * soap_new_set_ns2__AttributeRequestType(
	struct soap *soap,
	const std::string& ProcessId,
	ns3__PersonalDataType *Citizen,
	ns2__AttributeSupplierListType *AttributeSuppliers)
{	ns2__AttributeRequestType *_p = soap_new_ns2__AttributeRequestType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns2__AttributeRequestType::ProcessId = ProcessId;
		_p->ns2__AttributeRequestType::Citizen = Citizen;
		_p->ns2__AttributeRequestType::AttributeSuppliers = AttributeSuppliers;
	}
	return _p;
}

#ifndef soap_write_ns2__AttributeRequestType
#define soap_write_ns2__AttributeRequestType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:AttributeRequestType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__AttributeRequestType * SOAP_FMAC4 soap_get_ns2__AttributeRequestType(struct soap*, ns2__AttributeRequestType *, const char*, const char*);

#ifndef soap_read_ns2__AttributeRequestType
#define soap_read_ns2__AttributeRequestType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_ns2__AttributeRequestType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_xsd__integer
#define SOAP_TYPE_ACService_xsd__integer (20)
#endif

#define soap_default_xsd__integer(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__integer(struct soap*, const std::string *);

#define soap_xsd__integer2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__integer soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__integer soap_instantiate_std__string


#define soap_new_xsd__integer soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__integer
#define soap_write_xsd__integer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_xsd__integer(soap, data), 0) || ACService::soap_put_xsd__integer(soap, data, "xsd:integer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__integer(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__integer
#define soap_read_xsd__integer(soap, data) ( ((data) ? (ACService::soap_default_xsd__integer(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_xsd__integer(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_xsd__date
#define SOAP_TYPE_ACService_xsd__date (19)
#endif

#define soap_default_xsd__date(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__date(struct soap*, const std::string *);

#define soap_xsd__date2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__date(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__date soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__date(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__date soap_instantiate_std__string


#define soap_new_xsd__date soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__date(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__date
#define soap_write_xsd__date(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_xsd__date(soap, data), 0) || ACService::soap_put_xsd__date(soap, data, "xsd:date", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__date(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__date
#define soap_read_xsd__date(soap, data) ( ((data) ? (ACService::soap_default_xsd__date(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_xsd__date(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_xsd__anyURI
#define SOAP_TYPE_ACService_xsd__anyURI (18)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, const std::string *);

#define soap_xsd__anyURI2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__anyURI soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_new_xsd__anyURI soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_xsd__anyURI(soap, data), 0) || ACService::soap_put_xsd__anyURI(soap, data, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( ((data) ? (ACService::soap_default_xsd__anyURI(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_xsd__anyURI(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_xsd__ID
#define SOAP_TYPE_ACService_xsd__ID (17)
#endif

#define soap_default_xsd__ID(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__ID(struct soap*, const std::string *);

#define soap_xsd__ID2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__ID soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__ID(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__ID soap_instantiate_std__string


#define soap_new_xsd__ID soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__ID(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__ID
#define soap_write_xsd__ID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_xsd__ID(soap, data), 0) || ACService::soap_put_xsd__ID(soap, data, "xsd:ID", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__ID(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__ID
#define soap_read_xsd__ID(soap, data) ( ((data) ? (ACService::soap_default_xsd__ID(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_xsd__ID(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_std__string
#define SOAP_TYPE_ACService_std__string (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_std__string(soap, data), 0) || ACService::soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( ((data) ? (ACService::soap_default_std__string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_std__string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_xsd__base64Binary
#define SOAP_TYPE_ACService_xsd__base64Binary (11)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);
SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(
	struct soap *soap)
{	xsd__base64Binary *_p = soap_new_xsd__base64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(
	struct soap *soap,
	unsigned char *__ptr,
	int __size,
	char *id,
	char *type,
	char *options)
{	xsd__base64Binary *_p = soap_new_xsd__base64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->xsd__base64Binary::__ptr = __ptr;
		_p->xsd__base64Binary::__size = __size;
		_p->xsd__base64Binary::id = id;
		_p->xsd__base64Binary::type = type;
		_p->xsd__base64Binary::options = options;
	}
	return _p;
}

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_xsd__base64Binary(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ACService_SOAP_ENV__Fault
#define SOAP_TYPE_ACService_SOAP_ENV__Fault (285)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_SOAP_ENV__Fault(soap, data), 0) || ACService::soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (ACService::soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ACService_SOAP_ENV__Reason
#define SOAP_TYPE_ACService_SOAP_ENV__Reason (284)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_SOAP_ENV__Reason(soap, data), 0) || ACService::soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (ACService::soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ACService_SOAP_ENV__Detail
#define SOAP_TYPE_ACService_SOAP_ENV__Detail (281)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_SOAP_ENV__Detail(soap, data), 0) || ACService::soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (ACService::soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ACService_SOAP_ENV__Code
#define SOAP_TYPE_ACService_SOAP_ENV__Code (279)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_SOAP_ENV__Code(soap, data), 0) || ACService::soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (ACService::soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ACService_SOAP_ENV__Header
#define SOAP_TYPE_ACService_SOAP_ENV__Header (278)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_SOAP_ENV__Header(soap, data), 0) || ACService::soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (ACService::soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_ACService___ns1__Attributes
#define SOAP_TYPE_ACService___ns1__Attributes (277)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Attributes(struct soap*, struct __ns1__Attributes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Attributes(struct soap*, const struct __ns1__Attributes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Attributes(struct soap*, const char*, int, const struct __ns1__Attributes *, const char*);
SOAP_FMAC3 struct __ns1__Attributes * SOAP_FMAC4 soap_in___ns1__Attributes(struct soap*, const char*, struct __ns1__Attributes *, const char*);
SOAP_FMAC1 struct __ns1__Attributes * SOAP_FMAC2 soap_instantiate___ns1__Attributes(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Attributes * soap_new___ns1__Attributes(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Attributes(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Attributes * soap_new_req___ns1__Attributes(
	struct soap *soap)
{	struct __ns1__Attributes *_p = soap_new___ns1__Attributes(soap);
	if (_p)
	{	soap_default___ns1__Attributes(soap, _p);
	}
	return _p;
}

inline struct __ns1__Attributes * soap_new_set___ns1__Attributes(
	struct soap *soap,
	ns2__AttributeRequestType *ns2__AttributeRequest)
{	struct __ns1__Attributes *_p = soap_new___ns1__Attributes(soap);
	if (_p)
	{	soap_default___ns1__Attributes(soap, _p);
		_p->ns2__AttributeRequest = ns2__AttributeRequest;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Attributes(struct soap*, const struct __ns1__Attributes *, const char*, const char*);

#ifndef soap_write___ns1__Attributes
#define soap_write___ns1__Attributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize___ns1__Attributes(soap, data), 0) || ACService::soap_put___ns1__Attributes(soap, data, "-ns1:Attributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Attributes * SOAP_FMAC4 soap_get___ns1__Attributes(struct soap*, struct __ns1__Attributes *, const char*, const char*);

#ifndef soap_read___ns1__Attributes
#define soap_read___ns1__Attributes(soap, data) ( ((data) ? (ACService::soap_default___ns1__Attributes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get___ns1__Attributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService__ns5__union_ObjectType
#define SOAP_TYPE_ACService__ns5__union_ObjectType (159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns5__union_ObjectType(struct soap*, int, const union _ns5__union_ObjectType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns5__union_ObjectType(struct soap*, int, const union _ns5__union_ObjectType *);
SOAP_FMAC3 union _ns5__union_ObjectType * SOAP_FMAC4 soap_in__ns5__union_ObjectType(struct soap*, int*, union _ns5__union_ObjectType *);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ACService_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_ACService_PointerToSOAP_ENV__Reason (287)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || ACService::soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( ((data) ? (ACService::soap_default_PointerToSOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerToSOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ACService_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_ACService_PointerToSOAP_ENV__Detail (286)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || ACService::soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( ((data) ? (ACService::soap_default_PointerToSOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerToSOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ACService_PointerToSOAP_ENV__Code
#define SOAP_TYPE_ACService_PointerToSOAP_ENV__Code (280)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || ACService::soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( ((data) ? (ACService::soap_default_PointerToSOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerToSOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_ACService_PointerTons2__AttributeRequestType
#define SOAP_TYPE_ACService_PointerTons2__AttributeRequestType (274)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__AttributeRequestType(struct soap*, ns2__AttributeRequestType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__AttributeRequestType(struct soap*, const char *, int, ns2__AttributeRequestType *const*, const char *);
SOAP_FMAC3 ns2__AttributeRequestType ** SOAP_FMAC4 soap_in_PointerTons2__AttributeRequestType(struct soap*, const char*, ns2__AttributeRequestType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__AttributeRequestType(struct soap*, ns2__AttributeRequestType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__AttributeRequestType
#define soap_write_PointerTons2__AttributeRequestType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons2__AttributeRequestType(soap, data), 0) || ACService::soap_put_PointerTons2__AttributeRequestType(soap, data, "ns2:AttributeRequestType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__AttributeRequestType ** SOAP_FMAC4 soap_get_PointerTons2__AttributeRequestType(struct soap*, ns2__AttributeRequestType **, const char*, const char*);

#ifndef soap_read_PointerTons2__AttributeRequestType
#define soap_read_PointerTons2__AttributeRequestType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons2__AttributeRequestType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons2__AttributeRequestType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerToxsd__ID
#define SOAP_TYPE_ACService_PointerToxsd__ID (213)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__ID(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__ID(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__ID(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__ID(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__ID
#define soap_write_PointerToxsd__ID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerToxsd__ID(soap, data), 0) || ACService::soap_put_PointerToxsd__ID(soap, data, "xsd:ID", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__ID(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__ID
#define soap_read_PointerToxsd__ID(soap, data) ( ((data) ? (ACService::soap_default_PointerToxsd__ID(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerToxsd__ID(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__EncapsulatedOCSPValueType
#define SOAP_TYPE_ACService_PointerTons6__EncapsulatedOCSPValueType (210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__EncapsulatedOCSPValueType(struct soap*, ns6__EncapsulatedOCSPValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__EncapsulatedOCSPValueType(struct soap*, const char *, int, ns6__EncapsulatedOCSPValueType *const*, const char *);
SOAP_FMAC3 ns6__EncapsulatedOCSPValueType ** SOAP_FMAC4 soap_in_PointerTons6__EncapsulatedOCSPValueType(struct soap*, const char*, ns6__EncapsulatedOCSPValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__EncapsulatedOCSPValueType(struct soap*, ns6__EncapsulatedOCSPValueType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__EncapsulatedOCSPValueType
#define soap_write_PointerTons6__EncapsulatedOCSPValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__EncapsulatedOCSPValueType(soap, data), 0) || ACService::soap_put_PointerTons6__EncapsulatedOCSPValueType(soap, data, "ns6:EncapsulatedOCSPValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__EncapsulatedOCSPValueType ** SOAP_FMAC4 soap_get_PointerTons6__EncapsulatedOCSPValueType(struct soap*, ns6__EncapsulatedOCSPValueType **, const char*, const char*);

#ifndef soap_read_PointerTons6__EncapsulatedOCSPValueType
#define soap_read_PointerTons6__EncapsulatedOCSPValueType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__EncapsulatedOCSPValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__EncapsulatedOCSPValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__EncapsulatedCRLValueType
#define SOAP_TYPE_ACService_PointerTons6__EncapsulatedCRLValueType (208)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__EncapsulatedCRLValueType(struct soap*, ns6__EncapsulatedCRLValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__EncapsulatedCRLValueType(struct soap*, const char *, int, ns6__EncapsulatedCRLValueType *const*, const char *);
SOAP_FMAC3 ns6__EncapsulatedCRLValueType ** SOAP_FMAC4 soap_in_PointerTons6__EncapsulatedCRLValueType(struct soap*, const char*, ns6__EncapsulatedCRLValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__EncapsulatedCRLValueType(struct soap*, ns6__EncapsulatedCRLValueType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__EncapsulatedCRLValueType
#define soap_write_PointerTons6__EncapsulatedCRLValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__EncapsulatedCRLValueType(soap, data), 0) || ACService::soap_put_PointerTons6__EncapsulatedCRLValueType(soap, data, "ns6:EncapsulatedCRLValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__EncapsulatedCRLValueType ** SOAP_FMAC4 soap_get_PointerTons6__EncapsulatedCRLValueType(struct soap*, ns6__EncapsulatedCRLValueType **, const char*, const char*);

#ifndef soap_read_PointerTons6__EncapsulatedCRLValueType
#define soap_read_PointerTons6__EncapsulatedCRLValueType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__EncapsulatedCRLValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__EncapsulatedCRLValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__OCSPValuesType
#define SOAP_TYPE_ACService_PointerTons6__OCSPValuesType (207)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__OCSPValuesType(struct soap*, ns6__OCSPValuesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__OCSPValuesType(struct soap*, const char *, int, ns6__OCSPValuesType *const*, const char *);
SOAP_FMAC3 ns6__OCSPValuesType ** SOAP_FMAC4 soap_in_PointerTons6__OCSPValuesType(struct soap*, const char*, ns6__OCSPValuesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__OCSPValuesType(struct soap*, ns6__OCSPValuesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__OCSPValuesType
#define soap_write_PointerTons6__OCSPValuesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__OCSPValuesType(soap, data), 0) || ACService::soap_put_PointerTons6__OCSPValuesType(soap, data, "ns6:OCSPValuesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__OCSPValuesType ** SOAP_FMAC4 soap_get_PointerTons6__OCSPValuesType(struct soap*, ns6__OCSPValuesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__OCSPValuesType
#define soap_read_PointerTons6__OCSPValuesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__OCSPValuesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__OCSPValuesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CRLValuesType
#define SOAP_TYPE_ACService_PointerTons6__CRLValuesType (206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CRLValuesType(struct soap*, ns6__CRLValuesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CRLValuesType(struct soap*, const char *, int, ns6__CRLValuesType *const*, const char *);
SOAP_FMAC3 ns6__CRLValuesType ** SOAP_FMAC4 soap_in_PointerTons6__CRLValuesType(struct soap*, const char*, ns6__CRLValuesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CRLValuesType(struct soap*, ns6__CRLValuesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CRLValuesType
#define soap_write_PointerTons6__CRLValuesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CRLValuesType(soap, data), 0) || ACService::soap_put_PointerTons6__CRLValuesType(soap, data, "ns6:CRLValuesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CRLValuesType ** SOAP_FMAC4 soap_get_PointerTons6__CRLValuesType(struct soap*, ns6__CRLValuesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CRLValuesType
#define soap_read_PointerTons6__CRLValuesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CRLValuesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CRLValuesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__EncapsulatedX509CertificateType
#define SOAP_TYPE_ACService_PointerTons6__EncapsulatedX509CertificateType (204)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__EncapsulatedX509CertificateType(struct soap*, ns6__EncapsulatedX509CertificateType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__EncapsulatedX509CertificateType(struct soap*, const char *, int, ns6__EncapsulatedX509CertificateType *const*, const char *);
SOAP_FMAC3 ns6__EncapsulatedX509CertificateType ** SOAP_FMAC4 soap_in_PointerTons6__EncapsulatedX509CertificateType(struct soap*, const char*, ns6__EncapsulatedX509CertificateType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__EncapsulatedX509CertificateType(struct soap*, ns6__EncapsulatedX509CertificateType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__EncapsulatedX509CertificateType
#define soap_write_PointerTons6__EncapsulatedX509CertificateType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__EncapsulatedX509CertificateType(soap, data), 0) || ACService::soap_put_PointerTons6__EncapsulatedX509CertificateType(soap, data, "ns6:EncapsulatedX509CertificateType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__EncapsulatedX509CertificateType ** SOAP_FMAC4 soap_get_PointerTons6__EncapsulatedX509CertificateType(struct soap*, ns6__EncapsulatedX509CertificateType **, const char*, const char*);

#ifndef soap_read_PointerTons6__EncapsulatedX509CertificateType
#define soap_read_PointerTons6__EncapsulatedX509CertificateType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__EncapsulatedX509CertificateType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__EncapsulatedX509CertificateType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__ResponderIDType
#define SOAP_TYPE_ACService_PointerTons6__ResponderIDType (203)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__ResponderIDType(struct soap*, ns6__ResponderIDType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__ResponderIDType(struct soap*, const char *, int, ns6__ResponderIDType *const*, const char *);
SOAP_FMAC3 ns6__ResponderIDType ** SOAP_FMAC4 soap_in_PointerTons6__ResponderIDType(struct soap*, const char*, ns6__ResponderIDType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__ResponderIDType(struct soap*, ns6__ResponderIDType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__ResponderIDType
#define soap_write_PointerTons6__ResponderIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__ResponderIDType(soap, data), 0) || ACService::soap_put_PointerTons6__ResponderIDType(soap, data, "ns6:ResponderIDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__ResponderIDType ** SOAP_FMAC4 soap_get_PointerTons6__ResponderIDType(struct soap*, ns6__ResponderIDType **, const char*, const char*);

#ifndef soap_read_PointerTons6__ResponderIDType
#define soap_read_PointerTons6__ResponderIDType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__ResponderIDType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__ResponderIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__OCSPIdentifierType
#define SOAP_TYPE_ACService_PointerTons6__OCSPIdentifierType (202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__OCSPIdentifierType(struct soap*, ns6__OCSPIdentifierType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__OCSPIdentifierType(struct soap*, const char *, int, ns6__OCSPIdentifierType *const*, const char *);
SOAP_FMAC3 ns6__OCSPIdentifierType ** SOAP_FMAC4 soap_in_PointerTons6__OCSPIdentifierType(struct soap*, const char*, ns6__OCSPIdentifierType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__OCSPIdentifierType(struct soap*, ns6__OCSPIdentifierType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__OCSPIdentifierType
#define soap_write_PointerTons6__OCSPIdentifierType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__OCSPIdentifierType(soap, data), 0) || ACService::soap_put_PointerTons6__OCSPIdentifierType(soap, data, "ns6:OCSPIdentifierType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__OCSPIdentifierType ** SOAP_FMAC4 soap_get_PointerTons6__OCSPIdentifierType(struct soap*, ns6__OCSPIdentifierType **, const char*, const char*);

#ifndef soap_read_PointerTons6__OCSPIdentifierType
#define soap_read_PointerTons6__OCSPIdentifierType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__OCSPIdentifierType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__OCSPIdentifierType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__OCSPRefType
#define SOAP_TYPE_ACService_PointerTons6__OCSPRefType (200)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__OCSPRefType(struct soap*, ns6__OCSPRefType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__OCSPRefType(struct soap*, const char *, int, ns6__OCSPRefType *const*, const char *);
SOAP_FMAC3 ns6__OCSPRefType ** SOAP_FMAC4 soap_in_PointerTons6__OCSPRefType(struct soap*, const char*, ns6__OCSPRefType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__OCSPRefType(struct soap*, ns6__OCSPRefType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__OCSPRefType
#define soap_write_PointerTons6__OCSPRefType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__OCSPRefType(soap, data), 0) || ACService::soap_put_PointerTons6__OCSPRefType(soap, data, "ns6:OCSPRefType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__OCSPRefType ** SOAP_FMAC4 soap_get_PointerTons6__OCSPRefType(struct soap*, ns6__OCSPRefType **, const char*, const char*);

#ifndef soap_read_PointerTons6__OCSPRefType
#define soap_read_PointerTons6__OCSPRefType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__OCSPRefType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__OCSPRefType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CRLIdentifierType
#define SOAP_TYPE_ACService_PointerTons6__CRLIdentifierType (199)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CRLIdentifierType(struct soap*, ns6__CRLIdentifierType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CRLIdentifierType(struct soap*, const char *, int, ns6__CRLIdentifierType *const*, const char *);
SOAP_FMAC3 ns6__CRLIdentifierType ** SOAP_FMAC4 soap_in_PointerTons6__CRLIdentifierType(struct soap*, const char*, ns6__CRLIdentifierType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CRLIdentifierType(struct soap*, ns6__CRLIdentifierType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CRLIdentifierType
#define soap_write_PointerTons6__CRLIdentifierType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CRLIdentifierType(soap, data), 0) || ACService::soap_put_PointerTons6__CRLIdentifierType(soap, data, "ns6:CRLIdentifierType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CRLIdentifierType ** SOAP_FMAC4 soap_get_PointerTons6__CRLIdentifierType(struct soap*, ns6__CRLIdentifierType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CRLIdentifierType
#define soap_read_PointerTons6__CRLIdentifierType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CRLIdentifierType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CRLIdentifierType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__DigestAlgAndValueType
#define SOAP_TYPE_ACService_PointerTons6__DigestAlgAndValueType (198)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__DigestAlgAndValueType(struct soap*, ns6__DigestAlgAndValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__DigestAlgAndValueType(struct soap*, const char *, int, ns6__DigestAlgAndValueType *const*, const char *);
SOAP_FMAC3 ns6__DigestAlgAndValueType ** SOAP_FMAC4 soap_in_PointerTons6__DigestAlgAndValueType(struct soap*, const char*, ns6__DigestAlgAndValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__DigestAlgAndValueType(struct soap*, ns6__DigestAlgAndValueType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__DigestAlgAndValueType
#define soap_write_PointerTons6__DigestAlgAndValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__DigestAlgAndValueType(soap, data), 0) || ACService::soap_put_PointerTons6__DigestAlgAndValueType(soap, data, "ns6:DigestAlgAndValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__DigestAlgAndValueType ** SOAP_FMAC4 soap_get_PointerTons6__DigestAlgAndValueType(struct soap*, ns6__DigestAlgAndValueType **, const char*, const char*);

#ifndef soap_read_PointerTons6__DigestAlgAndValueType
#define soap_read_PointerTons6__DigestAlgAndValueType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__DigestAlgAndValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__DigestAlgAndValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CRLRefType
#define SOAP_TYPE_ACService_PointerTons6__CRLRefType (196)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CRLRefType(struct soap*, ns6__CRLRefType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CRLRefType(struct soap*, const char *, int, ns6__CRLRefType *const*, const char *);
SOAP_FMAC3 ns6__CRLRefType ** SOAP_FMAC4 soap_in_PointerTons6__CRLRefType(struct soap*, const char*, ns6__CRLRefType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CRLRefType(struct soap*, ns6__CRLRefType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CRLRefType
#define soap_write_PointerTons6__CRLRefType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CRLRefType(soap, data), 0) || ACService::soap_put_PointerTons6__CRLRefType(soap, data, "ns6:CRLRefType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CRLRefType ** SOAP_FMAC4 soap_get_PointerTons6__CRLRefType(struct soap*, ns6__CRLRefType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CRLRefType
#define soap_read_PointerTons6__CRLRefType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CRLRefType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CRLRefType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__OCSPRefsType
#define SOAP_TYPE_ACService_PointerTons6__OCSPRefsType (195)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__OCSPRefsType(struct soap*, ns6__OCSPRefsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__OCSPRefsType(struct soap*, const char *, int, ns6__OCSPRefsType *const*, const char *);
SOAP_FMAC3 ns6__OCSPRefsType ** SOAP_FMAC4 soap_in_PointerTons6__OCSPRefsType(struct soap*, const char*, ns6__OCSPRefsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__OCSPRefsType(struct soap*, ns6__OCSPRefsType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__OCSPRefsType
#define soap_write_PointerTons6__OCSPRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__OCSPRefsType(soap, data), 0) || ACService::soap_put_PointerTons6__OCSPRefsType(soap, data, "ns6:OCSPRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__OCSPRefsType ** SOAP_FMAC4 soap_get_PointerTons6__OCSPRefsType(struct soap*, ns6__OCSPRefsType **, const char*, const char*);

#ifndef soap_read_PointerTons6__OCSPRefsType
#define soap_read_PointerTons6__OCSPRefsType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__OCSPRefsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__OCSPRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CRLRefsType
#define SOAP_TYPE_ACService_PointerTons6__CRLRefsType (194)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CRLRefsType(struct soap*, ns6__CRLRefsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CRLRefsType(struct soap*, const char *, int, ns6__CRLRefsType *const*, const char *);
SOAP_FMAC3 ns6__CRLRefsType ** SOAP_FMAC4 soap_in_PointerTons6__CRLRefsType(struct soap*, const char*, ns6__CRLRefsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CRLRefsType(struct soap*, ns6__CRLRefsType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CRLRefsType
#define soap_write_PointerTons6__CRLRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CRLRefsType(soap, data), 0) || ACService::soap_put_PointerTons6__CRLRefsType(soap, data, "ns6:CRLRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CRLRefsType ** SOAP_FMAC4 soap_get_PointerTons6__CRLRefsType(struct soap*, ns6__CRLRefsType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CRLRefsType
#define soap_read_PointerTons6__CRLRefsType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CRLRefsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CRLRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CertRefsType
#define SOAP_TYPE_ACService_PointerTons6__CertRefsType (192)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CertRefsType(struct soap*, ns6__CertRefsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CertRefsType(struct soap*, const char *, int, ns6__CertRefsType *const*, const char *);
SOAP_FMAC3 ns6__CertRefsType ** SOAP_FMAC4 soap_in_PointerTons6__CertRefsType(struct soap*, const char*, ns6__CertRefsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CertRefsType(struct soap*, ns6__CertRefsType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CertRefsType
#define soap_write_PointerTons6__CertRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CertRefsType(soap, data), 0) || ACService::soap_put_PointerTons6__CertRefsType(soap, data, "ns6:CertRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CertRefsType ** SOAP_FMAC4 soap_get_PointerTons6__CertRefsType(struct soap*, ns6__CertRefsType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CertRefsType
#define soap_read_PointerTons6__CertRefsType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CertRefsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CertRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__ArchiveTimeStampType
#define SOAP_TYPE_ACService_PointerTons6__ArchiveTimeStampType (191)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__ArchiveTimeStampType(struct soap*, ns6__ArchiveTimeStampType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__ArchiveTimeStampType(struct soap*, const char *, int, ns6__ArchiveTimeStampType *const*, const char *);
SOAP_FMAC3 ns6__ArchiveTimeStampType ** SOAP_FMAC4 soap_in_PointerTons6__ArchiveTimeStampType(struct soap*, const char*, ns6__ArchiveTimeStampType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__ArchiveTimeStampType(struct soap*, ns6__ArchiveTimeStampType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__ArchiveTimeStampType
#define soap_write_PointerTons6__ArchiveTimeStampType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__ArchiveTimeStampType(soap, data), 0) || ACService::soap_put_PointerTons6__ArchiveTimeStampType(soap, data, "ns6:ArchiveTimeStampType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__ArchiveTimeStampType ** SOAP_FMAC4 soap_get_PointerTons6__ArchiveTimeStampType(struct soap*, ns6__ArchiveTimeStampType **, const char*, const char*);

#ifndef soap_read_PointerTons6__ArchiveTimeStampType
#define soap_read_PointerTons6__ArchiveTimeStampType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__ArchiveTimeStampType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__ArchiveTimeStampType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__RevocationValuesType
#define SOAP_TYPE_ACService_PointerTons6__RevocationValuesType (190)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__RevocationValuesType(struct soap*, ns6__RevocationValuesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__RevocationValuesType(struct soap*, const char *, int, ns6__RevocationValuesType *const*, const char *);
SOAP_FMAC3 ns6__RevocationValuesType ** SOAP_FMAC4 soap_in_PointerTons6__RevocationValuesType(struct soap*, const char*, ns6__RevocationValuesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__RevocationValuesType(struct soap*, ns6__RevocationValuesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__RevocationValuesType
#define soap_write_PointerTons6__RevocationValuesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__RevocationValuesType(soap, data), 0) || ACService::soap_put_PointerTons6__RevocationValuesType(soap, data, "ns6:RevocationValuesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__RevocationValuesType ** SOAP_FMAC4 soap_get_PointerTons6__RevocationValuesType(struct soap*, ns6__RevocationValuesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__RevocationValuesType
#define soap_read_PointerTons6__RevocationValuesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__RevocationValuesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__RevocationValuesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CertificateValuesType
#define SOAP_TYPE_ACService_PointerTons6__CertificateValuesType (189)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CertificateValuesType(struct soap*, ns6__CertificateValuesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CertificateValuesType(struct soap*, const char *, int, ns6__CertificateValuesType *const*, const char *);
SOAP_FMAC3 ns6__CertificateValuesType ** SOAP_FMAC4 soap_in_PointerTons6__CertificateValuesType(struct soap*, const char*, ns6__CertificateValuesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CertificateValuesType(struct soap*, ns6__CertificateValuesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CertificateValuesType
#define soap_write_PointerTons6__CertificateValuesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CertificateValuesType(soap, data), 0) || ACService::soap_put_PointerTons6__CertificateValuesType(soap, data, "ns6:CertificateValuesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CertificateValuesType ** SOAP_FMAC4 soap_get_PointerTons6__CertificateValuesType(struct soap*, ns6__CertificateValuesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CertificateValuesType
#define soap_read_PointerTons6__CertificateValuesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CertificateValuesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CertificateValuesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__SigAndRefsTimeStampType
#define SOAP_TYPE_ACService_PointerTons6__SigAndRefsTimeStampType (188)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__SigAndRefsTimeStampType(struct soap*, ns6__SigAndRefsTimeStampType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__SigAndRefsTimeStampType(struct soap*, const char *, int, ns6__SigAndRefsTimeStampType *const*, const char *);
SOAP_FMAC3 ns6__SigAndRefsTimeStampType ** SOAP_FMAC4 soap_in_PointerTons6__SigAndRefsTimeStampType(struct soap*, const char*, ns6__SigAndRefsTimeStampType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__SigAndRefsTimeStampType(struct soap*, ns6__SigAndRefsTimeStampType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__SigAndRefsTimeStampType
#define soap_write_PointerTons6__SigAndRefsTimeStampType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__SigAndRefsTimeStampType(soap, data), 0) || ACService::soap_put_PointerTons6__SigAndRefsTimeStampType(soap, data, "ns6:SigAndRefsTimeStampType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SigAndRefsTimeStampType ** SOAP_FMAC4 soap_get_PointerTons6__SigAndRefsTimeStampType(struct soap*, ns6__SigAndRefsTimeStampType **, const char*, const char*);

#ifndef soap_read_PointerTons6__SigAndRefsTimeStampType
#define soap_read_PointerTons6__SigAndRefsTimeStampType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__SigAndRefsTimeStampType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__SigAndRefsTimeStampType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CompleteRevocationRefsType
#define SOAP_TYPE_ACService_PointerTons6__CompleteRevocationRefsType (187)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CompleteRevocationRefsType(struct soap*, ns6__CompleteRevocationRefsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CompleteRevocationRefsType(struct soap*, const char *, int, ns6__CompleteRevocationRefsType *const*, const char *);
SOAP_FMAC3 ns6__CompleteRevocationRefsType ** SOAP_FMAC4 soap_in_PointerTons6__CompleteRevocationRefsType(struct soap*, const char*, ns6__CompleteRevocationRefsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CompleteRevocationRefsType(struct soap*, ns6__CompleteRevocationRefsType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CompleteRevocationRefsType
#define soap_write_PointerTons6__CompleteRevocationRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CompleteRevocationRefsType(soap, data), 0) || ACService::soap_put_PointerTons6__CompleteRevocationRefsType(soap, data, "ns6:CompleteRevocationRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CompleteRevocationRefsType ** SOAP_FMAC4 soap_get_PointerTons6__CompleteRevocationRefsType(struct soap*, ns6__CompleteRevocationRefsType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CompleteRevocationRefsType
#define soap_read_PointerTons6__CompleteRevocationRefsType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CompleteRevocationRefsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CompleteRevocationRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CompleteCertificateRefsType
#define SOAP_TYPE_ACService_PointerTons6__CompleteCertificateRefsType (186)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CompleteCertificateRefsType(struct soap*, ns6__CompleteCertificateRefsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CompleteCertificateRefsType(struct soap*, const char *, int, ns6__CompleteCertificateRefsType *const*, const char *);
SOAP_FMAC3 ns6__CompleteCertificateRefsType ** SOAP_FMAC4 soap_in_PointerTons6__CompleteCertificateRefsType(struct soap*, const char*, ns6__CompleteCertificateRefsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CompleteCertificateRefsType(struct soap*, ns6__CompleteCertificateRefsType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CompleteCertificateRefsType
#define soap_write_PointerTons6__CompleteCertificateRefsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CompleteCertificateRefsType(soap, data), 0) || ACService::soap_put_PointerTons6__CompleteCertificateRefsType(soap, data, "ns6:CompleteCertificateRefsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CompleteCertificateRefsType ** SOAP_FMAC4 soap_get_PointerTons6__CompleteCertificateRefsType(struct soap*, ns6__CompleteCertificateRefsType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CompleteCertificateRefsType
#define soap_read_PointerTons6__CompleteCertificateRefsType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CompleteCertificateRefsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CompleteCertificateRefsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__SignatureTimeStampType
#define SOAP_TYPE_ACService_PointerTons6__SignatureTimeStampType (185)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__SignatureTimeStampType(struct soap*, ns6__SignatureTimeStampType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__SignatureTimeStampType(struct soap*, const char *, int, ns6__SignatureTimeStampType *const*, const char *);
SOAP_FMAC3 ns6__SignatureTimeStampType ** SOAP_FMAC4 soap_in_PointerTons6__SignatureTimeStampType(struct soap*, const char*, ns6__SignatureTimeStampType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__SignatureTimeStampType(struct soap*, ns6__SignatureTimeStampType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__SignatureTimeStampType
#define soap_write_PointerTons6__SignatureTimeStampType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__SignatureTimeStampType(soap, data), 0) || ACService::soap_put_PointerTons6__SignatureTimeStampType(soap, data, "ns6:SignatureTimeStampType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SignatureTimeStampType ** SOAP_FMAC4 soap_get_PointerTons6__SignatureTimeStampType(struct soap*, ns6__SignatureTimeStampType **, const char*, const char*);

#ifndef soap_read_PointerTons6__SignatureTimeStampType
#define soap_read_PointerTons6__SignatureTimeStampType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__SignatureTimeStampType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__SignatureTimeStampType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CounterSignatureType
#define SOAP_TYPE_ACService_PointerTons6__CounterSignatureType (184)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CounterSignatureType(struct soap*, ns6__CounterSignatureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CounterSignatureType(struct soap*, const char *, int, ns6__CounterSignatureType *const*, const char *);
SOAP_FMAC3 ns6__CounterSignatureType ** SOAP_FMAC4 soap_in_PointerTons6__CounterSignatureType(struct soap*, const char*, ns6__CounterSignatureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CounterSignatureType(struct soap*, ns6__CounterSignatureType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CounterSignatureType
#define soap_write_PointerTons6__CounterSignatureType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CounterSignatureType(soap, data), 0) || ACService::soap_put_PointerTons6__CounterSignatureType(soap, data, "ns6:CounterSignatureType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CounterSignatureType ** SOAP_FMAC4 soap_get_PointerTons6__CounterSignatureType(struct soap*, ns6__CounterSignatureType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CounterSignatureType
#define soap_read_PointerTons6__CounterSignatureType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CounterSignatureType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CounterSignatureType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__UnsignedSignaturePropertiesType
#define SOAP_TYPE_ACService_PointerTons6__UnsignedSignaturePropertiesType (183)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__UnsignedSignaturePropertiesType(struct soap*, ns6__UnsignedSignaturePropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__UnsignedSignaturePropertiesType(struct soap*, const char *, int, ns6__UnsignedSignaturePropertiesType *const*, const char *);
SOAP_FMAC3 ns6__UnsignedSignaturePropertiesType ** SOAP_FMAC4 soap_in_PointerTons6__UnsignedSignaturePropertiesType(struct soap*, const char*, ns6__UnsignedSignaturePropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__UnsignedSignaturePropertiesType(struct soap*, ns6__UnsignedSignaturePropertiesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__UnsignedSignaturePropertiesType
#define soap_write_PointerTons6__UnsignedSignaturePropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__UnsignedSignaturePropertiesType(soap, data), 0) || ACService::soap_put_PointerTons6__UnsignedSignaturePropertiesType(soap, data, "ns6:UnsignedSignaturePropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__UnsignedSignaturePropertiesType ** SOAP_FMAC4 soap_get_PointerTons6__UnsignedSignaturePropertiesType(struct soap*, ns6__UnsignedSignaturePropertiesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__UnsignedSignaturePropertiesType
#define soap_read_PointerTons6__UnsignedSignaturePropertiesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__UnsignedSignaturePropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__UnsignedSignaturePropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__ClaimedRoleType
#define SOAP_TYPE_ACService_PointerTons6__ClaimedRoleType (181)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__ClaimedRoleType(struct soap*, ns6__ClaimedRoleType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__ClaimedRoleType(struct soap*, const char *, int, ns6__ClaimedRoleType *const*, const char *);
SOAP_FMAC3 ns6__ClaimedRoleType ** SOAP_FMAC4 soap_in_PointerTons6__ClaimedRoleType(struct soap*, const char*, ns6__ClaimedRoleType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__ClaimedRoleType(struct soap*, ns6__ClaimedRoleType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__ClaimedRoleType
#define soap_write_PointerTons6__ClaimedRoleType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__ClaimedRoleType(soap, data), 0) || ACService::soap_put_PointerTons6__ClaimedRoleType(soap, data, "ns6:ClaimedRoleType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__ClaimedRoleType ** SOAP_FMAC4 soap_get_PointerTons6__ClaimedRoleType(struct soap*, ns6__ClaimedRoleType **, const char*, const char*);

#ifndef soap_read_PointerTons6__ClaimedRoleType
#define soap_read_PointerTons6__ClaimedRoleType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__ClaimedRoleType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__ClaimedRoleType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__ClaimedRolesListType
#define SOAP_TYPE_ACService_PointerTons6__ClaimedRolesListType (180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__ClaimedRolesListType(struct soap*, ns6__ClaimedRolesListType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__ClaimedRolesListType(struct soap*, const char *, int, ns6__ClaimedRolesListType *const*, const char *);
SOAP_FMAC3 ns6__ClaimedRolesListType ** SOAP_FMAC4 soap_in_PointerTons6__ClaimedRolesListType(struct soap*, const char*, ns6__ClaimedRolesListType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__ClaimedRolesListType(struct soap*, ns6__ClaimedRolesListType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__ClaimedRolesListType
#define soap_write_PointerTons6__ClaimedRolesListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__ClaimedRolesListType(soap, data), 0) || ACService::soap_put_PointerTons6__ClaimedRolesListType(soap, data, "ns6:ClaimedRolesListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__ClaimedRolesListType ** SOAP_FMAC4 soap_get_PointerTons6__ClaimedRolesListType(struct soap*, ns6__ClaimedRolesListType **, const char*, const char*);

#ifndef soap_read_PointerTons6__ClaimedRolesListType
#define soap_read_PointerTons6__ClaimedRolesListType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__ClaimedRolesListType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__ClaimedRolesListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__IssuerSerialType
#define SOAP_TYPE_ACService_PointerTons6__IssuerSerialType (179)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__IssuerSerialType(struct soap*, ns6__IssuerSerialType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__IssuerSerialType(struct soap*, const char *, int, ns6__IssuerSerialType *const*, const char *);
SOAP_FMAC3 ns6__IssuerSerialType ** SOAP_FMAC4 soap_in_PointerTons6__IssuerSerialType(struct soap*, const char*, ns6__IssuerSerialType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__IssuerSerialType(struct soap*, ns6__IssuerSerialType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__IssuerSerialType
#define soap_write_PointerTons6__IssuerSerialType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__IssuerSerialType(soap, data), 0) || ACService::soap_put_PointerTons6__IssuerSerialType(soap, data, "ns6:IssuerSerialType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__IssuerSerialType ** SOAP_FMAC4 soap_get_PointerTons6__IssuerSerialType(struct soap*, ns6__IssuerSerialType **, const char*, const char*);

#ifndef soap_read_PointerTons6__IssuerSerialType
#define soap_read_PointerTons6__IssuerSerialType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__IssuerSerialType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__IssuerSerialType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CertDigestType
#define SOAP_TYPE_ACService_PointerTons6__CertDigestType (178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CertDigestType(struct soap*, ns6__CertDigestType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CertDigestType(struct soap*, const char *, int, ns6__CertDigestType *const*, const char *);
SOAP_FMAC3 ns6__CertDigestType ** SOAP_FMAC4 soap_in_PointerTons6__CertDigestType(struct soap*, const char*, ns6__CertDigestType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CertDigestType(struct soap*, ns6__CertDigestType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CertDigestType
#define soap_write_PointerTons6__CertDigestType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CertDigestType(soap, data), 0) || ACService::soap_put_PointerTons6__CertDigestType(soap, data, "ns6:CertDigestType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CertDigestType ** SOAP_FMAC4 soap_get_PointerTons6__CertDigestType(struct soap*, ns6__CertDigestType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CertDigestType
#define soap_read_PointerTons6__CertDigestType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CertDigestType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CertDigestType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__CertType
#define SOAP_TYPE_ACService_PointerTons6__CertType (177)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__CertType(struct soap*, ns6__CertType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__CertType(struct soap*, const char *, int, ns6__CertType *const*, const char *);
SOAP_FMAC3 ns6__CertType ** SOAP_FMAC4 soap_in_PointerTons6__CertType(struct soap*, const char*, ns6__CertType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__CertType(struct soap*, ns6__CertType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__CertType
#define soap_write_PointerTons6__CertType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__CertType(soap, data), 0) || ACService::soap_put_PointerTons6__CertType(soap, data, "ns6:CertType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__CertType ** SOAP_FMAC4 soap_get_PointerTons6__CertType(struct soap*, ns6__CertType **, const char*, const char*);

#ifndef soap_read_PointerTons6__CertType
#define soap_read_PointerTons6__CertType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__CertType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__CertType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__SignerRoleType
#define SOAP_TYPE_ACService_PointerTons6__SignerRoleType (176)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__SignerRoleType(struct soap*, ns6__SignerRoleType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__SignerRoleType(struct soap*, const char *, int, ns6__SignerRoleType *const*, const char *);
SOAP_FMAC3 ns6__SignerRoleType ** SOAP_FMAC4 soap_in_PointerTons6__SignerRoleType(struct soap*, const char*, ns6__SignerRoleType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__SignerRoleType(struct soap*, ns6__SignerRoleType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__SignerRoleType
#define soap_write_PointerTons6__SignerRoleType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__SignerRoleType(soap, data), 0) || ACService::soap_put_PointerTons6__SignerRoleType(soap, data, "ns6:SignerRoleType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SignerRoleType ** SOAP_FMAC4 soap_get_PointerTons6__SignerRoleType(struct soap*, ns6__SignerRoleType **, const char*, const char*);

#ifndef soap_read_PointerTons6__SignerRoleType
#define soap_read_PointerTons6__SignerRoleType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__SignerRoleType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__SignerRoleType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__SigningCertificateType
#define SOAP_TYPE_ACService_PointerTons6__SigningCertificateType (175)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__SigningCertificateType(struct soap*, ns6__SigningCertificateType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__SigningCertificateType(struct soap*, const char *, int, ns6__SigningCertificateType *const*, const char *);
SOAP_FMAC3 ns6__SigningCertificateType ** SOAP_FMAC4 soap_in_PointerTons6__SigningCertificateType(struct soap*, const char*, ns6__SigningCertificateType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__SigningCertificateType(struct soap*, ns6__SigningCertificateType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__SigningCertificateType
#define soap_write_PointerTons6__SigningCertificateType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__SigningCertificateType(soap, data), 0) || ACService::soap_put_PointerTons6__SigningCertificateType(soap, data, "ns6:SigningCertificateType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SigningCertificateType ** SOAP_FMAC4 soap_get_PointerTons6__SigningCertificateType(struct soap*, ns6__SigningCertificateType **, const char*, const char*);

#ifndef soap_read_PointerTons6__SigningCertificateType
#define soap_read_PointerTons6__SigningCertificateType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__SigningCertificateType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__SigningCertificateType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__SignedSignaturePropertiesType
#define SOAP_TYPE_ACService_PointerTons6__SignedSignaturePropertiesType (174)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__SignedSignaturePropertiesType(struct soap*, ns6__SignedSignaturePropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__SignedSignaturePropertiesType(struct soap*, const char *, int, ns6__SignedSignaturePropertiesType *const*, const char *);
SOAP_FMAC3 ns6__SignedSignaturePropertiesType ** SOAP_FMAC4 soap_in_PointerTons6__SignedSignaturePropertiesType(struct soap*, const char*, ns6__SignedSignaturePropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__SignedSignaturePropertiesType(struct soap*, ns6__SignedSignaturePropertiesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__SignedSignaturePropertiesType
#define soap_write_PointerTons6__SignedSignaturePropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__SignedSignaturePropertiesType(soap, data), 0) || ACService::soap_put_PointerTons6__SignedSignaturePropertiesType(soap, data, "ns6:SignedSignaturePropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SignedSignaturePropertiesType ** SOAP_FMAC4 soap_get_PointerTons6__SignedSignaturePropertiesType(struct soap*, ns6__SignedSignaturePropertiesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__SignedSignaturePropertiesType
#define soap_read_PointerTons6__SignedSignaturePropertiesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__SignedSignaturePropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__SignedSignaturePropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__UnsignedPropertiesType
#define SOAP_TYPE_ACService_PointerTons6__UnsignedPropertiesType (173)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__UnsignedPropertiesType(struct soap*, ns6__UnsignedPropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__UnsignedPropertiesType(struct soap*, const char *, int, ns6__UnsignedPropertiesType *const*, const char *);
SOAP_FMAC3 ns6__UnsignedPropertiesType ** SOAP_FMAC4 soap_in_PointerTons6__UnsignedPropertiesType(struct soap*, const char*, ns6__UnsignedPropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__UnsignedPropertiesType(struct soap*, ns6__UnsignedPropertiesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__UnsignedPropertiesType
#define soap_write_PointerTons6__UnsignedPropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__UnsignedPropertiesType(soap, data), 0) || ACService::soap_put_PointerTons6__UnsignedPropertiesType(soap, data, "ns6:UnsignedPropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__UnsignedPropertiesType ** SOAP_FMAC4 soap_get_PointerTons6__UnsignedPropertiesType(struct soap*, ns6__UnsignedPropertiesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__UnsignedPropertiesType
#define soap_read_PointerTons6__UnsignedPropertiesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__UnsignedPropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__UnsignedPropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__SignedPropertiesType
#define SOAP_TYPE_ACService_PointerTons6__SignedPropertiesType (172)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__SignedPropertiesType(struct soap*, ns6__SignedPropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__SignedPropertiesType(struct soap*, const char *, int, ns6__SignedPropertiesType *const*, const char *);
SOAP_FMAC3 ns6__SignedPropertiesType ** SOAP_FMAC4 soap_in_PointerTons6__SignedPropertiesType(struct soap*, const char*, ns6__SignedPropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__SignedPropertiesType(struct soap*, ns6__SignedPropertiesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__SignedPropertiesType
#define soap_write_PointerTons6__SignedPropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__SignedPropertiesType(soap, data), 0) || ACService::soap_put_PointerTons6__SignedPropertiesType(soap, data, "ns6:SignedPropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__SignedPropertiesType ** SOAP_FMAC4 soap_get_PointerTons6__SignedPropertiesType(struct soap*, ns6__SignedPropertiesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__SignedPropertiesType
#define soap_read_PointerTons6__SignedPropertiesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__SignedPropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__SignedPropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons4__ResponseCodeMessage
#define SOAP_TYPE_ACService_PointerTons4__ResponseCodeMessage (171)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons4__ResponseCodeMessage(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons4__ResponseCodeMessage(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTons4__ResponseCodeMessage(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons4__ResponseCodeMessage(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTons4__ResponseCodeMessage
#define soap_write_PointerTons4__ResponseCodeMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons4__ResponseCodeMessage(soap, data), 0) || ACService::soap_put_PointerTons4__ResponseCodeMessage(soap, data, "ns4:ResponseCodeMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTons4__ResponseCodeMessage(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTons4__ResponseCodeMessage
#define soap_read_PointerTons4__ResponseCodeMessage(soap, data) ( ((data) ? (ACService::soap_default_PointerTons4__ResponseCodeMessage(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons4__ResponseCodeMessage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons4__SubAttributeValueType
#define SOAP_TYPE_ACService_PointerTons4__SubAttributeValueType (170)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons4__SubAttributeValueType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons4__SubAttributeValueType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTons4__SubAttributeValueType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons4__SubAttributeValueType(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTons4__SubAttributeValueType
#define soap_write_PointerTons4__SubAttributeValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons4__SubAttributeValueType(soap, data), 0) || ACService::soap_put_PointerTons4__SubAttributeValueType(soap, data, "ns4:SubAttributeValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTons4__SubAttributeValueType(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTons4__SubAttributeValueType
#define soap_read_PointerTons4__SubAttributeValueType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons4__SubAttributeValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons4__SubAttributeValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__SubAttributeType
#define SOAP_TYPE_ACService_PointerTons3__SubAttributeType (168)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__SubAttributeType(struct soap*, ns3__SubAttributeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__SubAttributeType(struct soap*, const char *, int, ns3__SubAttributeType *const*, const char *);
SOAP_FMAC3 ns3__SubAttributeType ** SOAP_FMAC4 soap_in_PointerTons3__SubAttributeType(struct soap*, const char*, ns3__SubAttributeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__SubAttributeType(struct soap*, ns3__SubAttributeType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__SubAttributeType
#define soap_write_PointerTons3__SubAttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__SubAttributeType(soap, data), 0) || ACService::soap_put_PointerTons3__SubAttributeType(soap, data, "ns3:SubAttributeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__SubAttributeType ** SOAP_FMAC4 soap_get_PointerTons3__SubAttributeType(struct soap*, ns3__SubAttributeType **, const char*, const char*);

#ifndef soap_read_PointerTons3__SubAttributeType
#define soap_read_PointerTons3__SubAttributeType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__SubAttributeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__SubAttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__SubAttributeListType
#define SOAP_TYPE_ACService_PointerTons3__SubAttributeListType (166)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__SubAttributeListType(struct soap*, ns3__SubAttributeListType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__SubAttributeListType(struct soap*, const char *, int, ns3__SubAttributeListType *const*, const char *);
SOAP_FMAC3 ns3__SubAttributeListType ** SOAP_FMAC4 soap_in_PointerTons3__SubAttributeListType(struct soap*, const char*, ns3__SubAttributeListType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__SubAttributeListType(struct soap*, ns3__SubAttributeListType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__SubAttributeListType
#define soap_write_PointerTons3__SubAttributeListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__SubAttributeListType(soap, data), 0) || ACService::soap_put_PointerTons3__SubAttributeListType(soap, data, "ns3:SubAttributeListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__SubAttributeListType ** SOAP_FMAC4 soap_get_PointerTons3__SubAttributeListType(struct soap*, ns3__SubAttributeListType **, const char*, const char*);

#ifndef soap_read_PointerTons3__SubAttributeListType
#define soap_read_PointerTons3__SubAttributeListType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__SubAttributeListType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__SubAttributeListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__LegalActListType
#define SOAP_TYPE_ACService_PointerTons3__LegalActListType (165)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__LegalActListType(struct soap*, ns3__LegalActListType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__LegalActListType(struct soap*, const char *, int, ns3__LegalActListType *const*, const char *);
SOAP_FMAC3 ns3__LegalActListType ** SOAP_FMAC4 soap_in_PointerTons3__LegalActListType(struct soap*, const char*, ns3__LegalActListType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__LegalActListType(struct soap*, ns3__LegalActListType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__LegalActListType
#define soap_write_PointerTons3__LegalActListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__LegalActListType(soap, data), 0) || ACService::soap_put_PointerTons3__LegalActListType(soap, data, "ns3:LegalActListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__LegalActListType ** SOAP_FMAC4 soap_get_PointerTons3__LegalActListType(struct soap*, ns3__LegalActListType **, const char*, const char*);

#ifndef soap_read_PointerTons3__LegalActListType
#define soap_read_PointerTons3__LegalActListType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__LegalActListType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__LegalActListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons4__DescriptionType
#define SOAP_TYPE_ACService_PointerTons4__DescriptionType (164)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons4__DescriptionType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons4__DescriptionType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTons4__DescriptionType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons4__DescriptionType(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTons4__DescriptionType
#define soap_write_PointerTons4__DescriptionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons4__DescriptionType(soap, data), 0) || ACService::soap_put_PointerTons4__DescriptionType(soap, data, "ns4:DescriptionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTons4__DescriptionType(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTons4__DescriptionType
#define soap_read_PointerTons4__DescriptionType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons4__DescriptionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons4__DescriptionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__ExtraIDType
#define SOAP_TYPE_ACService_PointerTons3__ExtraIDType (162)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__ExtraIDType(struct soap*, ns3__ExtraIDType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__ExtraIDType(struct soap*, const char *, int, ns3__ExtraIDType *const*, const char *);
SOAP_FMAC3 ns3__ExtraIDType ** SOAP_FMAC4 soap_in_PointerTons3__ExtraIDType(struct soap*, const char*, ns3__ExtraIDType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__ExtraIDType(struct soap*, ns3__ExtraIDType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__ExtraIDType
#define soap_write_PointerTons3__ExtraIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__ExtraIDType(soap, data), 0) || ACService::soap_put_PointerTons3__ExtraIDType(soap, data, "ns3:ExtraIDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ExtraIDType ** SOAP_FMAC4 soap_get_PointerTons3__ExtraIDType(struct soap*, ns3__ExtraIDType **, const char*, const char*);

#ifndef soap_read_PointerTons3__ExtraIDType
#define soap_read_PointerTons3__ExtraIDType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__ExtraIDType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__ExtraIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__ExtraIDListType
#define SOAP_TYPE_ACService_PointerTons3__ExtraIDListType (161)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__ExtraIDListType(struct soap*, ns3__ExtraIDListType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__ExtraIDListType(struct soap*, const char *, int, ns3__ExtraIDListType *const*, const char *);
SOAP_FMAC3 ns3__ExtraIDListType ** SOAP_FMAC4 soap_in_PointerTons3__ExtraIDListType(struct soap*, const char*, ns3__ExtraIDListType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__ExtraIDListType(struct soap*, ns3__ExtraIDListType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__ExtraIDListType
#define soap_write_PointerTons3__ExtraIDListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__ExtraIDListType(soap, data), 0) || ACService::soap_put_PointerTons3__ExtraIDListType(soap, data, "ns3:ExtraIDListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ExtraIDListType ** SOAP_FMAC4 soap_get_PointerTons3__ExtraIDListType(struct soap*, ns3__ExtraIDListType **, const char*, const char*);

#ifndef soap_read_PointerTons3__ExtraIDListType
#define soap_read_PointerTons3__ExtraIDListType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__ExtraIDListType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__ExtraIDListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__MainAttributeType
#define SOAP_TYPE_ACService_PointerTons3__MainAttributeType (160)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__MainAttributeType(struct soap*, ns3__MainAttributeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__MainAttributeType(struct soap*, const char *, int, ns3__MainAttributeType *const*, const char *);
SOAP_FMAC3 ns3__MainAttributeType ** SOAP_FMAC4 soap_in_PointerTons3__MainAttributeType(struct soap*, const char*, ns3__MainAttributeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__MainAttributeType(struct soap*, ns3__MainAttributeType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__MainAttributeType
#define soap_write_PointerTons3__MainAttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__MainAttributeType(soap, data), 0) || ACService::soap_put_PointerTons3__MainAttributeType(soap, data, "ns3:MainAttributeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__MainAttributeType ** SOAP_FMAC4 soap_get_PointerTons3__MainAttributeType(struct soap*, ns3__MainAttributeType **, const char*, const char*);

#ifndef soap_read_PointerTons3__MainAttributeType
#define soap_read_PointerTons3__MainAttributeType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__MainAttributeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__MainAttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons7__SVGListType
#define SOAP_TYPE_ACService_PointerTons7__SVGListType (158)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons7__SVGListType(struct soap*, ns7__SVGListType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons7__SVGListType(struct soap*, const char *, int, ns7__SVGListType *const*, const char *);
SOAP_FMAC3 ns7__SVGListType ** SOAP_FMAC4 soap_in_PointerTons7__SVGListType(struct soap*, const char*, ns7__SVGListType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons7__SVGListType(struct soap*, ns7__SVGListType *const*, const char*, const char*);

#ifndef soap_write_PointerTons7__SVGListType
#define soap_write_PointerTons7__SVGListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons7__SVGListType(soap, data), 0) || ACService::soap_put_PointerTons7__SVGListType(soap, data, "ns7:SVGListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns7__SVGListType ** SOAP_FMAC4 soap_get_PointerTons7__SVGListType(struct soap*, ns7__SVGListType **, const char*, const char*);

#ifndef soap_read_PointerTons7__SVGListType
#define soap_read_PointerTons7__SVGListType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons7__SVGListType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons7__SVGListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons6__QualifyingPropertiesType
#define SOAP_TYPE_ACService_PointerTons6__QualifyingPropertiesType (157)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__QualifyingPropertiesType(struct soap*, ns6__QualifyingPropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__QualifyingPropertiesType(struct soap*, const char *, int, ns6__QualifyingPropertiesType *const*, const char *);
SOAP_FMAC3 ns6__QualifyingPropertiesType ** SOAP_FMAC4 soap_in_PointerTons6__QualifyingPropertiesType(struct soap*, const char*, ns6__QualifyingPropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__QualifyingPropertiesType(struct soap*, ns6__QualifyingPropertiesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__QualifyingPropertiesType
#define soap_write_PointerTons6__QualifyingPropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons6__QualifyingPropertiesType(soap, data), 0) || ACService::soap_put_PointerTons6__QualifyingPropertiesType(soap, data, "ns6:QualifyingPropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__QualifyingPropertiesType ** SOAP_FMAC4 soap_get_PointerTons6__QualifyingPropertiesType(struct soap*, ns6__QualifyingPropertiesType **, const char*, const char*);

#ifndef soap_read_PointerTons6__QualifyingPropertiesType
#define soap_read_PointerTons6__QualifyingPropertiesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons6__QualifyingPropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons6__QualifyingPropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__X509CertificateType
#define SOAP_TYPE_ACService_PointerTons5__X509CertificateType (155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__X509CertificateType(struct soap*, ns5__X509CertificateType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__X509CertificateType(struct soap*, const char *, int, ns5__X509CertificateType *const*, const char *);
SOAP_FMAC3 ns5__X509CertificateType ** SOAP_FMAC4 soap_in_PointerTons5__X509CertificateType(struct soap*, const char*, ns5__X509CertificateType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__X509CertificateType(struct soap*, ns5__X509CertificateType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__X509CertificateType
#define soap_write_PointerTons5__X509CertificateType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__X509CertificateType(soap, data), 0) || ACService::soap_put_PointerTons5__X509CertificateType(soap, data, "ns5:X509CertificateType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__X509CertificateType ** SOAP_FMAC4 soap_get_PointerTons5__X509CertificateType(struct soap*, ns5__X509CertificateType **, const char*, const char*);

#ifndef soap_read_PointerTons5__X509CertificateType
#define soap_read_PointerTons5__X509CertificateType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__X509CertificateType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__X509CertificateType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__X509DataType
#define SOAP_TYPE_ACService_PointerTons5__X509DataType (154)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__X509DataType(struct soap*, ns5__X509DataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__X509DataType(struct soap*, const char *, int, ns5__X509DataType *const*, const char *);
SOAP_FMAC3 ns5__X509DataType ** SOAP_FMAC4 soap_in_PointerTons5__X509DataType(struct soap*, const char*, ns5__X509DataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__X509DataType(struct soap*, ns5__X509DataType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__X509DataType
#define soap_write_PointerTons5__X509DataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__X509DataType(soap, data), 0) || ACService::soap_put_PointerTons5__X509DataType(soap, data, "ns5:X509DataType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__X509DataType ** SOAP_FMAC4 soap_get_PointerTons5__X509DataType(struct soap*, ns5__X509DataType **, const char*, const char*);

#ifndef soap_read_PointerTons5__X509DataType
#define soap_read_PointerTons5__X509DataType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__X509DataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__X509DataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__TransformType
#define SOAP_TYPE_ACService_PointerTons5__TransformType (152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__TransformType(struct soap*, ns5__TransformType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__TransformType(struct soap*, const char *, int, ns5__TransformType *const*, const char *);
SOAP_FMAC3 ns5__TransformType ** SOAP_FMAC4 soap_in_PointerTons5__TransformType(struct soap*, const char*, ns5__TransformType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__TransformType(struct soap*, ns5__TransformType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__TransformType
#define soap_write_PointerTons5__TransformType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__TransformType(soap, data), 0) || ACService::soap_put_PointerTons5__TransformType(soap, data, "ns5:TransformType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__TransformType ** SOAP_FMAC4 soap_get_PointerTons5__TransformType(struct soap*, ns5__TransformType **, const char*, const char*);

#ifndef soap_read_PointerTons5__TransformType
#define soap_read_PointerTons5__TransformType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__TransformType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__TransformType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerToxsd__anyURI
#define SOAP_TYPE_ACService_PointerToxsd__anyURI (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__anyURI
#define soap_write_PointerToxsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerToxsd__anyURI(soap, data), 0) || ACService::soap_put_PointerToxsd__anyURI(soap, data, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__anyURI
#define soap_read_PointerToxsd__anyURI(soap, data) ( ((data) ? (ACService::soap_default_PointerToxsd__anyURI(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerToxsd__anyURI(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__DigestValueType
#define SOAP_TYPE_ACService_PointerTons5__DigestValueType (150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__DigestValueType(struct soap*, ns5__DigestValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__DigestValueType(struct soap*, const char *, int, ns5__DigestValueType *const*, const char *);
SOAP_FMAC3 ns5__DigestValueType ** SOAP_FMAC4 soap_in_PointerTons5__DigestValueType(struct soap*, const char*, ns5__DigestValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__DigestValueType(struct soap*, ns5__DigestValueType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__DigestValueType
#define soap_write_PointerTons5__DigestValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__DigestValueType(soap, data), 0) || ACService::soap_put_PointerTons5__DigestValueType(soap, data, "ns5:DigestValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__DigestValueType ** SOAP_FMAC4 soap_get_PointerTons5__DigestValueType(struct soap*, ns5__DigestValueType **, const char*, const char*);

#ifndef soap_read_PointerTons5__DigestValueType
#define soap_read_PointerTons5__DigestValueType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__DigestValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__DigestValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__DigestMethodType
#define SOAP_TYPE_ACService_PointerTons5__DigestMethodType (149)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__DigestMethodType(struct soap*, ns5__DigestMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__DigestMethodType(struct soap*, const char *, int, ns5__DigestMethodType *const*, const char *);
SOAP_FMAC3 ns5__DigestMethodType ** SOAP_FMAC4 soap_in_PointerTons5__DigestMethodType(struct soap*, const char*, ns5__DigestMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__DigestMethodType(struct soap*, ns5__DigestMethodType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__DigestMethodType
#define soap_write_PointerTons5__DigestMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__DigestMethodType(soap, data), 0) || ACService::soap_put_PointerTons5__DigestMethodType(soap, data, "ns5:DigestMethodType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__DigestMethodType ** SOAP_FMAC4 soap_get_PointerTons5__DigestMethodType(struct soap*, ns5__DigestMethodType **, const char*, const char*);

#ifndef soap_read_PointerTons5__DigestMethodType
#define soap_read_PointerTons5__DigestMethodType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__DigestMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__DigestMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__TransformsType
#define SOAP_TYPE_ACService_PointerTons5__TransformsType (148)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__TransformsType(struct soap*, ns5__TransformsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__TransformsType(struct soap*, const char *, int, ns5__TransformsType *const*, const char *);
SOAP_FMAC3 ns5__TransformsType ** SOAP_FMAC4 soap_in_PointerTons5__TransformsType(struct soap*, const char*, ns5__TransformsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__TransformsType(struct soap*, ns5__TransformsType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__TransformsType
#define soap_write_PointerTons5__TransformsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__TransformsType(soap, data), 0) || ACService::soap_put_PointerTons5__TransformsType(soap, data, "ns5:TransformsType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__TransformsType ** SOAP_FMAC4 soap_get_PointerTons5__TransformsType(struct soap*, ns5__TransformsType **, const char*, const char*);

#ifndef soap_read_PointerTons5__TransformsType
#define soap_read_PointerTons5__TransformsType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__TransformsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__TransformsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__ReferenceType
#define SOAP_TYPE_ACService_PointerTons5__ReferenceType (146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ReferenceType(struct soap*, ns5__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ReferenceType(struct soap*, const char *, int, ns5__ReferenceType *const*, const char *);
SOAP_FMAC3 ns5__ReferenceType ** SOAP_FMAC4 soap_in_PointerTons5__ReferenceType(struct soap*, const char*, ns5__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ReferenceType(struct soap*, ns5__ReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ReferenceType
#define soap_write_PointerTons5__ReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__ReferenceType(soap, data), 0) || ACService::soap_put_PointerTons5__ReferenceType(soap, data, "ns5:ReferenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ReferenceType ** SOAP_FMAC4 soap_get_PointerTons5__ReferenceType(struct soap*, ns5__ReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTons5__ReferenceType
#define soap_read_PointerTons5__ReferenceType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__ReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__ReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__SignatureMethodType
#define SOAP_TYPE_ACService_PointerTons5__SignatureMethodType (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__SignatureMethodType(struct soap*, ns5__SignatureMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__SignatureMethodType(struct soap*, const char *, int, ns5__SignatureMethodType *const*, const char *);
SOAP_FMAC3 ns5__SignatureMethodType ** SOAP_FMAC4 soap_in_PointerTons5__SignatureMethodType(struct soap*, const char*, ns5__SignatureMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__SignatureMethodType(struct soap*, ns5__SignatureMethodType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__SignatureMethodType
#define soap_write_PointerTons5__SignatureMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__SignatureMethodType(soap, data), 0) || ACService::soap_put_PointerTons5__SignatureMethodType(soap, data, "ns5:SignatureMethodType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SignatureMethodType ** SOAP_FMAC4 soap_get_PointerTons5__SignatureMethodType(struct soap*, ns5__SignatureMethodType **, const char*, const char*);

#ifndef soap_read_PointerTons5__SignatureMethodType
#define soap_read_PointerTons5__SignatureMethodType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__SignatureMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__SignatureMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__CanonicalizationMethodType
#define SOAP_TYPE_ACService_PointerTons5__CanonicalizationMethodType (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__CanonicalizationMethodType(struct soap*, ns5__CanonicalizationMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__CanonicalizationMethodType(struct soap*, const char *, int, ns5__CanonicalizationMethodType *const*, const char *);
SOAP_FMAC3 ns5__CanonicalizationMethodType ** SOAP_FMAC4 soap_in_PointerTons5__CanonicalizationMethodType(struct soap*, const char*, ns5__CanonicalizationMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__CanonicalizationMethodType(struct soap*, ns5__CanonicalizationMethodType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__CanonicalizationMethodType
#define soap_write_PointerTons5__CanonicalizationMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__CanonicalizationMethodType(soap, data), 0) || ACService::soap_put_PointerTons5__CanonicalizationMethodType(soap, data, "ns5:CanonicalizationMethodType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__CanonicalizationMethodType ** SOAP_FMAC4 soap_get_PointerTons5__CanonicalizationMethodType(struct soap*, ns5__CanonicalizationMethodType **, const char*, const char*);

#ifndef soap_read_PointerTons5__CanonicalizationMethodType
#define soap_read_PointerTons5__CanonicalizationMethodType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__CanonicalizationMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__CanonicalizationMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__ObjectType
#define SOAP_TYPE_ACService_PointerTons5__ObjectType (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ObjectType(struct soap*, ns5__ObjectType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ObjectType(struct soap*, const char *, int, ns5__ObjectType *const*, const char *);
SOAP_FMAC3 ns5__ObjectType ** SOAP_FMAC4 soap_in_PointerTons5__ObjectType(struct soap*, const char*, ns5__ObjectType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ObjectType(struct soap*, ns5__ObjectType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ObjectType
#define soap_write_PointerTons5__ObjectType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__ObjectType(soap, data), 0) || ACService::soap_put_PointerTons5__ObjectType(soap, data, "ns5:ObjectType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ObjectType ** SOAP_FMAC4 soap_get_PointerTons5__ObjectType(struct soap*, ns5__ObjectType **, const char*, const char*);

#ifndef soap_read_PointerTons5__ObjectType
#define soap_read_PointerTons5__ObjectType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__ObjectType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__ObjectType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__KeyInfoType
#define SOAP_TYPE_ACService_PointerTons5__KeyInfoType (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__KeyInfoType(struct soap*, ns5__KeyInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__KeyInfoType(struct soap*, const char *, int, ns5__KeyInfoType *const*, const char *);
SOAP_FMAC3 ns5__KeyInfoType ** SOAP_FMAC4 soap_in_PointerTons5__KeyInfoType(struct soap*, const char*, ns5__KeyInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__KeyInfoType(struct soap*, ns5__KeyInfoType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__KeyInfoType
#define soap_write_PointerTons5__KeyInfoType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__KeyInfoType(soap, data), 0) || ACService::soap_put_PointerTons5__KeyInfoType(soap, data, "ns5:KeyInfoType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__KeyInfoType ** SOAP_FMAC4 soap_get_PointerTons5__KeyInfoType(struct soap*, ns5__KeyInfoType **, const char*, const char*);

#ifndef soap_read_PointerTons5__KeyInfoType
#define soap_read_PointerTons5__KeyInfoType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__KeyInfoType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__KeyInfoType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__SignatureValueType
#define SOAP_TYPE_ACService_PointerTons5__SignatureValueType (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__SignatureValueType(struct soap*, ns5__SignatureValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__SignatureValueType(struct soap*, const char *, int, ns5__SignatureValueType *const*, const char *);
SOAP_FMAC3 ns5__SignatureValueType ** SOAP_FMAC4 soap_in_PointerTons5__SignatureValueType(struct soap*, const char*, ns5__SignatureValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__SignatureValueType(struct soap*, ns5__SignatureValueType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__SignatureValueType
#define soap_write_PointerTons5__SignatureValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__SignatureValueType(soap, data), 0) || ACService::soap_put_PointerTons5__SignatureValueType(soap, data, "ns5:SignatureValueType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SignatureValueType ** SOAP_FMAC4 soap_get_PointerTons5__SignatureValueType(struct soap*, ns5__SignatureValueType **, const char*, const char*);

#ifndef soap_read_PointerTons5__SignatureValueType
#define soap_read_PointerTons5__SignatureValueType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__SignatureValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__SignatureValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__SignedInfoType
#define SOAP_TYPE_ACService_PointerTons5__SignedInfoType (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__SignedInfoType(struct soap*, ns5__SignedInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__SignedInfoType(struct soap*, const char *, int, ns5__SignedInfoType *const*, const char *);
SOAP_FMAC3 ns5__SignedInfoType ** SOAP_FMAC4 soap_in_PointerTons5__SignedInfoType(struct soap*, const char*, ns5__SignedInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__SignedInfoType(struct soap*, ns5__SignedInfoType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__SignedInfoType
#define soap_write_PointerTons5__SignedInfoType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__SignedInfoType(soap, data), 0) || ACService::soap_put_PointerTons5__SignedInfoType(soap, data, "ns5:SignedInfoType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SignedInfoType ** SOAP_FMAC4 soap_get_PointerTons5__SignedInfoType(struct soap*, ns5__SignedInfoType **, const char*, const char*);

#ifndef soap_read_PointerTons5__SignedInfoType
#define soap_read_PointerTons5__SignedInfoType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__SignedInfoType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__SignedInfoType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__AttributeType
#define SOAP_TYPE_ACService_PointerTons3__AttributeType (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__AttributeType(struct soap*, ns3__AttributeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__AttributeType(struct soap*, const char *, int, ns3__AttributeType *const*, const char *);
SOAP_FMAC3 ns3__AttributeType ** SOAP_FMAC4 soap_in_PointerTons3__AttributeType(struct soap*, const char*, ns3__AttributeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__AttributeType(struct soap*, ns3__AttributeType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__AttributeType
#define soap_write_PointerTons3__AttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__AttributeType(soap, data), 0) || ACService::soap_put_PointerTons3__AttributeType(soap, data, "ns3:AttributeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__AttributeType ** SOAP_FMAC4 soap_get_PointerTons3__AttributeType(struct soap*, ns3__AttributeType **, const char*, const char*);

#ifndef soap_read_PointerTons3__AttributeType
#define soap_read_PointerTons3__AttributeType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__AttributeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__AttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons5__SignatureType
#define SOAP_TYPE_ACService_PointerTons5__SignatureType (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__SignatureType(struct soap*, ns5__SignatureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__SignatureType(struct soap*, const char *, int, ns5__SignatureType *const*, const char *);
SOAP_FMAC3 ns5__SignatureType ** SOAP_FMAC4 soap_in_PointerTons5__SignatureType(struct soap*, const char*, ns5__SignatureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__SignatureType(struct soap*, ns5__SignatureType *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__SignatureType
#define soap_write_PointerTons5__SignatureType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons5__SignatureType(soap, data), 0) || ACService::soap_put_PointerTons5__SignatureType(soap, data, "ns5:SignatureType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SignatureType ** SOAP_FMAC4 soap_get_PointerTons5__SignatureType(struct soap*, ns5__SignatureType **, const char*, const char*);

#ifndef soap_read_PointerTons5__SignatureType
#define soap_read_PointerTons5__SignatureType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons5__SignatureType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons5__SignatureType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons2__UnsignedAttributesBasicType
#define SOAP_TYPE_ACService_PointerTons2__UnsignedAttributesBasicType (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__UnsignedAttributesBasicType(struct soap*, ns2__UnsignedAttributesBasicType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__UnsignedAttributesBasicType(struct soap*, const char *, int, ns2__UnsignedAttributesBasicType *const*, const char *);
SOAP_FMAC3 ns2__UnsignedAttributesBasicType ** SOAP_FMAC4 soap_in_PointerTons2__UnsignedAttributesBasicType(struct soap*, const char*, ns2__UnsignedAttributesBasicType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__UnsignedAttributesBasicType(struct soap*, ns2__UnsignedAttributesBasicType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__UnsignedAttributesBasicType
#define soap_write_PointerTons2__UnsignedAttributesBasicType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons2__UnsignedAttributesBasicType(soap, data), 0) || ACService::soap_put_PointerTons2__UnsignedAttributesBasicType(soap, data, "ns2:UnsignedAttributesBasicType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__UnsignedAttributesBasicType ** SOAP_FMAC4 soap_get_PointerTons2__UnsignedAttributesBasicType(struct soap*, ns2__UnsignedAttributesBasicType **, const char*, const char*);

#ifndef soap_read_PointerTons2__UnsignedAttributesBasicType
#define soap_read_PointerTons2__UnsignedAttributesBasicType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons2__UnsignedAttributesBasicType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons2__UnsignedAttributesBasicType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons2__SignedAttributesType
#define SOAP_TYPE_ACService_PointerTons2__SignedAttributesType (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__SignedAttributesType(struct soap*, ns2__SignedAttributesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__SignedAttributesType(struct soap*, const char *, int, ns2__SignedAttributesType *const*, const char *);
SOAP_FMAC3 ns2__SignedAttributesType ** SOAP_FMAC4 soap_in_PointerTons2__SignedAttributesType(struct soap*, const char*, ns2__SignedAttributesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__SignedAttributesType(struct soap*, ns2__SignedAttributesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__SignedAttributesType
#define soap_write_PointerTons2__SignedAttributesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons2__SignedAttributesType(soap, data), 0) || ACService::soap_put_PointerTons2__SignedAttributesType(soap, data, "ns2:SignedAttributesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__SignedAttributesType ** SOAP_FMAC4 soap_get_PointerTons2__SignedAttributesType(struct soap*, ns2__SignedAttributesType **, const char*, const char*);

#ifndef soap_read_PointerTons2__SignedAttributesType
#define soap_read_PointerTons2__SignedAttributesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons2__SignedAttributesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons2__SignedAttributesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons2__ResponseResult
#define SOAP_TYPE_ACService_PointerTons2__ResponseResult (132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ResponseResult(struct soap*, ns2__ResponseResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ResponseResult(struct soap*, const char *, int, ns2__ResponseResult *const*, const char *);
SOAP_FMAC3 ns2__ResponseResult ** SOAP_FMAC4 soap_in_PointerTons2__ResponseResult(struct soap*, const char*, ns2__ResponseResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ResponseResult(struct soap*, ns2__ResponseResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ResponseResult
#define soap_write_PointerTons2__ResponseResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons2__ResponseResult(soap, data), 0) || ACService::soap_put_PointerTons2__ResponseResult(soap, data, "ns2:ResponseResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ResponseResult ** SOAP_FMAC4 soap_get_PointerTons2__ResponseResult(struct soap*, ns2__ResponseResult **, const char*, const char*);

#ifndef soap_read_PointerTons2__ResponseResult
#define soap_read_PointerTons2__ResponseResult(soap, data) ( ((data) ? (ACService::soap_default_PointerTons2__ResponseResult(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons2__ResponseResult(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons2__UnsignedAttributesType
#define SOAP_TYPE_ACService_PointerTons2__UnsignedAttributesType (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__UnsignedAttributesType(struct soap*, ns2__UnsignedAttributesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__UnsignedAttributesType(struct soap*, const char *, int, ns2__UnsignedAttributesType *const*, const char *);
SOAP_FMAC3 ns2__UnsignedAttributesType ** SOAP_FMAC4 soap_in_PointerTons2__UnsignedAttributesType(struct soap*, const char*, ns2__UnsignedAttributesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__UnsignedAttributesType(struct soap*, ns2__UnsignedAttributesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__UnsignedAttributesType
#define soap_write_PointerTons2__UnsignedAttributesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons2__UnsignedAttributesType(soap, data), 0) || ACService::soap_put_PointerTons2__UnsignedAttributesType(soap, data, "ns2:UnsignedAttributesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__UnsignedAttributesType ** SOAP_FMAC4 soap_get_PointerTons2__UnsignedAttributesType(struct soap*, ns2__UnsignedAttributesType **, const char*, const char*);

#ifndef soap_read_PointerTons2__UnsignedAttributesType
#define soap_read_PointerTons2__UnsignedAttributesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons2__UnsignedAttributesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons2__UnsignedAttributesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTostd__string
#define SOAP_TYPE_ACService_PointerTostd__string (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTostd__string(soap, data), 0) || ACService::soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( ((data) ? (ACService::soap_default_PointerTostd__string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTostd__string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons2__AttributesType
#define SOAP_TYPE_ACService_PointerTons2__AttributesType (128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__AttributesType(struct soap*, ns2__AttributesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__AttributesType(struct soap*, const char *, int, ns2__AttributesType *const*, const char *);
SOAP_FMAC3 ns2__AttributesType ** SOAP_FMAC4 soap_in_PointerTons2__AttributesType(struct soap*, const char*, ns2__AttributesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__AttributesType(struct soap*, ns2__AttributesType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__AttributesType
#define soap_write_PointerTons2__AttributesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons2__AttributesType(soap, data), 0) || ACService::soap_put_PointerTons2__AttributesType(soap, data, "ns2:AttributesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__AttributesType ** SOAP_FMAC4 soap_get_PointerTons2__AttributesType(struct soap*, ns2__AttributesType **, const char*, const char*);

#ifndef soap_read_PointerTons2__AttributesType
#define soap_read_PointerTons2__AttributesType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons2__AttributesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons2__AttributesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons4__CompanyNameType
#define SOAP_TYPE_ACService_PointerTons4__CompanyNameType (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons4__CompanyNameType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons4__CompanyNameType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTons4__CompanyNameType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons4__CompanyNameType(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTons4__CompanyNameType
#define soap_write_PointerTons4__CompanyNameType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons4__CompanyNameType(soap, data), 0) || ACService::soap_put_PointerTons4__CompanyNameType(soap, data, "ns4:CompanyNameType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTons4__CompanyNameType(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTons4__CompanyNameType
#define soap_read_PointerTons4__CompanyNameType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons4__CompanyNameType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons4__CompanyNameType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons4__NIPCType
#define SOAP_TYPE_ACService_PointerTons4__NIPCType (125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons4__NIPCType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons4__NIPCType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTons4__NIPCType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons4__NIPCType(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTons4__NIPCType
#define soap_write_PointerTons4__NIPCType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons4__NIPCType(soap, data), 0) || ACService::soap_put_PointerTons4__NIPCType(soap, data, "ns4:NIPCType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTons4__NIPCType(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTons4__NIPCType
#define soap_read_PointerTons4__NIPCType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons4__NIPCType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons4__NIPCType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__AttributeSupplierType
#define SOAP_TYPE_ACService_PointerTons3__AttributeSupplierType (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__AttributeSupplierType(struct soap*, ns3__AttributeSupplierType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__AttributeSupplierType(struct soap*, const char *, int, ns3__AttributeSupplierType *const*, const char *);
SOAP_FMAC3 ns3__AttributeSupplierType ** SOAP_FMAC4 soap_in_PointerTons3__AttributeSupplierType(struct soap*, const char*, ns3__AttributeSupplierType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__AttributeSupplierType(struct soap*, ns3__AttributeSupplierType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__AttributeSupplierType
#define soap_write_PointerTons3__AttributeSupplierType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__AttributeSupplierType(soap, data), 0) || ACService::soap_put_PointerTons3__AttributeSupplierType(soap, data, "ns3:AttributeSupplierType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__AttributeSupplierType ** SOAP_FMAC4 soap_get_PointerTons3__AttributeSupplierType(struct soap*, ns3__AttributeSupplierType **, const char*, const char*);

#ifndef soap_read_PointerTons3__AttributeSupplierType
#define soap_read_PointerTons3__AttributeSupplierType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__AttributeSupplierType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__AttributeSupplierType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons2__AttributeSupplierListType
#define SOAP_TYPE_ACService_PointerTons2__AttributeSupplierListType (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__AttributeSupplierListType(struct soap*, ns2__AttributeSupplierListType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__AttributeSupplierListType(struct soap*, const char *, int, ns2__AttributeSupplierListType *const*, const char *);
SOAP_FMAC3 ns2__AttributeSupplierListType ** SOAP_FMAC4 soap_in_PointerTons2__AttributeSupplierListType(struct soap*, const char*, ns2__AttributeSupplierListType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__AttributeSupplierListType(struct soap*, ns2__AttributeSupplierListType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__AttributeSupplierListType
#define soap_write_PointerTons2__AttributeSupplierListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons2__AttributeSupplierListType(soap, data), 0) || ACService::soap_put_PointerTons2__AttributeSupplierListType(soap, data, "ns2:AttributeSupplierListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__AttributeSupplierListType ** SOAP_FMAC4 soap_get_PointerTons2__AttributeSupplierListType(struct soap*, ns2__AttributeSupplierListType **, const char*, const char*);

#ifndef soap_read_PointerTons2__AttributeSupplierListType
#define soap_read_PointerTons2__AttributeSupplierListType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons2__AttributeSupplierListType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons2__AttributeSupplierListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTons3__PersonalDataType
#define SOAP_TYPE_ACService_PointerTons3__PersonalDataType (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__PersonalDataType(struct soap*, ns3__PersonalDataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__PersonalDataType(struct soap*, const char *, int, ns3__PersonalDataType *const*, const char *);
SOAP_FMAC3 ns3__PersonalDataType ** SOAP_FMAC4 soap_in_PointerTons3__PersonalDataType(struct soap*, const char*, ns3__PersonalDataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__PersonalDataType(struct soap*, ns3__PersonalDataType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__PersonalDataType
#define soap_write_PointerTons3__PersonalDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTons3__PersonalDataType(soap, data), 0) || ACService::soap_put_PointerTons3__PersonalDataType(soap, data, "ns3:PersonalDataType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__PersonalDataType ** SOAP_FMAC4 soap_get_PointerTons3__PersonalDataType(struct soap*, ns3__PersonalDataType **, const char*, const char*);

#ifndef soap_read_PointerTons3__PersonalDataType
#define soap_read_PointerTons3__PersonalDataType(soap, data) ( ((data) ? (ACService::soap_default_PointerTons3__PersonalDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTons3__PersonalDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_PointerTounsignedByte
#define SOAP_TYPE_ACService_PointerTounsignedByte (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_PointerTounsignedByte(soap, data), 0) || ACService::soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( ((data) ? (ACService::soap_default_PointerTounsignedByte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_PointerTounsignedByte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService__QName
#define SOAP_TYPE_ACService__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize__QName(soap, data), 0) || ACService::soap_put__QName(soap, data, "QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( ((data) ? (ACService::soap_default__QName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_string
#define SOAP_TYPE_ACService_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (ACService::soap_serialize_string(soap, data), 0) || ACService::soap_put_string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( ((data) ? (ACService::soap_default_string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !ACService::soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfns7__SVGType
#define SOAP_TYPE_ACService_std__vectorTemplateOfns7__SVGType (212)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfns7__SVGType(struct soap*, std::vector<xsd__base64Binary> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfns7__SVGType(struct soap*, const std::vector<xsd__base64Binary> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfns7__SVGType(struct soap*, const char*, int, const std::vector<xsd__base64Binary> *, const char*);
SOAP_FMAC3 std::vector<xsd__base64Binary> * SOAP_FMAC4 soap_in_std__vectorTemplateOfns7__SVGType(struct soap*, const char*, std::vector<xsd__base64Binary> *, const char*);
SOAP_FMAC1 std::vector<xsd__base64Binary>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfns7__SVGType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<xsd__base64Binary>  * soap_new_std__vectorTemplateOfns7__SVGType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfns7__SVGType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType (211)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType(struct soap*, std::vector<ns6__EncapsulatedOCSPValueType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType(struct soap*, const std::vector<ns6__EncapsulatedOCSPValueType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType(struct soap*, const char*, int, const std::vector<ns6__EncapsulatedOCSPValueType *> *, const char*);
SOAP_FMAC3 std::vector<ns6__EncapsulatedOCSPValueType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType(struct soap*, const char*, std::vector<ns6__EncapsulatedOCSPValueType *> *, const char*);
SOAP_FMAC1 std::vector<ns6__EncapsulatedOCSPValueType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns6__EncapsulatedOCSPValueType *>  * soap_new_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons6__EncapsulatedOCSPValueType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType (209)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType(struct soap*, std::vector<ns6__EncapsulatedCRLValueType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType(struct soap*, const std::vector<ns6__EncapsulatedCRLValueType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType(struct soap*, const char*, int, const std::vector<ns6__EncapsulatedCRLValueType *> *, const char*);
SOAP_FMAC3 std::vector<ns6__EncapsulatedCRLValueType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType(struct soap*, const char*, std::vector<ns6__EncapsulatedCRLValueType *> *, const char*);
SOAP_FMAC1 std::vector<ns6__EncapsulatedCRLValueType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns6__EncapsulatedCRLValueType *>  * soap_new_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons6__EncapsulatedCRLValueType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType (205)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType(struct soap*, std::vector<ns6__EncapsulatedX509CertificateType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType(struct soap*, const std::vector<ns6__EncapsulatedX509CertificateType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType(struct soap*, const char*, int, const std::vector<ns6__EncapsulatedX509CertificateType *> *, const char*);
SOAP_FMAC3 std::vector<ns6__EncapsulatedX509CertificateType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType(struct soap*, const char*, std::vector<ns6__EncapsulatedX509CertificateType *> *, const char*);
SOAP_FMAC1 std::vector<ns6__EncapsulatedX509CertificateType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns6__EncapsulatedX509CertificateType *>  * soap_new_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons6__EncapsulatedX509CertificateType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__OCSPRefType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__OCSPRefType (201)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons6__OCSPRefType(struct soap*, std::vector<ns6__OCSPRefType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons6__OCSPRefType(struct soap*, const std::vector<ns6__OCSPRefType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons6__OCSPRefType(struct soap*, const char*, int, const std::vector<ns6__OCSPRefType *> *, const char*);
SOAP_FMAC3 std::vector<ns6__OCSPRefType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons6__OCSPRefType(struct soap*, const char*, std::vector<ns6__OCSPRefType *> *, const char*);
SOAP_FMAC1 std::vector<ns6__OCSPRefType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons6__OCSPRefType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns6__OCSPRefType *>  * soap_new_std__vectorTemplateOfPointerTons6__OCSPRefType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons6__OCSPRefType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__CRLRefType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__CRLRefType (197)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons6__CRLRefType(struct soap*, std::vector<ns6__CRLRefType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons6__CRLRefType(struct soap*, const std::vector<ns6__CRLRefType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons6__CRLRefType(struct soap*, const char*, int, const std::vector<ns6__CRLRefType *> *, const char*);
SOAP_FMAC3 std::vector<ns6__CRLRefType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons6__CRLRefType(struct soap*, const char*, std::vector<ns6__CRLRefType *> *, const char*);
SOAP_FMAC1 std::vector<ns6__CRLRefType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons6__CRLRefType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns6__CRLRefType *>  * soap_new_std__vectorTemplateOfPointerTons6__CRLRefType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons6__CRLRefType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__CertType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__CertType (193)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons6__CertType(struct soap*, std::vector<ns6__CertType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons6__CertType(struct soap*, const std::vector<ns6__CertType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons6__CertType(struct soap*, const char*, int, const std::vector<ns6__CertType *> *, const char*);
SOAP_FMAC3 std::vector<ns6__CertType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons6__CertType(struct soap*, const char*, std::vector<ns6__CertType *> *, const char*);
SOAP_FMAC1 std::vector<ns6__CertType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons6__CertType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns6__CertType *>  * soap_new_std__vectorTemplateOfPointerTons6__CertType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons6__CertType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__ClaimedRoleType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons6__ClaimedRoleType (182)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons6__ClaimedRoleType(struct soap*, std::vector<ns6__ClaimedRoleType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons6__ClaimedRoleType(struct soap*, const std::vector<ns6__ClaimedRoleType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons6__ClaimedRoleType(struct soap*, const char*, int, const std::vector<ns6__ClaimedRoleType *> *, const char*);
SOAP_FMAC3 std::vector<ns6__ClaimedRoleType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons6__ClaimedRoleType(struct soap*, const char*, std::vector<ns6__ClaimedRoleType *> *, const char*);
SOAP_FMAC1 std::vector<ns6__ClaimedRoleType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons6__ClaimedRoleType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns6__ClaimedRoleType *>  * soap_new_std__vectorTemplateOfPointerTons6__ClaimedRoleType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons6__ClaimedRoleType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons3__SubAttributeType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons3__SubAttributeType (169)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__SubAttributeType(struct soap*, std::vector<ns3__SubAttributeType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__SubAttributeType(struct soap*, const std::vector<ns3__SubAttributeType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__SubAttributeType(struct soap*, const char*, int, const std::vector<ns3__SubAttributeType *> *, const char*);
SOAP_FMAC3 std::vector<ns3__SubAttributeType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__SubAttributeType(struct soap*, const char*, std::vector<ns3__SubAttributeType *> *, const char*);
SOAP_FMAC1 std::vector<ns3__SubAttributeType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__SubAttributeType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns3__SubAttributeType *>  * soap_new_std__vectorTemplateOfPointerTons3__SubAttributeType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons3__SubAttributeType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfns4__LegalActType
#define SOAP_TYPE_ACService_std__vectorTemplateOfns4__LegalActType (167)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfns4__LegalActType(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfns4__LegalActType(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfns4__LegalActType(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfns4__LegalActType(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfns4__LegalActType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfns4__LegalActType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfns4__LegalActType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons3__ExtraIDType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons3__ExtraIDType (163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__ExtraIDType(struct soap*, std::vector<ns3__ExtraIDType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__ExtraIDType(struct soap*, const std::vector<ns3__ExtraIDType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__ExtraIDType(struct soap*, const char*, int, const std::vector<ns3__ExtraIDType *> *, const char*);
SOAP_FMAC3 std::vector<ns3__ExtraIDType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__ExtraIDType(struct soap*, const char*, std::vector<ns3__ExtraIDType *> *, const char*);
SOAP_FMAC1 std::vector<ns3__ExtraIDType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__ExtraIDType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns3__ExtraIDType *>  * soap_new_std__vectorTemplateOfPointerTons3__ExtraIDType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons3__ExtraIDType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__X509CertificateType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__X509CertificateType (156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__X509CertificateType(struct soap*, std::vector<ns5__X509CertificateType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__X509CertificateType(struct soap*, const std::vector<ns5__X509CertificateType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__X509CertificateType(struct soap*, const char*, int, const std::vector<ns5__X509CertificateType *> *, const char*);
SOAP_FMAC3 std::vector<ns5__X509CertificateType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__X509CertificateType(struct soap*, const char*, std::vector<ns5__X509CertificateType *> *, const char*);
SOAP_FMAC1 std::vector<ns5__X509CertificateType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__X509CertificateType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__X509CertificateType *>  * soap_new_std__vectorTemplateOfPointerTons5__X509CertificateType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__X509CertificateType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__TransformType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__TransformType (153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__TransformType(struct soap*, std::vector<ns5__TransformType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__TransformType(struct soap*, const std::vector<ns5__TransformType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__TransformType(struct soap*, const char*, int, const std::vector<ns5__TransformType *> *, const char*);
SOAP_FMAC3 std::vector<ns5__TransformType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__TransformType(struct soap*, const char*, std::vector<ns5__TransformType *> *, const char*);
SOAP_FMAC1 std::vector<ns5__TransformType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__TransformType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__TransformType *>  * soap_new_std__vectorTemplateOfPointerTons5__TransformType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__TransformType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__ReferenceType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__ReferenceType (147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__ReferenceType(struct soap*, std::vector<ns5__ReferenceType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__ReferenceType(struct soap*, const std::vector<ns5__ReferenceType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__ReferenceType(struct soap*, const char*, int, const std::vector<ns5__ReferenceType *> *, const char*);
SOAP_FMAC3 std::vector<ns5__ReferenceType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__ReferenceType(struct soap*, const char*, std::vector<ns5__ReferenceType *> *, const char*);
SOAP_FMAC1 std::vector<ns5__ReferenceType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__ReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__ReferenceType *>  * soap_new_std__vectorTemplateOfPointerTons5__ReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__ReferenceType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__ObjectType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__ObjectType (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__ObjectType(struct soap*, std::vector<ns5__ObjectType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__ObjectType(struct soap*, const std::vector<ns5__ObjectType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__ObjectType(struct soap*, const char*, int, const std::vector<ns5__ObjectType *> *, const char*);
SOAP_FMAC3 std::vector<ns5__ObjectType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__ObjectType(struct soap*, const char*, std::vector<ns5__ObjectType *> *, const char*);
SOAP_FMAC1 std::vector<ns5__ObjectType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__ObjectType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__ObjectType *>  * soap_new_std__vectorTemplateOfPointerTons5__ObjectType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__ObjectType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons3__AttributeType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons3__AttributeType (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__AttributeType(struct soap*, std::vector<ns3__AttributeType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__AttributeType(struct soap*, const std::vector<ns3__AttributeType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__AttributeType(struct soap*, const char*, int, const std::vector<ns3__AttributeType *> *, const char*);
SOAP_FMAC3 std::vector<ns3__AttributeType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__AttributeType(struct soap*, const char*, std::vector<ns3__AttributeType *> *, const char*);
SOAP_FMAC1 std::vector<ns3__AttributeType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__AttributeType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns3__AttributeType *>  * soap_new_std__vectorTemplateOfPointerTons3__AttributeType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons3__AttributeType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__SignatureType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons5__SignatureType (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__SignatureType(struct soap*, std::vector<ns5__SignatureType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__SignatureType(struct soap*, const std::vector<ns5__SignatureType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__SignatureType(struct soap*, const char*, int, const std::vector<ns5__SignatureType *> *, const char*);
SOAP_FMAC3 std::vector<ns5__SignatureType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__SignatureType(struct soap*, const char*, std::vector<ns5__SignatureType *> *, const char*);
SOAP_FMAC1 std::vector<ns5__SignatureType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__SignatureType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__SignatureType *>  * soap_new_std__vectorTemplateOfPointerTons5__SignatureType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__SignatureType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons2__AttributesType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons2__AttributesType (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__AttributesType(struct soap*, std::vector<ns2__AttributesType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__AttributesType(struct soap*, const std::vector<ns2__AttributesType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__AttributesType(struct soap*, const char*, int, const std::vector<ns2__AttributesType *> *, const char*);
SOAP_FMAC3 std::vector<ns2__AttributesType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__AttributesType(struct soap*, const char*, std::vector<ns2__AttributesType *> *, const char*);
SOAP_FMAC1 std::vector<ns2__AttributesType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__AttributesType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__AttributesType *>  * soap_new_std__vectorTemplateOfPointerTons2__AttributesType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__AttributesType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons3__AttributeSupplierType
#define SOAP_TYPE_ACService_std__vectorTemplateOfPointerTons3__AttributeSupplierType (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__AttributeSupplierType(struct soap*, std::vector<ns3__AttributeSupplierType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__AttributeSupplierType(struct soap*, const std::vector<ns3__AttributeSupplierType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__AttributeSupplierType(struct soap*, const char*, int, const std::vector<ns3__AttributeSupplierType *> *, const char*);
SOAP_FMAC3 std::vector<ns3__AttributeSupplierType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__AttributeSupplierType(struct soap*, const char*, std::vector<ns3__AttributeSupplierType *> *, const char*);
SOAP_FMAC1 std::vector<ns3__AttributeSupplierType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__AttributeSupplierType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns3__AttributeSupplierType *>  * soap_new_std__vectorTemplateOfPointerTons3__AttributeSupplierType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons3__AttributeSupplierType(soap, n, NULL, NULL, NULL); }

} // namespace ACService


#endif

/* End of ACServiceH.h */
